-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto1_Configurable_PE is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    input2_val : IN STD_LOGIC_VECTOR (31 downto 0);
    MOD_INDEX : IN STD_LOGIC_VECTOR (1 downto 0);
    op : IN STD_LOGIC_VECTOR (1 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Crypto1_Configurable_PE is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_40002001 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000010000000000001";
    constant ap_const_lv31_40012001 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000010010000000000001";
    constant ap_const_lv31_40020001 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000100000000000000001";

attribute shreg_extract : string;
    signal op_read_read_fu_30_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal op_read_reg_148_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_read_reg_148_pp0_iter16_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152 : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal MOD_INDEX_read_reg_152_pp0_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal input2_val_read_reg_159 : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_read_reg_159_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_read_reg_166_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal res1_temp_6_fu_77_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res1_temp_6_reg_173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_81_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_179 : STD_LOGIC_VECTOR (0 downto 0);
    signal res1_temp_4_fu_120_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res1_temp_4_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal res1_temp_7_fu_143_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MUL_MOD_3_fu_67_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal res1_temp_5_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MUL_MOD_3_fu_67_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8_ignore_call0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9_ignore_call0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10_ignore_call0 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11_ignore_call0 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12_ignore_call0 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13_ignore_call0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14_ignore_call0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter15_ignore_call0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter16_ignore_call0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp24 : BOOLEAN;
    signal ap_phi_mux_phi_ln215_phi_fu_57_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_phi_ln215_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln76_cast_fu_93_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal res1_temp_fu_89_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln76_fu_104_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln76_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res1_temp_3_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln89_cast_fu_128_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln89_fu_139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input1_val_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal input2_val_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal MOD_INDEX_int_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal op_int_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Crypto1_MUL_MOD_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        MOD_INDEX : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component Crypto1_mux_3_2_31_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    grp_MUL_MOD_3_fu_67 : component Crypto1_MUL_MOD_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input1_val => input1_val_int_reg,
        input2_val => input2_val_int_reg,
        MOD_INDEX => MOD_INDEX_int_reg,
        ap_return => grp_MUL_MOD_3_fu_67_ap_return,
        ap_ce => grp_MUL_MOD_3_fu_67_ap_ce);

    mux_3_2_31_1_0_U391 : component Crypto1_mux_3_2_31_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        din2_WIDTH => 31,
        din3_WIDTH => 2,
        dout_WIDTH => 31)
    port map (
        din0 => ap_const_lv31_40002001,
        din1 => ap_const_lv31_40012001,
        din2 => ap_const_lv31_40020001,
        din3 => MOD_INDEX_read_reg_152_pp0_iter14_reg,
        dout => zext_ln76_cast_fu_93_p5);

    mux_3_2_31_1_0_U392 : component Crypto1_mux_3_2_31_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        din2_WIDTH => 31,
        din3_WIDTH => 2,
        dout_WIDTH => 31)
    port map (
        din0 => ap_const_lv31_40002001,
        din1 => ap_const_lv31_40012001,
        din2 => ap_const_lv31_40020001,
        din3 => MOD_INDEX_read_reg_152_pp0_iter15_reg,
        dout => zext_ln89_cast_fu_128_p5);





    MOD_INDEX_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            MOD_INDEX_int_reg <= MOD_INDEX;
        end if;
    end process;

    ap_phi_reg_pp0_iter16_phi_ln215_reg_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((op_read_reg_148_pp0_iter14_reg = ap_const_lv2_1) and (tmp_fu_81_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter16_phi_ln215_reg_54 <= res1_temp_6_fu_77_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter16_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter15_phi_ln215_reg_54;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter17_phi_ln215_reg_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((op_read_reg_148_pp0_iter15_reg = ap_const_lv2_1) and (tmp_reg_179 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter17_phi_ln215_reg_54 <= res1_temp_7_fu_143_p2;
                elsif ((not((op_read_reg_148_pp0_iter15_reg = ap_const_lv2_2)) and not((op_read_reg_148_pp0_iter15_reg = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp0_iter17_phi_ln215_reg_54 <= res1_temp_4_reg_183;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter17_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter16_phi_ln215_reg_54;
                end if;
            end if; 
        end if;
    end process;

    input1_val_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            input1_val_int_reg <= input1_val;
        end if;
    end process;

    input2_val_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            input2_val_int_reg <= input2_val;
        end if;
    end process;

    op_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            op_int_reg <= op;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                MOD_INDEX_read_reg_152 <= MOD_INDEX_int_reg;
                MOD_INDEX_read_reg_152_pp0_iter10_reg <= MOD_INDEX_read_reg_152_pp0_iter9_reg;
                MOD_INDEX_read_reg_152_pp0_iter11_reg <= MOD_INDEX_read_reg_152_pp0_iter10_reg;
                MOD_INDEX_read_reg_152_pp0_iter12_reg <= MOD_INDEX_read_reg_152_pp0_iter11_reg;
                MOD_INDEX_read_reg_152_pp0_iter13_reg <= MOD_INDEX_read_reg_152_pp0_iter12_reg;
                MOD_INDEX_read_reg_152_pp0_iter14_reg <= MOD_INDEX_read_reg_152_pp0_iter13_reg;
                MOD_INDEX_read_reg_152_pp0_iter15_reg <= MOD_INDEX_read_reg_152_pp0_iter14_reg;
                MOD_INDEX_read_reg_152_pp0_iter1_reg <= MOD_INDEX_read_reg_152;
                MOD_INDEX_read_reg_152_pp0_iter2_reg <= MOD_INDEX_read_reg_152_pp0_iter1_reg;
                MOD_INDEX_read_reg_152_pp0_iter3_reg <= MOD_INDEX_read_reg_152_pp0_iter2_reg;
                MOD_INDEX_read_reg_152_pp0_iter4_reg <= MOD_INDEX_read_reg_152_pp0_iter3_reg;
                MOD_INDEX_read_reg_152_pp0_iter5_reg <= MOD_INDEX_read_reg_152_pp0_iter4_reg;
                MOD_INDEX_read_reg_152_pp0_iter6_reg <= MOD_INDEX_read_reg_152_pp0_iter5_reg;
                MOD_INDEX_read_reg_152_pp0_iter7_reg <= MOD_INDEX_read_reg_152_pp0_iter6_reg;
                MOD_INDEX_read_reg_152_pp0_iter8_reg <= MOD_INDEX_read_reg_152_pp0_iter7_reg;
                MOD_INDEX_read_reg_152_pp0_iter9_reg <= MOD_INDEX_read_reg_152_pp0_iter8_reg;
                ap_phi_reg_pp0_iter10_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter9_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter11_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter10_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter12_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter11_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter13_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter12_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter14_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter13_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter15_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter14_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter1_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter0_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter2_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter1_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter3_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter2_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter4_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter3_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter5_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter4_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter6_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter5_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter7_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter6_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter8_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter7_phi_ln215_reg_54;
                ap_phi_reg_pp0_iter9_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter8_phi_ln215_reg_54;
                input1_val_read_reg_166 <= input1_val_int_reg;
                input1_val_read_reg_166_pp0_iter10_reg <= input1_val_read_reg_166_pp0_iter9_reg;
                input1_val_read_reg_166_pp0_iter11_reg <= input1_val_read_reg_166_pp0_iter10_reg;
                input1_val_read_reg_166_pp0_iter12_reg <= input1_val_read_reg_166_pp0_iter11_reg;
                input1_val_read_reg_166_pp0_iter13_reg <= input1_val_read_reg_166_pp0_iter12_reg;
                input1_val_read_reg_166_pp0_iter14_reg <= input1_val_read_reg_166_pp0_iter13_reg;
                input1_val_read_reg_166_pp0_iter1_reg <= input1_val_read_reg_166;
                input1_val_read_reg_166_pp0_iter2_reg <= input1_val_read_reg_166_pp0_iter1_reg;
                input1_val_read_reg_166_pp0_iter3_reg <= input1_val_read_reg_166_pp0_iter2_reg;
                input1_val_read_reg_166_pp0_iter4_reg <= input1_val_read_reg_166_pp0_iter3_reg;
                input1_val_read_reg_166_pp0_iter5_reg <= input1_val_read_reg_166_pp0_iter4_reg;
                input1_val_read_reg_166_pp0_iter6_reg <= input1_val_read_reg_166_pp0_iter5_reg;
                input1_val_read_reg_166_pp0_iter7_reg <= input1_val_read_reg_166_pp0_iter6_reg;
                input1_val_read_reg_166_pp0_iter8_reg <= input1_val_read_reg_166_pp0_iter7_reg;
                input1_val_read_reg_166_pp0_iter9_reg <= input1_val_read_reg_166_pp0_iter8_reg;
                input2_val_read_reg_159 <= input2_val_int_reg;
                input2_val_read_reg_159_pp0_iter10_reg <= input2_val_read_reg_159_pp0_iter9_reg;
                input2_val_read_reg_159_pp0_iter11_reg <= input2_val_read_reg_159_pp0_iter10_reg;
                input2_val_read_reg_159_pp0_iter12_reg <= input2_val_read_reg_159_pp0_iter11_reg;
                input2_val_read_reg_159_pp0_iter13_reg <= input2_val_read_reg_159_pp0_iter12_reg;
                input2_val_read_reg_159_pp0_iter14_reg <= input2_val_read_reg_159_pp0_iter13_reg;
                input2_val_read_reg_159_pp0_iter1_reg <= input2_val_read_reg_159;
                input2_val_read_reg_159_pp0_iter2_reg <= input2_val_read_reg_159_pp0_iter1_reg;
                input2_val_read_reg_159_pp0_iter3_reg <= input2_val_read_reg_159_pp0_iter2_reg;
                input2_val_read_reg_159_pp0_iter4_reg <= input2_val_read_reg_159_pp0_iter3_reg;
                input2_val_read_reg_159_pp0_iter5_reg <= input2_val_read_reg_159_pp0_iter4_reg;
                input2_val_read_reg_159_pp0_iter6_reg <= input2_val_read_reg_159_pp0_iter5_reg;
                input2_val_read_reg_159_pp0_iter7_reg <= input2_val_read_reg_159_pp0_iter6_reg;
                input2_val_read_reg_159_pp0_iter8_reg <= input2_val_read_reg_159_pp0_iter7_reg;
                input2_val_read_reg_159_pp0_iter9_reg <= input2_val_read_reg_159_pp0_iter8_reg;
                op_read_reg_148 <= op_int_reg;
                op_read_reg_148_pp0_iter10_reg <= op_read_reg_148_pp0_iter9_reg;
                op_read_reg_148_pp0_iter11_reg <= op_read_reg_148_pp0_iter10_reg;
                op_read_reg_148_pp0_iter12_reg <= op_read_reg_148_pp0_iter11_reg;
                op_read_reg_148_pp0_iter13_reg <= op_read_reg_148_pp0_iter12_reg;
                op_read_reg_148_pp0_iter14_reg <= op_read_reg_148_pp0_iter13_reg;
                op_read_reg_148_pp0_iter15_reg <= op_read_reg_148_pp0_iter14_reg;
                op_read_reg_148_pp0_iter16_reg <= op_read_reg_148_pp0_iter15_reg;
                op_read_reg_148_pp0_iter1_reg <= op_read_reg_148;
                op_read_reg_148_pp0_iter2_reg <= op_read_reg_148_pp0_iter1_reg;
                op_read_reg_148_pp0_iter3_reg <= op_read_reg_148_pp0_iter2_reg;
                op_read_reg_148_pp0_iter4_reg <= op_read_reg_148_pp0_iter3_reg;
                op_read_reg_148_pp0_iter5_reg <= op_read_reg_148_pp0_iter4_reg;
                op_read_reg_148_pp0_iter6_reg <= op_read_reg_148_pp0_iter5_reg;
                op_read_reg_148_pp0_iter7_reg <= op_read_reg_148_pp0_iter6_reg;
                op_read_reg_148_pp0_iter8_reg <= op_read_reg_148_pp0_iter7_reg;
                op_read_reg_148_pp0_iter9_reg <= op_read_reg_148_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_read_reg_148_pp0_iter14_reg = ap_const_lv2_2)) and not((op_read_reg_148_pp0_iter14_reg = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                res1_temp_4_reg_183 <= res1_temp_4_fu_120_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_read_reg_148_pp0_iter15_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                res1_temp_5_reg_193 <= grp_MUL_MOD_3_fu_67_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_read_reg_148_pp0_iter14_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                res1_temp_6_reg_173 <= res1_temp_6_fu_77_p2;
                tmp_reg_179 <= res1_temp_6_fu_77_p2(31 downto 31);
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter15_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter16_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_phi_mux_phi_ln215_phi_fu_57_p8_assign_proc : process(op_read_reg_148_pp0_iter16_reg, res1_temp_5_reg_193, ap_phi_reg_pp0_iter17_phi_ln215_reg_54)
    begin
        if ((op_read_reg_148_pp0_iter16_reg = ap_const_lv2_2)) then 
            ap_phi_mux_phi_ln215_phi_fu_57_p8 <= res1_temp_5_reg_193;
        else 
            ap_phi_mux_phi_ln215_phi_fu_57_p8 <= ap_phi_reg_pp0_iter17_phi_ln215_reg_54;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_phi_ln215_reg_54 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_return <= ap_phi_mux_phi_ln215_phi_fu_57_p8;

    grp_MUL_MOD_3_fu_67_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp24)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp24)) then 
            grp_MUL_MOD_3_fu_67_ap_ce <= ap_const_logic_1;
        else 
            grp_MUL_MOD_3_fu_67_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln76_fu_108_p2 <= "1" when (signed(res1_temp_fu_89_p2) < signed(zext_ln76_fu_104_p1)) else "0";
    op_read_read_fu_30_p2 <= op_int_reg;
    res1_temp_3_fu_114_p2 <= std_logic_vector(unsigned(res1_temp_fu_89_p2) - unsigned(zext_ln76_fu_104_p1));
    res1_temp_4_fu_120_p3 <= 
        res1_temp_fu_89_p2 when (icmp_ln76_fu_108_p2(0) = '1') else 
        res1_temp_3_fu_114_p2;
    res1_temp_6_fu_77_p2 <= std_logic_vector(unsigned(input1_val_read_reg_166_pp0_iter14_reg) - unsigned(input2_val_read_reg_159_pp0_iter14_reg));
    res1_temp_7_fu_143_p2 <= std_logic_vector(unsigned(zext_ln89_fu_139_p1) + unsigned(res1_temp_6_reg_173));
    res1_temp_fu_89_p2 <= std_logic_vector(unsigned(input2_val_read_reg_159_pp0_iter14_reg) + unsigned(input1_val_read_reg_166_pp0_iter14_reg));
    tmp_fu_81_p3 <= res1_temp_6_fu_77_p2(31 downto 31);
    zext_ln76_fu_104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln76_cast_fu_93_p5),32));
    zext_ln89_fu_139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln89_cast_fu_128_p5),32));
end behav;
