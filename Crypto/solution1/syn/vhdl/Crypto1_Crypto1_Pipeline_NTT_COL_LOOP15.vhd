-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto1_Crypto1_Pipeline_NTT_COL_LOOP15 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp_305 : IN STD_LOGIC_VECTOR (9 downto 0);
    DataRAM_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_ce0 : OUT STD_LOGIC;
    DataRAM_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_1_ce0 : OUT STD_LOGIC;
    DataRAM_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_2_ce0 : OUT STD_LOGIC;
    DataRAM_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_3_ce0 : OUT STD_LOGIC;
    DataRAM_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_4_ce0 : OUT STD_LOGIC;
    DataRAM_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_5_ce0 : OUT STD_LOGIC;
    DataRAM_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_6_ce0 : OUT STD_LOGIC;
    DataRAM_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_7_ce0 : OUT STD_LOGIC;
    DataRAM_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ReadData_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ReadData_ce0 : OUT STD_LOGIC;
    ReadData_we0 : OUT STD_LOGIC;
    ReadData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ReadData_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ReadData_1_ce0 : OUT STD_LOGIC;
    ReadData_1_we0 : OUT STD_LOGIC;
    ReadData_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ReadData_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ReadData_2_ce0 : OUT STD_LOGIC;
    ReadData_2_we0 : OUT STD_LOGIC;
    ReadData_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ReadData_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ReadData_3_ce0 : OUT STD_LOGIC;
    ReadData_3_we0 : OUT STD_LOGIC;
    ReadData_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    select_ln291_11 : IN STD_LOGIC_VECTOR (0 downto 0);
    trunc_ln293_2 : IN STD_LOGIC_VECTOR (5 downto 0);
    shl_2_cast_mid2 : IN STD_LOGIC_VECTOR (5 downto 0);
    mul_ln296_2 : IN STD_LOGIC_VECTOR (9 downto 0);
    ReadAddr_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ReadAddr_ce0 : OUT STD_LOGIC;
    ReadAddr_we0 : OUT STD_LOGIC;
    ReadAddr_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    add_ln302_1 : IN STD_LOGIC_VECTOR (41 downto 0) );
end;


architecture behav of Crypto1_Crypto1_Pipeline_NTT_COL_LOOP15 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln296_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_367_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln291_11_read_reg_548 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln291_11_read_read_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_reg_557 : STD_LOGIC_VECTOR (6 downto 0);
    signal l_reg_557_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln299_1_fu_442_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln299_1_reg_570 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_457_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_576 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_576_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln296_5_reg_660 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln302_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal l_6_cast82_fu_453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln300_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln296_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_6_fu_94 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln296_fu_410_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_l : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_367_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_483_fu_416_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln299_fu_420_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln299_fu_426_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln299_fu_432_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln299_fu_438_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_484_fu_460_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_463_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln300_fu_482_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln300_fu_485_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_65_fu_490_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_224 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component Crypto1_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto1_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_8_3_32_1_1_U320 : component Crypto1_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q0,
        din1 => DataRAM_1_q0,
        din2 => DataRAM_2_q0,
        din3 => DataRAM_3_q0,
        din4 => DataRAM_4_q0,
        din5 => DataRAM_5_q0,
        din6 => DataRAM_6_q0,
        din7 => DataRAM_7_q0,
        din8 => grp_fu_367_p9,
        dout => grp_fu_367_p10);

    flow_control_loop_pipe_sequential_init_U : component Crypto1_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    l_6_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln296_fu_404_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    l_6_fu_94 <= add_ln296_fu_410_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    l_6_fu_94 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln296_fu_404_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_read_fu_122_p2 = ap_const_lv1_1))) then
                add_ln299_1_reg_570 <= add_ln299_1_fu_442_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                empty_reg_576 <= empty_fu_457_p1;
                l_reg_557 <= ap_sig_allocacmp_l;
                l_reg_557_pp0_iter1_reg <= l_reg_557;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                empty_reg_576_pp0_iter2_reg <= empty_reg_576;
                lshr_ln296_5_reg_660 <= l_reg_557_pp0_iter1_reg(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then
                reg_388 <= grp_fu_367_p10;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    DataRAM_1_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_1_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_1_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_1_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_1_ce0 <= ap_const_logic_1;
        else 
            DataRAM_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_2_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_2_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_2_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_2_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_2_ce0 <= ap_const_logic_1;
        else 
            DataRAM_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_3_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_3_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_3_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_3_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_3_ce0 <= ap_const_logic_1;
        else 
            DataRAM_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_4_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_4_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_4_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_4_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_4_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_4_ce0 <= ap_const_logic_1;
        else 
            DataRAM_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_5_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_5_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_5_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_5_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_5_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_5_ce0 <= ap_const_logic_1;
        else 
            DataRAM_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_6_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_6_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_6_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_6_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_6_ce0 <= ap_const_logic_1;
        else 
            DataRAM_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_7_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_7_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_7_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_7_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_7_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_7_ce0 <= ap_const_logic_1;
        else 
            DataRAM_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_address0_assign_proc : process(select_ln291_11_read_reg_548, zext_ln302_fu_470_p1, zext_ln300_fu_498_p1, ap_condition_224)
    begin
        if ((ap_const_boolean_1 = ap_condition_224)) then
            if ((select_ln291_11_read_reg_548 = ap_const_lv1_1)) then 
                DataRAM_address0 <= zext_ln300_fu_498_p1(13 - 1 downto 0);
            elsif ((select_ln291_11_read_reg_548 = ap_const_lv1_0)) then 
                DataRAM_address0 <= zext_ln302_fu_470_p1(13 - 1 downto 0);
            else 
                DataRAM_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            DataRAM_ce0 <= ap_const_logic_1;
        else 
            DataRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadAddr_address0 <= l_6_cast82_fu_453_p1(6 - 1 downto 0);

    ReadAddr_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ReadAddr_ce0 <= ap_const_logic_1;
        else 
            ReadAddr_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadAddr_d0 <= add_ln299_1_reg_570;

    ReadAddr_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1))) then 
            ReadAddr_we0 <= ap_const_logic_1;
        else 
            ReadAddr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_1_address0 <= zext_ln296_fu_529_p1(4 - 1 downto 0);

    ReadData_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_1) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_1) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_1_ce0 <= ap_const_logic_1;
        else 
            ReadData_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_1_d0 <= reg_388;

    ReadData_1_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_1) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_1) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_1_we0 <= ap_const_logic_1;
        else 
            ReadData_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_2_address0 <= zext_ln296_fu_529_p1(4 - 1 downto 0);

    ReadData_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_2) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_2) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_2_ce0 <= ap_const_logic_1;
        else 
            ReadData_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_2_d0 <= reg_388;

    ReadData_2_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_2) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_2) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_2_we0 <= ap_const_logic_1;
        else 
            ReadData_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_3_address0 <= zext_ln296_fu_529_p1(4 - 1 downto 0);

    ReadData_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_3) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_3) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_3_ce0 <= ap_const_logic_1;
        else 
            ReadData_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_3_d0 <= reg_388;

    ReadData_3_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_3) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_3) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_3_we0 <= ap_const_logic_1;
        else 
            ReadData_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_address0 <= zext_ln296_fu_529_p1(4 - 1 downto 0);

    ReadData_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_ce0 <= ap_const_logic_1;
        else 
            ReadData_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadData_d0 <= reg_388;

    ReadData_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, select_ln291_11_read_reg_548, empty_reg_576_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_0) and (select_ln291_11_read_reg_548 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_reg_576_pp0_iter2_reg = ap_const_lv2_0) and (select_ln291_11_read_reg_548 = ap_const_lv1_0)))) then 
            ReadData_we0 <= ap_const_logic_1;
        else 
            ReadData_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln296_fu_410_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_l) + unsigned(ap_const_lv7_1));
    add_ln299_1_fu_442_p2 <= std_logic_vector(unsigned(zext_ln299_fu_438_p1) + unsigned(mul_ln296_2));
    add_ln299_fu_426_p2 <= std_logic_vector(unsigned(shl_2_cast_mid2) + unsigned(ap_const_lv6_3F));
    add_ln300_fu_485_p2 <= std_logic_vector(unsigned(trunc_ln300_fu_482_p1) + unsigned(add_ln299_1_reg_570));
    and_ln299_fu_432_p2 <= (sub_ln299_fu_420_p2 and add_ln299_fu_426_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_224_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_224 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln296_fu_404_p2)
    begin
        if (((icmp_ln296_fu_404_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_l_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, l_6_fu_94, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_l <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_l <= l_6_fu_94;
        end if; 
    end process;

    empty_483_fu_416_p1 <= ap_sig_allocacmp_l(6 - 1 downto 0);
    empty_484_fu_460_p1 <= l_reg_557(3 - 1 downto 0);
    empty_fu_457_p1 <= l_reg_557(2 - 1 downto 0);
    grp_fu_367_p9 <= l_reg_557_pp0_iter1_reg(5 downto 3);
    icmp_ln296_fu_404_p2 <= "1" when (ap_sig_allocacmp_l = ap_const_lv7_40) else "0";
    l_6_cast82_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_reg_557),64));
    select_ln291_11_read_read_fu_122_p2 <= select_ln291_11;
    select_ln291_11_read_reg_548 <= select_ln291_11;
    sub_ln299_fu_420_p2 <= std_logic_vector(unsigned(empty_483_fu_416_p1) - unsigned(trunc_ln293_2));
    tmp_65_fu_490_p3 <= (add_ln300_fu_485_p2 & empty_484_fu_460_p1);
    tmp_s_fu_463_p3 <= (tmp_305 & empty_484_fu_460_p1);
    trunc_ln300_fu_482_p1 <= add_ln302_1(10 - 1 downto 0);
    zext_ln296_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln296_5_reg_660),64));
    zext_ln299_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln299_fu_432_p2),10));
    zext_ln300_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_490_p3),64));
    zext_ln302_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_463_p3),64));
end behav;
