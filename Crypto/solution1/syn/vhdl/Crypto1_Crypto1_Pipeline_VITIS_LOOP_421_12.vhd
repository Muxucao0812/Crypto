-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto1_Crypto1_Pipeline_VITIS_LOOP_421_12 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp_264 : IN STD_LOGIC_VECTOR (9 downto 0);
    DataRAM_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_ce0 : OUT STD_LOGIC;
    DataRAM_we0 : OUT STD_LOGIC;
    DataRAM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_1_ce0 : OUT STD_LOGIC;
    DataRAM_1_we0 : OUT STD_LOGIC;
    DataRAM_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_2_ce0 : OUT STD_LOGIC;
    DataRAM_2_we0 : OUT STD_LOGIC;
    DataRAM_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_3_ce0 : OUT STD_LOGIC;
    DataRAM_3_we0 : OUT STD_LOGIC;
    DataRAM_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_4_ce0 : OUT STD_LOGIC;
    DataRAM_4_we0 : OUT STD_LOGIC;
    DataRAM_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_5_ce0 : OUT STD_LOGIC;
    DataRAM_5_we0 : OUT STD_LOGIC;
    DataRAM_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_6_ce0 : OUT STD_LOGIC;
    DataRAM_6_we0 : OUT STD_LOGIC;
    DataRAM_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_7_ce0 : OUT STD_LOGIC;
    DataRAM_7_we0 : OUT STD_LOGIC;
    DataRAM_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OutputIndex_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OutputIndex_ce0 : OUT STD_LOGIC;
    OutputIndex_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    NTTData_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    NTTData_ce0 : OUT STD_LOGIC;
    NTTData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    NTTData_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    NTTData_1_ce0 : OUT STD_LOGIC;
    NTTData_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    NTTData_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    NTTData_2_ce0 : OUT STD_LOGIC;
    NTTData_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    NTTData_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    NTTData_3_ce0 : OUT STD_LOGIC;
    NTTData_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln363_2 : IN STD_LOGIC_VECTOR (0 downto 0);
    ReadAddr_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ReadAddr_ce0 : OUT STD_LOGIC;
    ReadAddr_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    sub_ln372 : IN STD_LOGIC_VECTOR (40 downto 0) );
end;


architecture behav of Crypto1_Crypto1_Pipeline_VITIS_LOOP_421_12 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln421_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal select_ln363_2_read_reg_493 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln426_fu_362_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln426_reg_502 : STD_LOGIC_VECTOR (9 downto 0);
    signal l_13_cast91_fu_386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_13_cast91_reg_511 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_391_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_516 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_516_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_516_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln_reg_522 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln_reg_522_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln_reg_522_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln426_3_fu_410_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln426_3_reg_531 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_432_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln426_fu_445_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln426_reg_573 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln426_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln424_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln426_2_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_fu_94 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln421_fu_380_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_l_3 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_fu_414_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_450_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_52_fu_468_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_423 : BOOLEAN;
    signal ap_condition_426 : BOOLEAN;
    signal ap_condition_429 : BOOLEAN;
    signal ap_condition_432 : BOOLEAN;
    signal ap_condition_435 : BOOLEAN;
    signal ap_condition_438 : BOOLEAN;
    signal ap_condition_441 : BOOLEAN;
    signal ap_condition_444 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component Crypto1_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto1_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_4_2_32_1_1_U74 : component Crypto1_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => NTTData_q0,
        din1 => NTTData_1_q0,
        din2 => NTTData_2_q0,
        din3 => NTTData_3_q0,
        din4 => trunc_ln426_3_reg_531,
        dout => tmp_18_fu_432_p6);

    flow_control_loop_pipe_sequential_init_U : component Crypto1_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    l_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln421_fu_374_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    l_fu_94 <= add_ln421_fu_380_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    l_fu_94 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln363_2_read_reg_493 = ap_const_lv1_0))) then
                add_ln426_reg_573 <= add_ln426_fu_445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                empty_reg_516_pp0_iter1_reg <= empty_reg_516;
                trunc_ln426_3_reg_531 <= trunc_ln426_3_fu_410_p1;
                trunc_ln426_reg_502 <= trunc_ln426_fu_362_p1;
                trunc_ln_reg_522_pp0_iter1_reg <= trunc_ln_reg_522;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln421_fu_374_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_reg_516 <= empty_fu_391_p1;
                    l_13_cast91_reg_511(6 downto 0) <= l_13_cast91_fu_386_p1(6 downto 0);
                trunc_ln_reg_522 <= ap_sig_allocacmp_l_3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                empty_reg_516_pp0_iter2_reg <= empty_reg_516_pp0_iter1_reg;
                tmp_18_reg_561 <= tmp_18_fu_432_p6;
                trunc_ln_reg_522_pp0_iter2_reg <= trunc_ln_reg_522_pp0_iter1_reg;
            end if;
        end if;
    end process;
    l_13_cast91_reg_511(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    DataRAM_1_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_423)
    begin
        if ((ap_const_boolean_1 = ap_condition_423)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_1_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_1_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_1_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_1) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_1) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_1_ce0 <= ap_const_logic_1;
        else 
            DataRAM_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_1_d0 <= tmp_18_reg_561;

    DataRAM_1_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_1) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_1) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_1_we0 <= ap_const_logic_1;
        else 
            DataRAM_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_2_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_426)
    begin
        if ((ap_const_boolean_1 = ap_condition_426)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_2_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_2_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_2_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_2) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_2) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_2_ce0 <= ap_const_logic_1;
        else 
            DataRAM_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_2_d0 <= tmp_18_reg_561;

    DataRAM_2_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_2) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_2) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_2_we0 <= ap_const_logic_1;
        else 
            DataRAM_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_429)
    begin
        if ((ap_const_boolean_1 = ap_condition_429)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_3_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_3_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_3_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_3_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_3) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_3) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_3_ce0 <= ap_const_logic_1;
        else 
            DataRAM_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_3_d0 <= tmp_18_reg_561;

    DataRAM_3_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_3) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_3) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_3_we0 <= ap_const_logic_1;
        else 
            DataRAM_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_4_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_432)
    begin
        if ((ap_const_boolean_1 = ap_condition_432)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_4_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_4_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_4_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_4_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_4) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_4) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_4_ce0 <= ap_const_logic_1;
        else 
            DataRAM_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_4_d0 <= tmp_18_reg_561;

    DataRAM_4_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_4) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_4) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_4_we0 <= ap_const_logic_1;
        else 
            DataRAM_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_5_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_435)
    begin
        if ((ap_const_boolean_1 = ap_condition_435)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_5_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_5_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_5_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_5_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_5) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_5) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_5_ce0 <= ap_const_logic_1;
        else 
            DataRAM_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_5_d0 <= tmp_18_reg_561;

    DataRAM_5_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_5) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_5) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_5_we0 <= ap_const_logic_1;
        else 
            DataRAM_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_438)
    begin
        if ((ap_const_boolean_1 = ap_condition_438)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_6_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_6_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_6_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_6_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_6) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_6) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_6_ce0 <= ap_const_logic_1;
        else 
            DataRAM_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_6_d0 <= tmp_18_reg_561;

    DataRAM_6_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_6) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_6) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_6_we0 <= ap_const_logic_1;
        else 
            DataRAM_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_7_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_441)
    begin
        if ((ap_const_boolean_1 = ap_condition_441)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_7_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_7_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_7_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_7_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_7) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_7) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_7_ce0 <= ap_const_logic_1;
        else 
            DataRAM_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_7_d0 <= tmp_18_reg_561;

    DataRAM_7_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_7) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_7) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_7_we0 <= ap_const_logic_1;
        else 
            DataRAM_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_address0_assign_proc : process(select_ln363_2_read_reg_493, zext_ln424_fu_456_p1, zext_ln426_2_fu_474_p1, ap_condition_444)
    begin
        if ((ap_const_boolean_1 = ap_condition_444)) then
            if ((select_ln363_2_read_reg_493 = ap_const_lv1_1)) then 
                DataRAM_address0 <= zext_ln424_fu_456_p1(13 - 1 downto 0);
            elsif ((select_ln363_2_read_reg_493 = ap_const_lv1_0)) then 
                DataRAM_address0 <= zext_ln426_2_fu_474_p1(13 - 1 downto 0);
            else 
                DataRAM_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            DataRAM_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_0) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_0) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_ce0 <= ap_const_logic_1;
        else 
            DataRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_d0 <= tmp_18_reg_561;

    DataRAM_we0_assign_proc : process(ap_enable_reg_pp0_iter3, select_ln363_2_read_reg_493, ap_block_pp0_stage0_11001, trunc_ln_reg_522_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_0) and (select_ln363_2_read_reg_493 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_0) and (select_ln363_2_read_reg_493 = ap_const_lv1_0)))) then 
            DataRAM_we0 <= ap_const_logic_1;
        else 
            DataRAM_we0 <= ap_const_logic_0;
        end if; 
    end process;

    NTTData_1_address0 <= zext_ln426_fu_424_p1(4 - 1 downto 0);

    NTTData_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            NTTData_1_ce0 <= ap_const_logic_1;
        else 
            NTTData_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    NTTData_2_address0 <= zext_ln426_fu_424_p1(4 - 1 downto 0);

    NTTData_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            NTTData_2_ce0 <= ap_const_logic_1;
        else 
            NTTData_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    NTTData_3_address0 <= zext_ln426_fu_424_p1(4 - 1 downto 0);

    NTTData_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            NTTData_3_ce0 <= ap_const_logic_1;
        else 
            NTTData_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    NTTData_address0 <= zext_ln426_fu_424_p1(4 - 1 downto 0);

    NTTData_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            NTTData_ce0 <= ap_const_logic_1;
        else 
            NTTData_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    OutputIndex_address0 <= l_13_cast91_fu_386_p1(6 - 1 downto 0);

    OutputIndex_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OutputIndex_ce0 <= ap_const_logic_1;
        else 
            OutputIndex_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ReadAddr_address0 <= l_13_cast91_reg_511(6 - 1 downto 0);

    ReadAddr_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ReadAddr_ce0 <= ap_const_logic_1;
        else 
            ReadAddr_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln421_fu_380_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_l_3) + unsigned(ap_const_lv7_1));
    add_ln426_fu_445_p2 <= std_logic_vector(unsigned(trunc_ln426_reg_502) + unsigned(ReadAddr_q0));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_423_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_423 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_1));
    end process;


    ap_condition_426_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_426 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_2));
    end process;


    ap_condition_429_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_429 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_3));
    end process;


    ap_condition_432_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_432 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_4));
    end process;


    ap_condition_435_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_435 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_5));
    end process;


    ap_condition_438_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_438 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_6));
    end process;


    ap_condition_441_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_441 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_7));
    end process;


    ap_condition_444_assign_proc : process(ap_enable_reg_pp0_iter3, trunc_ln_reg_522_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
                ap_condition_444 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln_reg_522_pp0_iter2_reg = ap_const_lv3_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln421_fu_374_p2)
    begin
        if (((icmp_ln421_fu_374_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_l_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, l_fu_94, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_l_3 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_l_3 <= l_fu_94;
        end if; 
    end process;

    empty_fu_391_p1 <= ap_sig_allocacmp_l_3(3 - 1 downto 0);
    icmp_ln421_fu_374_p2 <= "1" when (ap_sig_allocacmp_l_3 = ap_const_lv7_40) else "0";
    l_13_cast91_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_l_3),64));
    lshr_ln_fu_414_p4 <= OutputIndex_q0(5 downto 2);
    select_ln363_2_read_reg_493 <= select_ln363_2;
    tmp_52_fu_468_p3 <= (add_ln426_reg_573 & empty_reg_516_pp0_iter2_reg);
    tmp_s_fu_450_p3 <= (tmp_264 & empty_reg_516_pp0_iter2_reg);
    trunc_ln426_3_fu_410_p1 <= OutputIndex_q0(2 - 1 downto 0);
    trunc_ln426_fu_362_p1 <= sub_ln372(10 - 1 downto 0);
    zext_ln424_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_450_p3),64));
    zext_ln426_2_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_468_p3),64));
    zext_ln426_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_414_p4),64));
end behav;
