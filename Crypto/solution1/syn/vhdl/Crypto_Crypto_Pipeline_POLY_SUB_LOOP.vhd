-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto_Crypto_Pipeline_POLY_SUB_LOOP is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    DataRAM_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_ce0 : OUT STD_LOGIC;
    DataRAM_we0 : OUT STD_LOGIC;
    DataRAM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_ce1 : OUT STD_LOGIC;
    DataRAM_we1 : OUT STD_LOGIC;
    DataRAM_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_3_ce0 : OUT STD_LOGIC;
    DataRAM_3_we0 : OUT STD_LOGIC;
    DataRAM_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_3_ce1 : OUT STD_LOGIC;
    DataRAM_3_we1 : OUT STD_LOGIC;
    DataRAM_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_6_ce0 : OUT STD_LOGIC;
    DataRAM_6_we0 : OUT STD_LOGIC;
    DataRAM_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_6_ce1 : OUT STD_LOGIC;
    DataRAM_6_we1 : OUT STD_LOGIC;
    DataRAM_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_9_ce0 : OUT STD_LOGIC;
    DataRAM_9_we0 : OUT STD_LOGIC;
    DataRAM_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_9_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    DataRAM_9_ce1 : OUT STD_LOGIC;
    DataRAM_9_we1 : OUT STD_LOGIC;
    DataRAM_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    RAMSel_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    RAMSel1_cast : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of Crypto_Crypto_Pipeline_POLY_SUB_LOOP is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_40002001 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000010000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal tmp_reg_480 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal grp_fu_242_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_fu_255_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_330_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal RAMSel_cast_read_reg_474 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_390_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_406_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_reg_484 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_addr_reg_490 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_3_addr_reg_495 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_6_addr_reg_500 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_9_addr_reg_505 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_addr_1_reg_510 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_3_addr_1_reg_515 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_6_addr_1_reg_520 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_9_addr_1_reg_525 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_addr_2_reg_530 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_addr_2_reg_530_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_3_addr_2_reg_535 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_3_addr_2_reg_535_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_6_addr_2_reg_540 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_6_addr_2_reg_540_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_9_addr_2_reg_545 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_9_addr_2_reg_545_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_addr_3_reg_550 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_addr_3_reg_550_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_3_addr_3_reg_555 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_3_addr_3_reg_555_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_6_addr_3_reg_560 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_6_addr_3_reg_560_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_9_addr_3_reg_565 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataRAM_9_addr_3_reg_565_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal j_5_cast72_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln135_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_1_fu_440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln135_2_fu_453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_5_fu_62 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln132_fu_424_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_316_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln132_fu_410_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln132_1_fu_435_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln132_2_fu_448_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Crypto_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_4_2_32_1_1_U215 : component Crypto_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q1,
        din1 => DataRAM_3_q1,
        din2 => DataRAM_6_q1,
        din3 => DataRAM_9_q1,
        din4 => RAMSel_cast,
        dout => grp_fu_242_p6);

    mux_4_2_32_1_1_U216 : component Crypto_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q1,
        din1 => DataRAM_3_q1,
        din2 => DataRAM_6_q1,
        din3 => DataRAM_9_q1,
        din4 => RAMSel1_cast,
        dout => grp_fu_255_p6);

    mux_4_2_32_1_1_U217 : component Crypto_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q0,
        din1 => DataRAM_3_q0,
        din2 => DataRAM_6_q0,
        din3 => DataRAM_9_q0,
        din4 => RAMSel_cast,
        dout => grp_fu_268_p6);

    mux_4_2_32_1_1_U218 : component Crypto_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q0,
        din1 => DataRAM_3_q0,
        din2 => DataRAM_6_q0,
        din3 => DataRAM_9_q0,
        din4 => RAMSel1_cast,
        dout => grp_fu_281_p6);

    flow_control_loop_pipe_sequential_init_U : component Crypto_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    j_5_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_fu_390_p3 = ap_const_lv1_0))) then 
                    j_5_fu_62 <= add_ln132_fu_424_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_5_fu_62 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_fu_390_p3 = ap_const_lv1_0))) then
                    DataRAM_3_addr_1_reg_515(11 downto 1) <= zext_ln135_fu_416_p1(12 - 1 downto 0)(11 downto 1);
                DataRAM_3_addr_reg_495 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
                    DataRAM_6_addr_1_reg_520(11 downto 1) <= zext_ln135_fu_416_p1(12 - 1 downto 0)(11 downto 1);
                DataRAM_6_addr_reg_500 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
                    DataRAM_9_addr_1_reg_525(11 downto 1) <= zext_ln135_fu_416_p1(12 - 1 downto 0)(11 downto 1);
                DataRAM_9_addr_reg_505 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
                    DataRAM_addr_1_reg_510(11 downto 1) <= zext_ln135_fu_416_p1(12 - 1 downto 0)(11 downto 1);
                DataRAM_addr_reg_490 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
                empty_reg_484 <= empty_fu_406_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    DataRAM_3_addr_2_reg_535(0) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(0);    DataRAM_3_addr_2_reg_535(11 downto 2) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_3_addr_3_reg_555(11 downto 2) <= zext_ln135_2_fu_453_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_6_addr_2_reg_540(0) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(0);    DataRAM_6_addr_2_reg_540(11 downto 2) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_6_addr_3_reg_560(11 downto 2) <= zext_ln135_2_fu_453_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_9_addr_2_reg_545(0) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(0);    DataRAM_9_addr_2_reg_545(11 downto 2) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_9_addr_3_reg_565(11 downto 2) <= zext_ln135_2_fu_453_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_addr_2_reg_530(0) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(0);    DataRAM_addr_2_reg_530(11 downto 2) <= zext_ln135_1_fu_440_p1(12 - 1 downto 0)(11 downto 2);
                    DataRAM_addr_3_reg_550(11 downto 2) <= zext_ln135_2_fu_453_p1(12 - 1 downto 0)(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    DataRAM_3_addr_2_reg_535_pp0_iter1_reg(0) <= DataRAM_3_addr_2_reg_535(0);    DataRAM_3_addr_2_reg_535_pp0_iter1_reg(11 downto 2) <= DataRAM_3_addr_2_reg_535(11 downto 2);
                    DataRAM_3_addr_3_reg_555_pp0_iter1_reg(11 downto 2) <= DataRAM_3_addr_3_reg_555(11 downto 2);
                    DataRAM_6_addr_2_reg_540_pp0_iter1_reg(0) <= DataRAM_6_addr_2_reg_540(0);    DataRAM_6_addr_2_reg_540_pp0_iter1_reg(11 downto 2) <= DataRAM_6_addr_2_reg_540(11 downto 2);
                    DataRAM_6_addr_3_reg_560_pp0_iter1_reg(11 downto 2) <= DataRAM_6_addr_3_reg_560(11 downto 2);
                    DataRAM_9_addr_2_reg_545_pp0_iter1_reg(0) <= DataRAM_9_addr_2_reg_545(0);    DataRAM_9_addr_2_reg_545_pp0_iter1_reg(11 downto 2) <= DataRAM_9_addr_2_reg_545(11 downto 2);
                    DataRAM_9_addr_3_reg_565_pp0_iter1_reg(11 downto 2) <= DataRAM_9_addr_3_reg_565(11 downto 2);
                    DataRAM_addr_2_reg_530_pp0_iter1_reg(0) <= DataRAM_addr_2_reg_530(0);    DataRAM_addr_2_reg_530_pp0_iter1_reg(11 downto 2) <= DataRAM_addr_2_reg_530(11 downto 2);
                    DataRAM_addr_3_reg_550_pp0_iter1_reg(11 downto 2) <= DataRAM_addr_3_reg_550(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_294 <= grp_fu_242_p6;
                reg_298 <= grp_fu_255_p6;
                reg_302 <= grp_fu_268_p6;
                reg_306 <= grp_fu_281_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_366 <= grp_fu_330_p3;
                reg_374 <= grp_fu_358_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_480 <= ap_sig_allocacmp_j(12 downto 12);
            end if;
        end if;
    end process;
    DataRAM_addr_1_reg_510(0) <= '1';
    DataRAM_3_addr_1_reg_515(0) <= '1';
    DataRAM_6_addr_1_reg_520(0) <= '1';
    DataRAM_9_addr_1_reg_525(0) <= '1';
    DataRAM_addr_2_reg_530(1) <= '1';
    DataRAM_addr_2_reg_530_pp0_iter1_reg(1) <= '1';
    DataRAM_3_addr_2_reg_535(1) <= '1';
    DataRAM_3_addr_2_reg_535_pp0_iter1_reg(1) <= '1';
    DataRAM_6_addr_2_reg_540(1) <= '1';
    DataRAM_6_addr_2_reg_540_pp0_iter1_reg(1) <= '1';
    DataRAM_9_addr_2_reg_545(1) <= '1';
    DataRAM_9_addr_2_reg_545_pp0_iter1_reg(1) <= '1';
    DataRAM_addr_3_reg_550(1 downto 0) <= "11";
    DataRAM_addr_3_reg_550_pp0_iter1_reg(1 downto 0) <= "11";
    DataRAM_3_addr_3_reg_555(1 downto 0) <= "11";
    DataRAM_3_addr_3_reg_555_pp0_iter1_reg(1 downto 0) <= "11";
    DataRAM_6_addr_3_reg_560(1 downto 0) <= "11";
    DataRAM_6_addr_3_reg_560_pp0_iter1_reg(1 downto 0) <= "11";
    DataRAM_9_addr_3_reg_565(1 downto 0) <= "11";
    DataRAM_9_addr_3_reg_565_pp0_iter1_reg(1 downto 0) <= "11";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter0_stage2, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    DataRAM_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_3_addr_1_reg_515, DataRAM_3_addr_3_reg_555_pp0_iter1_reg, ap_block_pp0_stage0, zext_ln135_fu_416_p1, ap_block_pp0_stage1, zext_ln135_2_fu_453_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_3_address0 <= DataRAM_3_addr_3_reg_555_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_3_address0 <= DataRAM_3_addr_1_reg_515;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_3_address0 <= zext_ln135_2_fu_453_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_3_address0 <= zext_ln135_fu_416_p1(12 - 1 downto 0);
        else 
            DataRAM_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_3_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_3_addr_reg_495, DataRAM_3_addr_2_reg_535_pp0_iter1_reg, j_5_cast72_fu_398_p1, ap_block_pp0_stage0, zext_ln135_1_fu_440_p1, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_3_address1 <= DataRAM_3_addr_2_reg_535_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_3_address1 <= DataRAM_3_addr_reg_495;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_3_address1 <= zext_ln135_1_fu_440_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_3_address1 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
        else 
            DataRAM_3_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_3_ce0 <= ap_const_logic_1;
        else 
            DataRAM_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_3_ce1 <= ap_const_logic_1;
        else 
            DataRAM_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_3_d0 <= reg_374;
    DataRAM_3_d1 <= reg_366;

    DataRAM_3_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_lv2_1 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_1 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_3_we0 <= ap_const_logic_1;
        else 
            DataRAM_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_lv2_1 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_1 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_3_we1 <= ap_const_logic_1;
        else 
            DataRAM_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_6_addr_1_reg_520, DataRAM_6_addr_3_reg_560_pp0_iter1_reg, ap_block_pp0_stage0, zext_ln135_fu_416_p1, ap_block_pp0_stage1, zext_ln135_2_fu_453_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_6_address0 <= DataRAM_6_addr_3_reg_560_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_6_address0 <= DataRAM_6_addr_1_reg_520;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_6_address0 <= zext_ln135_2_fu_453_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_6_address0 <= zext_ln135_fu_416_p1(12 - 1 downto 0);
        else 
            DataRAM_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_6_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_6_addr_reg_500, DataRAM_6_addr_2_reg_540_pp0_iter1_reg, j_5_cast72_fu_398_p1, ap_block_pp0_stage0, zext_ln135_1_fu_440_p1, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_6_address1 <= DataRAM_6_addr_2_reg_540_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_6_address1 <= DataRAM_6_addr_reg_500;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_6_address1 <= zext_ln135_1_fu_440_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_6_address1 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
        else 
            DataRAM_6_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_6_ce0 <= ap_const_logic_1;
        else 
            DataRAM_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_6_ce1 <= ap_const_logic_1;
        else 
            DataRAM_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_6_d0 <= reg_374;
    DataRAM_6_d1 <= reg_366;

    DataRAM_6_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_lv2_2 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_2 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_6_we0 <= ap_const_logic_1;
        else 
            DataRAM_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_lv2_2 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_2 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_6_we1 <= ap_const_logic_1;
        else 
            DataRAM_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_9_addr_1_reg_525, DataRAM_9_addr_3_reg_565_pp0_iter1_reg, ap_block_pp0_stage0, zext_ln135_fu_416_p1, ap_block_pp0_stage1, zext_ln135_2_fu_453_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_9_address0 <= DataRAM_9_addr_3_reg_565_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_9_address0 <= DataRAM_9_addr_1_reg_525;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_9_address0 <= zext_ln135_2_fu_453_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_9_address0 <= zext_ln135_fu_416_p1(12 - 1 downto 0);
        else 
            DataRAM_9_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_9_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_9_addr_reg_505, DataRAM_9_addr_2_reg_545_pp0_iter1_reg, j_5_cast72_fu_398_p1, ap_block_pp0_stage0, zext_ln135_1_fu_440_p1, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_9_address1 <= DataRAM_9_addr_2_reg_545_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_9_address1 <= DataRAM_9_addr_reg_505;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_9_address1 <= zext_ln135_1_fu_440_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_9_address1 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
        else 
            DataRAM_9_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_9_ce0 <= ap_const_logic_1;
        else 
            DataRAM_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_9_ce1 <= ap_const_logic_1;
        else 
            DataRAM_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_9_d0 <= reg_374;
    DataRAM_9_d1 <= reg_366;

    DataRAM_9_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_lv2_3 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_3 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_9_we0 <= ap_const_logic_1;
        else 
            DataRAM_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_9_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_lv2_3 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_3 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_9_we1 <= ap_const_logic_1;
        else 
            DataRAM_9_we1 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_addr_1_reg_510, DataRAM_addr_3_reg_550_pp0_iter1_reg, ap_block_pp0_stage0, zext_ln135_fu_416_p1, ap_block_pp0_stage1, zext_ln135_2_fu_453_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_address0 <= DataRAM_addr_3_reg_550_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_address0 <= DataRAM_addr_1_reg_510;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_address0 <= zext_ln135_2_fu_453_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_address0 <= zext_ln135_fu_416_p1(12 - 1 downto 0);
        else 
            DataRAM_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, DataRAM_addr_reg_490, DataRAM_addr_2_reg_530_pp0_iter1_reg, j_5_cast72_fu_398_p1, ap_block_pp0_stage0, zext_ln135_1_fu_440_p1, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            DataRAM_address1 <= DataRAM_addr_2_reg_530_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            DataRAM_address1 <= DataRAM_addr_reg_490;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_address1 <= zext_ln135_1_fu_440_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_address1 <= j_5_cast72_fu_398_p1(12 - 1 downto 0);
        else 
            DataRAM_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataRAM_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_ce0 <= ap_const_logic_1;
        else 
            DataRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            DataRAM_ce1 <= ap_const_logic_1;
        else 
            DataRAM_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_d0 <= reg_374;
    DataRAM_d1 <= reg_366;

    DataRAM_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv2_0 = RAMSel_cast_read_reg_474) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_0 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_we0 <= ap_const_logic_1;
        else 
            DataRAM_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_reg_480, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, RAMSel_cast_read_reg_474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv2_0 = RAMSel_cast_read_reg_474) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((tmp_reg_480 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_lv2_0 = RAMSel_cast_read_reg_474) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            DataRAM_we1 <= ap_const_logic_1;
        else 
            DataRAM_we1 <= ap_const_logic_0;
        end if; 
    end process;

    RAMSel_cast_read_reg_474 <= RAMSel_cast;
    add_ln132_fu_424_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv13_4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, tmp_reg_480)
    begin
        if (((tmp_reg_480 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_5_fu_62, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_j <= j_5_fu_62;
        end if; 
    end process;

    empty_fu_406_p1 <= ap_sig_allocacmp_j(12 - 1 downto 0);
    grp_fu_310_p2 <= std_logic_vector(unsigned(reg_294) - unsigned(reg_298));
    grp_fu_316_p3 <= grp_fu_310_p2(31 downto 31);
    grp_fu_324_p2 <= std_logic_vector(unsigned(grp_fu_310_p2) + unsigned(ap_const_lv32_40002001));
    grp_fu_330_p3 <= 
        grp_fu_324_p2 when (grp_fu_316_p3(0) = '1') else 
        grp_fu_310_p2;
    grp_fu_338_p2 <= std_logic_vector(unsigned(reg_302) - unsigned(reg_306));
    grp_fu_344_p3 <= grp_fu_338_p2(31 downto 31);
    grp_fu_352_p2 <= std_logic_vector(unsigned(grp_fu_338_p2) + unsigned(ap_const_lv32_40002001));
    grp_fu_358_p3 <= 
        grp_fu_352_p2 when (grp_fu_344_p3(0) = '1') else 
        grp_fu_338_p2;
    j_5_cast72_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j),64));
    or_ln132_1_fu_435_p2 <= (empty_reg_484 or ap_const_lv12_2);
    or_ln132_2_fu_448_p2 <= (empty_reg_484 or ap_const_lv12_3);
    or_ln132_fu_410_p2 <= (empty_fu_406_p1 or ap_const_lv12_1);
    tmp_fu_390_p3 <= ap_sig_allocacmp_j(12 downto 12);
    zext_ln135_1_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln132_1_fu_435_p2),64));
    zext_ln135_2_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln132_2_fu_448_p2),64));
    zext_ln135_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln132_fu_410_p2),64));
end behav;
