// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto_Crypto_Pipeline_READ_DATA_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        DataRAM_address0,
        DataRAM_ce0,
        DataRAM_q0,
        DataRAM_1_address0,
        DataRAM_1_ce0,
        DataRAM_1_q0,
        DataRAM_2_address0,
        DataRAM_2_ce0,
        DataRAM_2_q0,
        DataRAM_3_address0,
        DataRAM_3_ce0,
        DataRAM_3_q0,
        DataRAM_4_address0,
        DataRAM_4_ce0,
        DataRAM_4_q0,
        DataRAM_5_address0,
        DataRAM_5_ce0,
        DataRAM_5_q0,
        DataRAM_6_address0,
        DataRAM_6_ce0,
        DataRAM_6_q0,
        DataRAM_7_address0,
        DataRAM_7_ce0,
        DataRAM_7_q0,
        DataRAM_8_address0,
        DataRAM_8_ce0,
        DataRAM_8_q0,
        DataRAM_9_address0,
        DataRAM_9_ce0,
        DataRAM_9_q0,
        DataRAM_10_address0,
        DataRAM_10_ce0,
        DataRAM_10_q0,
        DataRAM_11_address0,
        DataRAM_11_ce0,
        DataRAM_11_q0,
        DataRAM_12_address0,
        DataRAM_12_ce0,
        DataRAM_12_q0,
        DataRAM_13_address0,
        DataRAM_13_ce0,
        DataRAM_13_q0,
        DataRAM_14_address0,
        DataRAM_14_ce0,
        DataRAM_14_q0,
        DataRAM_15_address0,
        DataRAM_15_ce0,
        DataRAM_15_q0,
        DataRAM_16_address0,
        DataRAM_16_ce0,
        DataRAM_16_q0,
        DataRAM_17_address0,
        DataRAM_17_ce0,
        DataRAM_17_q0,
        DataRAM_18_address0,
        DataRAM_18_ce0,
        DataRAM_18_q0,
        DataRAM_19_address0,
        DataRAM_19_ce0,
        DataRAM_19_q0,
        DataRAM_20_address0,
        DataRAM_20_ce0,
        DataRAM_20_q0,
        DataRAM_21_address0,
        DataRAM_21_ce0,
        DataRAM_21_q0,
        DataRAM_22_address0,
        DataRAM_22_ce0,
        DataRAM_22_q0,
        DataRAM_23_address0,
        DataRAM_23_ce0,
        DataRAM_23_q0,
        DataRAM_24_address0,
        DataRAM_24_ce0,
        DataRAM_24_q0,
        DataRAM_25_address0,
        DataRAM_25_ce0,
        DataRAM_25_q0,
        DataRAM_26_address0,
        DataRAM_26_ce0,
        DataRAM_26_q0,
        DataRAM_27_address0,
        DataRAM_27_ce0,
        DataRAM_27_q0,
        DataRAM_28_address0,
        DataRAM_28_ce0,
        DataRAM_28_q0,
        DataRAM_29_address0,
        DataRAM_29_ce0,
        DataRAM_29_q0,
        DataRAM_30_address0,
        DataRAM_30_ce0,
        DataRAM_30_q0,
        DataRAM_31_address0,
        DataRAM_31_ce0,
        DataRAM_31_q0,
        RAMSel_cast,
        DataIn_address0,
        DataIn_ce0,
        DataIn_we0,
        DataIn_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] DataRAM_address0;
output   DataRAM_ce0;
input  [31:0] DataRAM_q0;
output  [7:0] DataRAM_1_address0;
output   DataRAM_1_ce0;
input  [31:0] DataRAM_1_q0;
output  [7:0] DataRAM_2_address0;
output   DataRAM_2_ce0;
input  [31:0] DataRAM_2_q0;
output  [7:0] DataRAM_3_address0;
output   DataRAM_3_ce0;
input  [31:0] DataRAM_3_q0;
output  [7:0] DataRAM_4_address0;
output   DataRAM_4_ce0;
input  [31:0] DataRAM_4_q0;
output  [7:0] DataRAM_5_address0;
output   DataRAM_5_ce0;
input  [31:0] DataRAM_5_q0;
output  [7:0] DataRAM_6_address0;
output   DataRAM_6_ce0;
input  [31:0] DataRAM_6_q0;
output  [7:0] DataRAM_7_address0;
output   DataRAM_7_ce0;
input  [31:0] DataRAM_7_q0;
output  [7:0] DataRAM_8_address0;
output   DataRAM_8_ce0;
input  [31:0] DataRAM_8_q0;
output  [7:0] DataRAM_9_address0;
output   DataRAM_9_ce0;
input  [31:0] DataRAM_9_q0;
output  [7:0] DataRAM_10_address0;
output   DataRAM_10_ce0;
input  [31:0] DataRAM_10_q0;
output  [7:0] DataRAM_11_address0;
output   DataRAM_11_ce0;
input  [31:0] DataRAM_11_q0;
output  [7:0] DataRAM_12_address0;
output   DataRAM_12_ce0;
input  [31:0] DataRAM_12_q0;
output  [7:0] DataRAM_13_address0;
output   DataRAM_13_ce0;
input  [31:0] DataRAM_13_q0;
output  [7:0] DataRAM_14_address0;
output   DataRAM_14_ce0;
input  [31:0] DataRAM_14_q0;
output  [7:0] DataRAM_15_address0;
output   DataRAM_15_ce0;
input  [31:0] DataRAM_15_q0;
output  [7:0] DataRAM_16_address0;
output   DataRAM_16_ce0;
input  [31:0] DataRAM_16_q0;
output  [7:0] DataRAM_17_address0;
output   DataRAM_17_ce0;
input  [31:0] DataRAM_17_q0;
output  [7:0] DataRAM_18_address0;
output   DataRAM_18_ce0;
input  [31:0] DataRAM_18_q0;
output  [7:0] DataRAM_19_address0;
output   DataRAM_19_ce0;
input  [31:0] DataRAM_19_q0;
output  [7:0] DataRAM_20_address0;
output   DataRAM_20_ce0;
input  [31:0] DataRAM_20_q0;
output  [7:0] DataRAM_21_address0;
output   DataRAM_21_ce0;
input  [31:0] DataRAM_21_q0;
output  [7:0] DataRAM_22_address0;
output   DataRAM_22_ce0;
input  [31:0] DataRAM_22_q0;
output  [7:0] DataRAM_23_address0;
output   DataRAM_23_ce0;
input  [31:0] DataRAM_23_q0;
output  [7:0] DataRAM_24_address0;
output   DataRAM_24_ce0;
input  [31:0] DataRAM_24_q0;
output  [7:0] DataRAM_25_address0;
output   DataRAM_25_ce0;
input  [31:0] DataRAM_25_q0;
output  [7:0] DataRAM_26_address0;
output   DataRAM_26_ce0;
input  [31:0] DataRAM_26_q0;
output  [7:0] DataRAM_27_address0;
output   DataRAM_27_ce0;
input  [31:0] DataRAM_27_q0;
output  [7:0] DataRAM_28_address0;
output   DataRAM_28_ce0;
input  [31:0] DataRAM_28_q0;
output  [7:0] DataRAM_29_address0;
output   DataRAM_29_ce0;
input  [31:0] DataRAM_29_q0;
output  [7:0] DataRAM_30_address0;
output   DataRAM_30_ce0;
input  [31:0] DataRAM_30_q0;
output  [7:0] DataRAM_31_address0;
output   DataRAM_31_ce0;
input  [31:0] DataRAM_31_q0;
input  [0:0] RAMSel_cast;
output  [11:0] DataIn_address0;
output   DataIn_ce0;
output   DataIn_we0;
output  [31:0] DataIn_d0;

reg ap_idle;
reg DataRAM_ce0;
reg DataRAM_1_ce0;
reg DataRAM_2_ce0;
reg DataRAM_3_ce0;
reg DataRAM_4_ce0;
reg DataRAM_5_ce0;
reg DataRAM_6_ce0;
reg DataRAM_7_ce0;
reg DataRAM_8_ce0;
reg DataRAM_9_ce0;
reg DataRAM_10_ce0;
reg DataRAM_11_ce0;
reg DataRAM_12_ce0;
reg DataRAM_13_ce0;
reg DataRAM_14_ce0;
reg DataRAM_15_ce0;
reg DataRAM_16_ce0;
reg DataRAM_17_ce0;
reg DataRAM_18_ce0;
reg DataRAM_19_ce0;
reg DataRAM_20_ce0;
reg DataRAM_21_ce0;
reg DataRAM_22_ce0;
reg DataRAM_23_ce0;
reg DataRAM_24_ce0;
reg DataRAM_25_ce0;
reg DataRAM_26_ce0;
reg DataRAM_27_ce0;
reg DataRAM_28_ce0;
reg DataRAM_29_ce0;
reg DataRAM_30_ce0;
reg DataRAM_31_ce0;
reg DataIn_ce0;
reg DataIn_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln58_fu_567_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [12:0] i_reg_702;
reg   [12:0] i_reg_702_pp0_iter1_reg;
reg   [12:0] i_reg_702_pp0_iter2_reg;
reg   [31:0] DataRAM_load_reg_872;
reg   [31:0] DataRAM_1_load_reg_877;
reg   [31:0] DataRAM_2_load_reg_882;
reg   [31:0] DataRAM_3_load_reg_887;
reg   [31:0] DataRAM_4_load_reg_892;
reg   [31:0] DataRAM_5_load_reg_897;
reg   [31:0] DataRAM_6_load_reg_902;
reg   [31:0] DataRAM_7_load_reg_907;
reg   [31:0] DataRAM_8_load_reg_912;
reg   [31:0] DataRAM_9_load_reg_917;
reg   [31:0] DataRAM_10_load_reg_922;
reg   [31:0] DataRAM_11_load_reg_927;
reg   [31:0] DataRAM_12_load_reg_932;
reg   [31:0] DataRAM_13_load_reg_937;
reg   [31:0] DataRAM_14_load_reg_942;
reg   [31:0] DataRAM_15_load_reg_947;
reg   [31:0] DataRAM_16_load_reg_952;
reg   [31:0] DataRAM_17_load_reg_957;
reg   [31:0] DataRAM_18_load_reg_962;
reg   [31:0] DataRAM_19_load_reg_967;
reg   [31:0] DataRAM_20_load_reg_972;
reg   [31:0] DataRAM_21_load_reg_977;
reg   [31:0] DataRAM_22_load_reg_982;
reg   [31:0] DataRAM_23_load_reg_987;
reg   [31:0] DataRAM_24_load_reg_992;
reg   [31:0] DataRAM_25_load_reg_997;
reg   [31:0] DataRAM_26_load_reg_1002;
reg   [31:0] DataRAM_27_load_reg_1007;
reg   [31:0] DataRAM_28_load_reg_1012;
reg   [31:0] DataRAM_29_load_reg_1017;
reg   [31:0] DataRAM_30_load_reg_1022;
reg   [31:0] DataRAM_31_load_reg_1027;
wire   [31:0] tmp_2_fu_677_p4;
reg   [31:0] tmp_2_reg_1032;
wire   [63:0] zext_ln58_fu_589_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] i_1_cast69_fu_686_p1;
reg   [12:0] i_1_fu_120;
wire   [12:0] add_ln58_fu_573_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i;
wire   [7:0] lshr_ln1_fu_579_p4;
wire   [3:0] empty_fu_630_p1;
wire   [31:0] tmp_fu_633_p18;
wire   [31:0] tmp_1_fu_655_p18;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Crypto_mux_16_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_16_4_32_1_1_U566(
    .din0(DataRAM_load_reg_872),
    .din1(DataRAM_1_load_reg_877),
    .din2(DataRAM_2_load_reg_882),
    .din3(DataRAM_3_load_reg_887),
    .din4(DataRAM_4_load_reg_892),
    .din5(DataRAM_5_load_reg_897),
    .din6(DataRAM_6_load_reg_902),
    .din7(DataRAM_7_load_reg_907),
    .din8(DataRAM_8_load_reg_912),
    .din9(DataRAM_9_load_reg_917),
    .din10(DataRAM_10_load_reg_922),
    .din11(DataRAM_11_load_reg_927),
    .din12(DataRAM_12_load_reg_932),
    .din13(DataRAM_13_load_reg_937),
    .din14(DataRAM_14_load_reg_942),
    .din15(DataRAM_15_load_reg_947),
    .din16(empty_fu_630_p1),
    .dout(tmp_fu_633_p18)
);

Crypto_mux_16_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_16_4_32_1_1_U567(
    .din0(DataRAM_16_load_reg_952),
    .din1(DataRAM_17_load_reg_957),
    .din2(DataRAM_18_load_reg_962),
    .din3(DataRAM_19_load_reg_967),
    .din4(DataRAM_20_load_reg_972),
    .din5(DataRAM_21_load_reg_977),
    .din6(DataRAM_22_load_reg_982),
    .din7(DataRAM_23_load_reg_987),
    .din8(DataRAM_24_load_reg_992),
    .din9(DataRAM_25_load_reg_997),
    .din10(DataRAM_26_load_reg_1002),
    .din11(DataRAM_27_load_reg_1007),
    .din12(DataRAM_28_load_reg_1012),
    .din13(DataRAM_29_load_reg_1017),
    .din14(DataRAM_30_load_reg_1022),
    .din15(DataRAM_31_load_reg_1027),
    .din16(empty_fu_630_p1),
    .dout(tmp_1_fu_655_p18)
);

Crypto_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U568(
    .din0(tmp_fu_633_p18),
    .din1(tmp_1_fu_655_p18),
    .din2(RAMSel_cast),
    .dout(tmp_2_fu_677_p4)
);

Crypto_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln58_fu_567_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_120 <= add_ln58_fu_573_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_120 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_10_load_reg_922 <= DataRAM_10_q0;
        DataRAM_11_load_reg_927 <= DataRAM_11_q0;
        DataRAM_12_load_reg_932 <= DataRAM_12_q0;
        DataRAM_13_load_reg_937 <= DataRAM_13_q0;
        DataRAM_14_load_reg_942 <= DataRAM_14_q0;
        DataRAM_15_load_reg_947 <= DataRAM_15_q0;
        DataRAM_16_load_reg_952 <= DataRAM_16_q0;
        DataRAM_17_load_reg_957 <= DataRAM_17_q0;
        DataRAM_18_load_reg_962 <= DataRAM_18_q0;
        DataRAM_19_load_reg_967 <= DataRAM_19_q0;
        DataRAM_1_load_reg_877 <= DataRAM_1_q0;
        DataRAM_20_load_reg_972 <= DataRAM_20_q0;
        DataRAM_21_load_reg_977 <= DataRAM_21_q0;
        DataRAM_22_load_reg_982 <= DataRAM_22_q0;
        DataRAM_23_load_reg_987 <= DataRAM_23_q0;
        DataRAM_24_load_reg_992 <= DataRAM_24_q0;
        DataRAM_25_load_reg_997 <= DataRAM_25_q0;
        DataRAM_26_load_reg_1002 <= DataRAM_26_q0;
        DataRAM_27_load_reg_1007 <= DataRAM_27_q0;
        DataRAM_28_load_reg_1012 <= DataRAM_28_q0;
        DataRAM_29_load_reg_1017 <= DataRAM_29_q0;
        DataRAM_2_load_reg_882 <= DataRAM_2_q0;
        DataRAM_30_load_reg_1022 <= DataRAM_30_q0;
        DataRAM_31_load_reg_1027 <= DataRAM_31_q0;
        DataRAM_3_load_reg_887 <= DataRAM_3_q0;
        DataRAM_4_load_reg_892 <= DataRAM_4_q0;
        DataRAM_5_load_reg_897 <= DataRAM_5_q0;
        DataRAM_6_load_reg_902 <= DataRAM_6_q0;
        DataRAM_7_load_reg_907 <= DataRAM_7_q0;
        DataRAM_8_load_reg_912 <= DataRAM_8_q0;
        DataRAM_9_load_reg_917 <= DataRAM_9_q0;
        DataRAM_load_reg_872 <= DataRAM_q0;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_reg_702 <= ap_sig_allocacmp_i;
        i_reg_702_pp0_iter1_reg <= i_reg_702;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_702_pp0_iter2_reg <= i_reg_702_pp0_iter1_reg;
        tmp_2_reg_1032 <= tmp_2_fu_677_p4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DataIn_ce0 = 1'b1;
    end else begin
        DataIn_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DataIn_we0 = 1'b1;
    end else begin
        DataIn_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_10_ce0 = 1'b1;
    end else begin
        DataRAM_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_11_ce0 = 1'b1;
    end else begin
        DataRAM_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_12_ce0 = 1'b1;
    end else begin
        DataRAM_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_13_ce0 = 1'b1;
    end else begin
        DataRAM_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_14_ce0 = 1'b1;
    end else begin
        DataRAM_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_15_ce0 = 1'b1;
    end else begin
        DataRAM_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_16_ce0 = 1'b1;
    end else begin
        DataRAM_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_17_ce0 = 1'b1;
    end else begin
        DataRAM_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_18_ce0 = 1'b1;
    end else begin
        DataRAM_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_19_ce0 = 1'b1;
    end else begin
        DataRAM_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_1_ce0 = 1'b1;
    end else begin
        DataRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_20_ce0 = 1'b1;
    end else begin
        DataRAM_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_21_ce0 = 1'b1;
    end else begin
        DataRAM_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_22_ce0 = 1'b1;
    end else begin
        DataRAM_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_23_ce0 = 1'b1;
    end else begin
        DataRAM_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_24_ce0 = 1'b1;
    end else begin
        DataRAM_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_25_ce0 = 1'b1;
    end else begin
        DataRAM_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_26_ce0 = 1'b1;
    end else begin
        DataRAM_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_27_ce0 = 1'b1;
    end else begin
        DataRAM_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_28_ce0 = 1'b1;
    end else begin
        DataRAM_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_29_ce0 = 1'b1;
    end else begin
        DataRAM_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_2_ce0 = 1'b1;
    end else begin
        DataRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_30_ce0 = 1'b1;
    end else begin
        DataRAM_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_31_ce0 = 1'b1;
    end else begin
        DataRAM_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_3_ce0 = 1'b1;
    end else begin
        DataRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_4_ce0 = 1'b1;
    end else begin
        DataRAM_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_5_ce0 = 1'b1;
    end else begin
        DataRAM_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_6_ce0 = 1'b1;
    end else begin
        DataRAM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_7_ce0 = 1'b1;
    end else begin
        DataRAM_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_8_ce0 = 1'b1;
    end else begin
        DataRAM_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_9_ce0 = 1'b1;
    end else begin
        DataRAM_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_ce0 = 1'b1;
    end else begin
        DataRAM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_567_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 13'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_120;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DataIn_address0 = i_1_cast69_fu_686_p1;

assign DataIn_d0 = tmp_2_reg_1032;

assign DataRAM_10_address0 = zext_ln58_fu_589_p1;

assign DataRAM_11_address0 = zext_ln58_fu_589_p1;

assign DataRAM_12_address0 = zext_ln58_fu_589_p1;

assign DataRAM_13_address0 = zext_ln58_fu_589_p1;

assign DataRAM_14_address0 = zext_ln58_fu_589_p1;

assign DataRAM_15_address0 = zext_ln58_fu_589_p1;

assign DataRAM_16_address0 = zext_ln58_fu_589_p1;

assign DataRAM_17_address0 = zext_ln58_fu_589_p1;

assign DataRAM_18_address0 = zext_ln58_fu_589_p1;

assign DataRAM_19_address0 = zext_ln58_fu_589_p1;

assign DataRAM_1_address0 = zext_ln58_fu_589_p1;

assign DataRAM_20_address0 = zext_ln58_fu_589_p1;

assign DataRAM_21_address0 = zext_ln58_fu_589_p1;

assign DataRAM_22_address0 = zext_ln58_fu_589_p1;

assign DataRAM_23_address0 = zext_ln58_fu_589_p1;

assign DataRAM_24_address0 = zext_ln58_fu_589_p1;

assign DataRAM_25_address0 = zext_ln58_fu_589_p1;

assign DataRAM_26_address0 = zext_ln58_fu_589_p1;

assign DataRAM_27_address0 = zext_ln58_fu_589_p1;

assign DataRAM_28_address0 = zext_ln58_fu_589_p1;

assign DataRAM_29_address0 = zext_ln58_fu_589_p1;

assign DataRAM_2_address0 = zext_ln58_fu_589_p1;

assign DataRAM_30_address0 = zext_ln58_fu_589_p1;

assign DataRAM_31_address0 = zext_ln58_fu_589_p1;

assign DataRAM_3_address0 = zext_ln58_fu_589_p1;

assign DataRAM_4_address0 = zext_ln58_fu_589_p1;

assign DataRAM_5_address0 = zext_ln58_fu_589_p1;

assign DataRAM_6_address0 = zext_ln58_fu_589_p1;

assign DataRAM_7_address0 = zext_ln58_fu_589_p1;

assign DataRAM_8_address0 = zext_ln58_fu_589_p1;

assign DataRAM_9_address0 = zext_ln58_fu_589_p1;

assign DataRAM_address0 = zext_ln58_fu_589_p1;

assign add_ln58_fu_573_p2 = (ap_sig_allocacmp_i + 13'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_630_p1 = i_reg_702_pp0_iter1_reg[3:0];

assign i_1_cast69_fu_686_p1 = i_reg_702_pp0_iter2_reg;

assign icmp_ln58_fu_567_p2 = ((ap_sig_allocacmp_i == 13'd4096) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_579_p4 = {{ap_sig_allocacmp_i[11:4]}};

assign zext_ln58_fu_589_p1 = lshr_ln1_fu_579_p4;

endmodule //Crypto_Crypto_Pipeline_READ_DATA_LOOP
