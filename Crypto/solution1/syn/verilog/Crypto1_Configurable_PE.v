// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_Configurable_PE (
        ap_clk,
        ap_rst,
        input1_val,
        input2_val,
        MOD_INDEX,
        op,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [31:0] input1_val;
input  [31:0] input2_val;
input  [1:0] MOD_INDEX;
input  [1:0] op;
output  [31:0] ap_return;

wire   [1:0] op_read_read_fu_30_p2;
reg   [1:0] op_read_reg_148;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state2_pp0_stage0_iter15;
wire    ap_block_state3_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] op_read_reg_148_pp0_iter1_reg;
reg   [1:0] op_read_reg_148_pp0_iter2_reg;
reg   [1:0] op_read_reg_148_pp0_iter3_reg;
reg   [1:0] op_read_reg_148_pp0_iter4_reg;
reg   [1:0] op_read_reg_148_pp0_iter5_reg;
reg   [1:0] op_read_reg_148_pp0_iter6_reg;
reg   [1:0] op_read_reg_148_pp0_iter7_reg;
reg   [1:0] op_read_reg_148_pp0_iter8_reg;
reg   [1:0] op_read_reg_148_pp0_iter9_reg;
reg   [1:0] op_read_reg_148_pp0_iter10_reg;
reg   [1:0] op_read_reg_148_pp0_iter11_reg;
reg   [1:0] op_read_reg_148_pp0_iter12_reg;
reg   [1:0] op_read_reg_148_pp0_iter13_reg;
reg   [1:0] op_read_reg_148_pp0_iter14_reg;
reg   [1:0] op_read_reg_148_pp0_iter15_reg;
reg   [1:0] op_read_reg_148_pp0_iter16_reg;
reg   [1:0] MOD_INDEX_read_reg_152;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter1_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter2_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter3_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter4_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter5_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter6_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter7_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter8_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter9_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter10_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter11_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter12_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter13_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter14_reg;
reg   [1:0] MOD_INDEX_read_reg_152_pp0_iter15_reg;
reg   [31:0] input2_val_read_reg_159;
reg   [31:0] input2_val_read_reg_159_pp0_iter1_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter2_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter3_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter4_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter5_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter6_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter7_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter8_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter9_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter10_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter11_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter12_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter13_reg;
reg   [31:0] input2_val_read_reg_159_pp0_iter14_reg;
reg   [31:0] input1_val_read_reg_166;
reg   [31:0] input1_val_read_reg_166_pp0_iter1_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter2_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter3_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter4_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter5_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter6_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter7_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter8_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter9_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter10_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter11_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter12_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter13_reg;
reg   [31:0] input1_val_read_reg_166_pp0_iter14_reg;
wire   [31:0] res1_temp_6_fu_77_p2;
reg   [31:0] res1_temp_6_reg_173;
wire   [0:0] tmp_fu_81_p3;
reg   [0:0] tmp_reg_179;
wire   [31:0] res1_temp_4_fu_120_p3;
reg   [31:0] res1_temp_4_reg_183;
wire   [31:0] res1_temp_7_fu_143_p2;
wire   [31:0] grp_MUL_MOD_3_fu_67_ap_return;
reg   [31:0] res1_temp_5_reg_193;
reg    grp_MUL_MOD_3_fu_67_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call0;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call0;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call0;
wire    ap_block_state6_pp0_stage0_iter3_ignore_call0;
wire    ap_block_state7_pp0_stage0_iter4_ignore_call0;
wire    ap_block_state8_pp0_stage0_iter5_ignore_call0;
wire    ap_block_state9_pp0_stage0_iter6_ignore_call0;
wire    ap_block_state10_pp0_stage0_iter7_ignore_call0;
wire    ap_block_state11_pp0_stage0_iter8_ignore_call0;
wire    ap_block_state12_pp0_stage0_iter9_ignore_call0;
wire    ap_block_state13_pp0_stage0_iter10_ignore_call0;
wire    ap_block_state14_pp0_stage0_iter11_ignore_call0;
wire    ap_block_state15_pp0_stage0_iter12_ignore_call0;
wire    ap_block_state16_pp0_stage0_iter13_ignore_call0;
wire    ap_block_state17_pp0_stage0_iter14_ignore_call0;
wire    ap_block_state2_pp0_stage0_iter15_ignore_call0;
wire    ap_block_state3_pp0_stage0_iter16_ignore_call0;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call0;
wire    ap_block_pp0_stage0_11001_ignoreCallOp24;
reg   [31:0] ap_phi_mux_phi_ln215_phi_fu_57_p8;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter3_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter4_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter5_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter6_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter7_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter8_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter9_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter10_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter11_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter12_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter13_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter14_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter15_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter16_phi_ln215_reg_54;
reg   [31:0] ap_phi_reg_pp0_iter17_phi_ln215_reg_54;
wire    ap_block_pp0_stage0;
wire   [30:0] zext_ln76_cast_fu_93_p5;
wire   [31:0] res1_temp_fu_89_p2;
wire   [31:0] zext_ln76_fu_104_p1;
wire   [0:0] icmp_ln76_fu_108_p2;
wire   [31:0] res1_temp_3_fu_114_p2;
wire   [30:0] zext_ln89_cast_fu_128_p5;
wire   [31:0] zext_ln89_fu_139_p1;
reg   [31:0] input1_val_int_reg;
reg   [31:0] input2_val_int_reg;
reg   [1:0] MOD_INDEX_int_reg;
reg   [1:0] op_int_reg;
wire    ap_ce_reg;

Crypto1_MUL_MOD_3 grp_MUL_MOD_3_fu_67(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input1_val(input1_val_int_reg),
    .input2_val(input2_val_int_reg),
    .MOD_INDEX(MOD_INDEX_int_reg),
    .ap_return(grp_MUL_MOD_3_fu_67_ap_return),
    .ap_ce(grp_MUL_MOD_3_fu_67_ap_ce)
);

Crypto1_mux_3_2_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_3_2_31_1_0_U391(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .din3(MOD_INDEX_read_reg_152_pp0_iter14_reg),
    .dout(zext_ln76_cast_fu_93_p5)
);

Crypto1_mux_3_2_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_3_2_31_1_0_U392(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .din3(MOD_INDEX_read_reg_152_pp0_iter15_reg),
    .dout(zext_ln89_cast_fu_128_p5)
);

always @ (posedge ap_clk) begin
    MOD_INDEX_int_reg <= MOD_INDEX;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((op_read_reg_148_pp0_iter14_reg == 2'd1) & (tmp_fu_81_p3 == 1'd0))) begin
            ap_phi_reg_pp0_iter16_phi_ln215_reg_54 <= res1_temp_6_fu_77_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter16_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter15_phi_ln215_reg_54;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((op_read_reg_148_pp0_iter15_reg == 2'd1) & (tmp_reg_179 == 1'd1))) begin
            ap_phi_reg_pp0_iter17_phi_ln215_reg_54 <= res1_temp_7_fu_143_p2;
        end else if ((~(op_read_reg_148_pp0_iter15_reg == 2'd2) & ~(op_read_reg_148_pp0_iter15_reg == 2'd1))) begin
            ap_phi_reg_pp0_iter17_phi_ln215_reg_54 <= res1_temp_4_reg_183;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter17_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter16_phi_ln215_reg_54;
        end
    end
end

always @ (posedge ap_clk) begin
    input1_val_int_reg <= input1_val;
end

always @ (posedge ap_clk) begin
    input2_val_int_reg <= input2_val;
end

always @ (posedge ap_clk) begin
    op_int_reg <= op;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        MOD_INDEX_read_reg_152 <= MOD_INDEX_int_reg;
        MOD_INDEX_read_reg_152_pp0_iter10_reg <= MOD_INDEX_read_reg_152_pp0_iter9_reg;
        MOD_INDEX_read_reg_152_pp0_iter11_reg <= MOD_INDEX_read_reg_152_pp0_iter10_reg;
        MOD_INDEX_read_reg_152_pp0_iter12_reg <= MOD_INDEX_read_reg_152_pp0_iter11_reg;
        MOD_INDEX_read_reg_152_pp0_iter13_reg <= MOD_INDEX_read_reg_152_pp0_iter12_reg;
        MOD_INDEX_read_reg_152_pp0_iter14_reg <= MOD_INDEX_read_reg_152_pp0_iter13_reg;
        MOD_INDEX_read_reg_152_pp0_iter15_reg <= MOD_INDEX_read_reg_152_pp0_iter14_reg;
        MOD_INDEX_read_reg_152_pp0_iter1_reg <= MOD_INDEX_read_reg_152;
        MOD_INDEX_read_reg_152_pp0_iter2_reg <= MOD_INDEX_read_reg_152_pp0_iter1_reg;
        MOD_INDEX_read_reg_152_pp0_iter3_reg <= MOD_INDEX_read_reg_152_pp0_iter2_reg;
        MOD_INDEX_read_reg_152_pp0_iter4_reg <= MOD_INDEX_read_reg_152_pp0_iter3_reg;
        MOD_INDEX_read_reg_152_pp0_iter5_reg <= MOD_INDEX_read_reg_152_pp0_iter4_reg;
        MOD_INDEX_read_reg_152_pp0_iter6_reg <= MOD_INDEX_read_reg_152_pp0_iter5_reg;
        MOD_INDEX_read_reg_152_pp0_iter7_reg <= MOD_INDEX_read_reg_152_pp0_iter6_reg;
        MOD_INDEX_read_reg_152_pp0_iter8_reg <= MOD_INDEX_read_reg_152_pp0_iter7_reg;
        MOD_INDEX_read_reg_152_pp0_iter9_reg <= MOD_INDEX_read_reg_152_pp0_iter8_reg;
        ap_phi_reg_pp0_iter10_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter9_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter11_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter10_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter12_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter11_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter13_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter12_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter14_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter13_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter15_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter14_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter1_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter0_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter2_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter1_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter3_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter2_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter4_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter3_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter5_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter4_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter6_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter5_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter7_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter6_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter8_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter7_phi_ln215_reg_54;
        ap_phi_reg_pp0_iter9_phi_ln215_reg_54 <= ap_phi_reg_pp0_iter8_phi_ln215_reg_54;
        input1_val_read_reg_166 <= input1_val_int_reg;
        input1_val_read_reg_166_pp0_iter10_reg <= input1_val_read_reg_166_pp0_iter9_reg;
        input1_val_read_reg_166_pp0_iter11_reg <= input1_val_read_reg_166_pp0_iter10_reg;
        input1_val_read_reg_166_pp0_iter12_reg <= input1_val_read_reg_166_pp0_iter11_reg;
        input1_val_read_reg_166_pp0_iter13_reg <= input1_val_read_reg_166_pp0_iter12_reg;
        input1_val_read_reg_166_pp0_iter14_reg <= input1_val_read_reg_166_pp0_iter13_reg;
        input1_val_read_reg_166_pp0_iter1_reg <= input1_val_read_reg_166;
        input1_val_read_reg_166_pp0_iter2_reg <= input1_val_read_reg_166_pp0_iter1_reg;
        input1_val_read_reg_166_pp0_iter3_reg <= input1_val_read_reg_166_pp0_iter2_reg;
        input1_val_read_reg_166_pp0_iter4_reg <= input1_val_read_reg_166_pp0_iter3_reg;
        input1_val_read_reg_166_pp0_iter5_reg <= input1_val_read_reg_166_pp0_iter4_reg;
        input1_val_read_reg_166_pp0_iter6_reg <= input1_val_read_reg_166_pp0_iter5_reg;
        input1_val_read_reg_166_pp0_iter7_reg <= input1_val_read_reg_166_pp0_iter6_reg;
        input1_val_read_reg_166_pp0_iter8_reg <= input1_val_read_reg_166_pp0_iter7_reg;
        input1_val_read_reg_166_pp0_iter9_reg <= input1_val_read_reg_166_pp0_iter8_reg;
        input2_val_read_reg_159 <= input2_val_int_reg;
        input2_val_read_reg_159_pp0_iter10_reg <= input2_val_read_reg_159_pp0_iter9_reg;
        input2_val_read_reg_159_pp0_iter11_reg <= input2_val_read_reg_159_pp0_iter10_reg;
        input2_val_read_reg_159_pp0_iter12_reg <= input2_val_read_reg_159_pp0_iter11_reg;
        input2_val_read_reg_159_pp0_iter13_reg <= input2_val_read_reg_159_pp0_iter12_reg;
        input2_val_read_reg_159_pp0_iter14_reg <= input2_val_read_reg_159_pp0_iter13_reg;
        input2_val_read_reg_159_pp0_iter1_reg <= input2_val_read_reg_159;
        input2_val_read_reg_159_pp0_iter2_reg <= input2_val_read_reg_159_pp0_iter1_reg;
        input2_val_read_reg_159_pp0_iter3_reg <= input2_val_read_reg_159_pp0_iter2_reg;
        input2_val_read_reg_159_pp0_iter4_reg <= input2_val_read_reg_159_pp0_iter3_reg;
        input2_val_read_reg_159_pp0_iter5_reg <= input2_val_read_reg_159_pp0_iter4_reg;
        input2_val_read_reg_159_pp0_iter6_reg <= input2_val_read_reg_159_pp0_iter5_reg;
        input2_val_read_reg_159_pp0_iter7_reg <= input2_val_read_reg_159_pp0_iter6_reg;
        input2_val_read_reg_159_pp0_iter8_reg <= input2_val_read_reg_159_pp0_iter7_reg;
        input2_val_read_reg_159_pp0_iter9_reg <= input2_val_read_reg_159_pp0_iter8_reg;
        op_read_reg_148 <= op_int_reg;
        op_read_reg_148_pp0_iter10_reg <= op_read_reg_148_pp0_iter9_reg;
        op_read_reg_148_pp0_iter11_reg <= op_read_reg_148_pp0_iter10_reg;
        op_read_reg_148_pp0_iter12_reg <= op_read_reg_148_pp0_iter11_reg;
        op_read_reg_148_pp0_iter13_reg <= op_read_reg_148_pp0_iter12_reg;
        op_read_reg_148_pp0_iter14_reg <= op_read_reg_148_pp0_iter13_reg;
        op_read_reg_148_pp0_iter15_reg <= op_read_reg_148_pp0_iter14_reg;
        op_read_reg_148_pp0_iter16_reg <= op_read_reg_148_pp0_iter15_reg;
        op_read_reg_148_pp0_iter1_reg <= op_read_reg_148;
        op_read_reg_148_pp0_iter2_reg <= op_read_reg_148_pp0_iter1_reg;
        op_read_reg_148_pp0_iter3_reg <= op_read_reg_148_pp0_iter2_reg;
        op_read_reg_148_pp0_iter4_reg <= op_read_reg_148_pp0_iter3_reg;
        op_read_reg_148_pp0_iter5_reg <= op_read_reg_148_pp0_iter4_reg;
        op_read_reg_148_pp0_iter6_reg <= op_read_reg_148_pp0_iter5_reg;
        op_read_reg_148_pp0_iter7_reg <= op_read_reg_148_pp0_iter6_reg;
        op_read_reg_148_pp0_iter8_reg <= op_read_reg_148_pp0_iter7_reg;
        op_read_reg_148_pp0_iter9_reg <= op_read_reg_148_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(op_read_reg_148_pp0_iter14_reg == 2'd2) & ~(op_read_reg_148_pp0_iter14_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res1_temp_4_reg_183 <= res1_temp_4_fu_120_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((op_read_reg_148_pp0_iter15_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res1_temp_5_reg_193 <= grp_MUL_MOD_3_fu_67_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((op_read_reg_148_pp0_iter14_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res1_temp_6_reg_173 <= res1_temp_6_fu_77_p2;
        tmp_reg_179 <= res1_temp_6_fu_77_p2[32'd31];
    end
end

always @ (*) begin
    if ((op_read_reg_148_pp0_iter16_reg == 2'd2)) begin
        ap_phi_mux_phi_ln215_phi_fu_57_p8 = res1_temp_5_reg_193;
    end else begin
        ap_phi_mux_phi_ln215_phi_fu_57_p8 = ap_phi_reg_pp0_iter17_phi_ln215_reg_54;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp24)) begin
        grp_MUL_MOD_3_fu_67_ap_ce = 1'b1;
    end else begin
        grp_MUL_MOD_3_fu_67_ap_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp24 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter7_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter15_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter16_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln215_reg_54 = 'bx;

assign ap_return = ap_phi_mux_phi_ln215_phi_fu_57_p8;

assign icmp_ln76_fu_108_p2 = (($signed(res1_temp_fu_89_p2) < $signed(zext_ln76_fu_104_p1)) ? 1'b1 : 1'b0);

assign op_read_read_fu_30_p2 = op_int_reg;

assign res1_temp_3_fu_114_p2 = (res1_temp_fu_89_p2 - zext_ln76_fu_104_p1);

assign res1_temp_4_fu_120_p3 = ((icmp_ln76_fu_108_p2[0:0] == 1'b1) ? res1_temp_fu_89_p2 : res1_temp_3_fu_114_p2);

assign res1_temp_6_fu_77_p2 = (input1_val_read_reg_166_pp0_iter14_reg - input2_val_read_reg_159_pp0_iter14_reg);

assign res1_temp_7_fu_143_p2 = (zext_ln89_fu_139_p1 + res1_temp_6_reg_173);

assign res1_temp_fu_89_p2 = (input2_val_read_reg_159_pp0_iter14_reg + input1_val_read_reg_166_pp0_iter14_reg);

assign tmp_fu_81_p3 = res1_temp_6_fu_77_p2[32'd31];

assign zext_ln76_fu_104_p1 = zext_ln76_cast_fu_93_p5;

assign zext_ln89_fu_139_p1 = zext_ln89_cast_fu_128_p5;

endmodule //Crypto1_Configurable_PE
