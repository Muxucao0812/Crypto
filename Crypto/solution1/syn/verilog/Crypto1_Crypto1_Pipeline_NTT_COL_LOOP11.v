// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_Crypto1_Pipeline_NTT_COL_LOOP11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp_281,
        DataRAM_address0,
        DataRAM_ce0,
        DataRAM_q0,
        DataRAM_1_address0,
        DataRAM_1_ce0,
        DataRAM_1_q0,
        DataRAM_2_address0,
        DataRAM_2_ce0,
        DataRAM_2_q0,
        DataRAM_3_address0,
        DataRAM_3_ce0,
        DataRAM_3_q0,
        DataRAM_4_address0,
        DataRAM_4_ce0,
        DataRAM_4_q0,
        DataRAM_5_address0,
        DataRAM_5_ce0,
        DataRAM_5_q0,
        DataRAM_6_address0,
        DataRAM_6_ce0,
        DataRAM_6_q0,
        DataRAM_7_address0,
        DataRAM_7_ce0,
        DataRAM_7_q0,
        ReadData_address0,
        ReadData_ce0,
        ReadData_we0,
        ReadData_d0,
        ReadData_1_address0,
        ReadData_1_ce0,
        ReadData_1_we0,
        ReadData_1_d0,
        ReadData_2_address0,
        ReadData_2_ce0,
        ReadData_2_we0,
        ReadData_2_d0,
        ReadData_3_address0,
        ReadData_3_ce0,
        ReadData_3_we0,
        ReadData_3_d0,
        select_ln291_6,
        trunc_ln293_1,
        shl_1_cast_mid2,
        mul_ln296_1,
        ReadAddr_address0,
        ReadAddr_ce0,
        ReadAddr_we0,
        ReadAddr_d0,
        add_ln302
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [9:0] tmp_281;
output  [12:0] DataRAM_address0;
output   DataRAM_ce0;
input  [31:0] DataRAM_q0;
output  [12:0] DataRAM_1_address0;
output   DataRAM_1_ce0;
input  [31:0] DataRAM_1_q0;
output  [12:0] DataRAM_2_address0;
output   DataRAM_2_ce0;
input  [31:0] DataRAM_2_q0;
output  [12:0] DataRAM_3_address0;
output   DataRAM_3_ce0;
input  [31:0] DataRAM_3_q0;
output  [12:0] DataRAM_4_address0;
output   DataRAM_4_ce0;
input  [31:0] DataRAM_4_q0;
output  [12:0] DataRAM_5_address0;
output   DataRAM_5_ce0;
input  [31:0] DataRAM_5_q0;
output  [12:0] DataRAM_6_address0;
output   DataRAM_6_ce0;
input  [31:0] DataRAM_6_q0;
output  [12:0] DataRAM_7_address0;
output   DataRAM_7_ce0;
input  [31:0] DataRAM_7_q0;
output  [3:0] ReadData_address0;
output   ReadData_ce0;
output   ReadData_we0;
output  [31:0] ReadData_d0;
output  [3:0] ReadData_1_address0;
output   ReadData_1_ce0;
output   ReadData_1_we0;
output  [31:0] ReadData_1_d0;
output  [3:0] ReadData_2_address0;
output   ReadData_2_ce0;
output   ReadData_2_we0;
output  [31:0] ReadData_2_d0;
output  [3:0] ReadData_3_address0;
output   ReadData_3_ce0;
output   ReadData_3_we0;
output  [31:0] ReadData_3_d0;
input  [0:0] select_ln291_6;
input  [5:0] trunc_ln293_1;
input  [5:0] shl_1_cast_mid2;
input  [9:0] mul_ln296_1;
output  [5:0] ReadAddr_address0;
output   ReadAddr_ce0;
output   ReadAddr_we0;
output  [9:0] ReadAddr_d0;
input  [41:0] add_ln302;

reg ap_idle;
reg[12:0] DataRAM_address0;
reg DataRAM_ce0;
reg[12:0] DataRAM_1_address0;
reg DataRAM_1_ce0;
reg[12:0] DataRAM_2_address0;
reg DataRAM_2_ce0;
reg[12:0] DataRAM_3_address0;
reg DataRAM_3_ce0;
reg[12:0] DataRAM_4_address0;
reg DataRAM_4_ce0;
reg[12:0] DataRAM_5_address0;
reg DataRAM_5_ce0;
reg[12:0] DataRAM_6_address0;
reg DataRAM_6_ce0;
reg[12:0] DataRAM_7_address0;
reg DataRAM_7_ce0;
reg ReadData_ce0;
reg ReadData_we0;
reg ReadData_1_ce0;
reg ReadData_1_we0;
reg ReadData_2_ce0;
reg ReadData_2_we0;
reg ReadData_3_ce0;
reg ReadData_3_we0;
reg ReadAddr_ce0;
reg ReadAddr_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln296_fu_404_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_367_p10;
reg   [31:0] reg_388;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] select_ln291_6_read_reg_548;
wire   [0:0] select_ln291_6_read_read_fu_122_p2;
reg   [6:0] l_reg_557;
reg   [6:0] l_reg_557_pp0_iter1_reg;
wire   [9:0] add_ln299_2_fu_442_p2;
reg   [9:0] add_ln299_2_reg_570;
wire   [1:0] empty_fu_457_p1;
reg   [1:0] empty_reg_576;
reg   [1:0] empty_reg_576_pp0_iter2_reg;
reg   [3:0] lshr_ln296_3_reg_660;
wire   [63:0] zext_ln302_fu_470_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] l_2_cast80_fu_453_p1;
wire   [63:0] zext_ln300_fu_498_p1;
wire   [63:0] zext_ln296_fu_529_p1;
reg   [6:0] l_2_fu_94;
wire   [6:0] add_ln296_fu_410_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_l;
wire   [2:0] grp_fu_367_p9;
wire   [5:0] empty_485_fu_416_p1;
wire   [5:0] sub_ln299_fu_420_p2;
wire   [5:0] add_ln299_fu_426_p2;
wire   [5:0] and_ln299_fu_432_p2;
wire   [9:0] zext_ln299_fu_438_p1;
wire   [2:0] empty_486_fu_460_p1;
wire   [12:0] tmp_s_fu_463_p3;
wire   [9:0] trunc_ln300_fu_482_p1;
wire   [9:0] add_ln300_fu_485_p2;
wire   [12:0] tmp_66_fu_490_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_224;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Crypto1_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U263(
    .din0(DataRAM_q0),
    .din1(DataRAM_1_q0),
    .din2(DataRAM_2_q0),
    .din3(DataRAM_3_q0),
    .din4(DataRAM_4_q0),
    .din5(DataRAM_5_q0),
    .din6(DataRAM_6_q0),
    .din7(DataRAM_7_q0),
    .din8(grp_fu_367_p9),
    .dout(grp_fu_367_p10)
);

Crypto1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln296_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            l_2_fu_94 <= add_ln296_fu_410_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            l_2_fu_94 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_fu_404_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_read_fu_122_p2 == 1'd1))) begin
        add_ln299_2_reg_570 <= add_ln299_2_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_576 <= empty_fu_457_p1;
        l_reg_557 <= ap_sig_allocacmp_l;
        l_reg_557_pp0_iter1_reg <= l_reg_557;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        empty_reg_576_pp0_iter2_reg <= empty_reg_576;
        lshr_ln296_3_reg_660 <= {{l_reg_557_pp0_iter1_reg[5:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        reg_388 <= grp_fu_367_p10;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_1_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_1_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_1_address0 = 'bx;
        end
    end else begin
        DataRAM_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_1_ce0 = 1'b1;
    end else begin
        DataRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_2_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_2_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_2_address0 = 'bx;
        end
    end else begin
        DataRAM_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_2_ce0 = 1'b1;
    end else begin
        DataRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_3_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_3_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_3_address0 = 'bx;
        end
    end else begin
        DataRAM_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_3_ce0 = 1'b1;
    end else begin
        DataRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_4_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_4_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_4_address0 = 'bx;
        end
    end else begin
        DataRAM_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_4_ce0 = 1'b1;
    end else begin
        DataRAM_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_5_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_5_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_5_address0 = 'bx;
        end
    end else begin
        DataRAM_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_5_ce0 = 1'b1;
    end else begin
        DataRAM_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_6_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_6_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_6_address0 = 'bx;
        end
    end else begin
        DataRAM_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_6_ce0 = 1'b1;
    end else begin
        DataRAM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_7_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_7_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_7_address0 = 'bx;
        end
    end else begin
        DataRAM_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_7_ce0 = 1'b1;
    end else begin
        DataRAM_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((select_ln291_6_read_reg_548 == 1'd1)) begin
            DataRAM_address0 = zext_ln300_fu_498_p1;
        end else if ((select_ln291_6_read_reg_548 == 1'd0)) begin
            DataRAM_address0 = zext_ln302_fu_470_p1;
        end else begin
            DataRAM_address0 = 'bx;
        end
    end else begin
        DataRAM_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        DataRAM_ce0 = 1'b1;
    end else begin
        DataRAM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ReadAddr_ce0 = 1'b1;
    end else begin
        ReadAddr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln291_6_read_reg_548 == 1'd1))) begin
        ReadAddr_we0 = 1'b1;
    end else begin
        ReadAddr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd1) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd1) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_1_ce0 = 1'b1;
    end else begin
        ReadData_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd1) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd1) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_1_we0 = 1'b1;
    end else begin
        ReadData_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd2) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd2) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_2_ce0 = 1'b1;
    end else begin
        ReadData_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd2) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd2) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_2_we0 = 1'b1;
    end else begin
        ReadData_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd3) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd3) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_3_ce0 = 1'b1;
    end else begin
        ReadData_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd3) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd3) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_3_we0 = 1'b1;
    end else begin
        ReadData_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_ce0 = 1'b1;
    end else begin
        ReadData_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd0) & (select_ln291_6_read_reg_548 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_reg_576_pp0_iter2_reg == 2'd0) & (select_ln291_6_read_reg_548 == 1'd0)))) begin
        ReadData_we0 = 1'b1;
    end else begin
        ReadData_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln296_fu_404_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_l = 7'd0;
    end else begin
        ap_sig_allocacmp_l = l_2_fu_94;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ReadAddr_address0 = l_2_cast80_fu_453_p1;

assign ReadAddr_d0 = add_ln299_2_reg_570;

assign ReadData_1_address0 = zext_ln296_fu_529_p1;

assign ReadData_1_d0 = reg_388;

assign ReadData_2_address0 = zext_ln296_fu_529_p1;

assign ReadData_2_d0 = reg_388;

assign ReadData_3_address0 = zext_ln296_fu_529_p1;

assign ReadData_3_d0 = reg_388;

assign ReadData_address0 = zext_ln296_fu_529_p1;

assign ReadData_d0 = reg_388;

assign add_ln296_fu_410_p2 = (ap_sig_allocacmp_l + 7'd1);

assign add_ln299_2_fu_442_p2 = (zext_ln299_fu_438_p1 + mul_ln296_1);

assign add_ln299_fu_426_p2 = ($signed(shl_1_cast_mid2) + $signed(6'd63));

assign add_ln300_fu_485_p2 = (trunc_ln300_fu_482_p1 + add_ln299_2_reg_570);

assign and_ln299_fu_432_p2 = (sub_ln299_fu_420_p2 & add_ln299_fu_426_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_224 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_485_fu_416_p1 = ap_sig_allocacmp_l[5:0];

assign empty_486_fu_460_p1 = l_reg_557[2:0];

assign empty_fu_457_p1 = l_reg_557[1:0];

assign grp_fu_367_p9 = {{l_reg_557_pp0_iter1_reg[5:3]}};

assign icmp_ln296_fu_404_p2 = ((ap_sig_allocacmp_l == 7'd64) ? 1'b1 : 1'b0);

assign l_2_cast80_fu_453_p1 = l_reg_557;

assign select_ln291_6_read_read_fu_122_p2 = select_ln291_6;

assign select_ln291_6_read_reg_548 = select_ln291_6;

assign sub_ln299_fu_420_p2 = (empty_485_fu_416_p1 - trunc_ln293_1);

assign tmp_66_fu_490_p3 = {{add_ln300_fu_485_p2}, {empty_486_fu_460_p1}};

assign tmp_s_fu_463_p3 = {{tmp_281}, {empty_486_fu_460_p1}};

assign trunc_ln300_fu_482_p1 = add_ln302[9:0];

assign zext_ln296_fu_529_p1 = lshr_ln296_3_reg_660;

assign zext_ln299_fu_438_p1 = and_ln299_fu_432_p2;

assign zext_ln300_fu_498_p1 = tmp_66_fu_490_p3;

assign zext_ln302_fu_470_p1 = tmp_s_fu_463_p3;

endmodule //Crypto1_Crypto1_Pipeline_NTT_COL_LOOP11
