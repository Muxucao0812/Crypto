// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_Crypto1_Pipeline_POLY_ADD_ROW_LOOP_POLY_ADD_COL_LOOP6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add_ln188_1,
        add_ln189_1,
        DataRAM_address0,
        DataRAM_ce0,
        DataRAM_we0,
        DataRAM_d0,
        DataRAM_q0,
        DataRAM_address1,
        DataRAM_ce1,
        DataRAM_q1,
        DataRAM_1_address0,
        DataRAM_1_ce0,
        DataRAM_1_we0,
        DataRAM_1_d0,
        DataRAM_1_q0,
        DataRAM_1_address1,
        DataRAM_1_ce1,
        DataRAM_1_q1,
        DataRAM_2_address0,
        DataRAM_2_ce0,
        DataRAM_2_we0,
        DataRAM_2_d0,
        DataRAM_2_q0,
        DataRAM_2_address1,
        DataRAM_2_ce1,
        DataRAM_2_q1,
        DataRAM_3_address0,
        DataRAM_3_ce0,
        DataRAM_3_we0,
        DataRAM_3_d0,
        DataRAM_3_q0,
        DataRAM_3_address1,
        DataRAM_3_ce1,
        DataRAM_3_q1,
        DataRAM_4_address0,
        DataRAM_4_ce0,
        DataRAM_4_we0,
        DataRAM_4_d0,
        DataRAM_4_q0,
        DataRAM_4_address1,
        DataRAM_4_ce1,
        DataRAM_4_q1,
        DataRAM_5_address0,
        DataRAM_5_ce0,
        DataRAM_5_we0,
        DataRAM_5_d0,
        DataRAM_5_q0,
        DataRAM_5_address1,
        DataRAM_5_ce1,
        DataRAM_5_q1,
        DataRAM_6_address0,
        DataRAM_6_ce0,
        DataRAM_6_we0,
        DataRAM_6_d0,
        DataRAM_6_q0,
        DataRAM_6_address1,
        DataRAM_6_ce1,
        DataRAM_6_q1,
        DataRAM_7_address0,
        DataRAM_7_ce0,
        DataRAM_7_we0,
        DataRAM_7_d0,
        DataRAM_7_q0,
        DataRAM_7_address1,
        DataRAM_7_ce1,
        DataRAM_7_q1,
        grp_Configurable_PE_fu_4773_p_din1,
        grp_Configurable_PE_fu_4773_p_din2,
        grp_Configurable_PE_fu_4773_p_din3,
        grp_Configurable_PE_fu_4773_p_din4,
        grp_Configurable_PE_fu_4773_p_dout0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [41:0] add_ln188_1;
input  [41:0] add_ln189_1;
output  [12:0] DataRAM_address0;
output   DataRAM_ce0;
output   DataRAM_we0;
output  [31:0] DataRAM_d0;
input  [31:0] DataRAM_q0;
output  [12:0] DataRAM_address1;
output   DataRAM_ce1;
input  [31:0] DataRAM_q1;
output  [12:0] DataRAM_1_address0;
output   DataRAM_1_ce0;
output   DataRAM_1_we0;
output  [31:0] DataRAM_1_d0;
input  [31:0] DataRAM_1_q0;
output  [12:0] DataRAM_1_address1;
output   DataRAM_1_ce1;
input  [31:0] DataRAM_1_q1;
output  [12:0] DataRAM_2_address0;
output   DataRAM_2_ce0;
output   DataRAM_2_we0;
output  [31:0] DataRAM_2_d0;
input  [31:0] DataRAM_2_q0;
output  [12:0] DataRAM_2_address1;
output   DataRAM_2_ce1;
input  [31:0] DataRAM_2_q1;
output  [12:0] DataRAM_3_address0;
output   DataRAM_3_ce0;
output   DataRAM_3_we0;
output  [31:0] DataRAM_3_d0;
input  [31:0] DataRAM_3_q0;
output  [12:0] DataRAM_3_address1;
output   DataRAM_3_ce1;
input  [31:0] DataRAM_3_q1;
output  [12:0] DataRAM_4_address0;
output   DataRAM_4_ce0;
output   DataRAM_4_we0;
output  [31:0] DataRAM_4_d0;
input  [31:0] DataRAM_4_q0;
output  [12:0] DataRAM_4_address1;
output   DataRAM_4_ce1;
input  [31:0] DataRAM_4_q1;
output  [12:0] DataRAM_5_address0;
output   DataRAM_5_ce0;
output   DataRAM_5_we0;
output  [31:0] DataRAM_5_d0;
input  [31:0] DataRAM_5_q0;
output  [12:0] DataRAM_5_address1;
output   DataRAM_5_ce1;
input  [31:0] DataRAM_5_q1;
output  [12:0] DataRAM_6_address0;
output   DataRAM_6_ce0;
output   DataRAM_6_we0;
output  [31:0] DataRAM_6_d0;
input  [31:0] DataRAM_6_q0;
output  [12:0] DataRAM_6_address1;
output   DataRAM_6_ce1;
input  [31:0] DataRAM_6_q1;
output  [12:0] DataRAM_7_address0;
output   DataRAM_7_ce0;
output   DataRAM_7_we0;
output  [31:0] DataRAM_7_d0;
input  [31:0] DataRAM_7_q0;
output  [12:0] DataRAM_7_address1;
output   DataRAM_7_ce1;
input  [31:0] DataRAM_7_q1;
output  [31:0] grp_Configurable_PE_fu_4773_p_din1;
output  [31:0] grp_Configurable_PE_fu_4773_p_din2;
output  [1:0] grp_Configurable_PE_fu_4773_p_din3;
output  [1:0] grp_Configurable_PE_fu_4773_p_din4;
input  [31:0] grp_Configurable_PE_fu_4773_p_dout0;

reg ap_idle;
reg[12:0] DataRAM_address0;
reg DataRAM_ce0;
reg DataRAM_we0;
reg DataRAM_ce1;
reg[12:0] DataRAM_1_address0;
reg DataRAM_1_ce0;
reg DataRAM_1_we0;
reg DataRAM_1_ce1;
reg[12:0] DataRAM_2_address0;
reg DataRAM_2_ce0;
reg DataRAM_2_we0;
reg DataRAM_2_ce1;
reg[12:0] DataRAM_3_address0;
reg DataRAM_3_ce0;
reg DataRAM_3_we0;
reg DataRAM_3_ce1;
reg[12:0] DataRAM_4_address0;
reg DataRAM_4_ce0;
reg DataRAM_4_we0;
reg DataRAM_4_ce1;
reg[12:0] DataRAM_5_address0;
reg DataRAM_5_ce0;
reg DataRAM_5_we0;
reg DataRAM_5_ce1;
reg[12:0] DataRAM_6_address0;
reg DataRAM_6_ce0;
reg DataRAM_6_we0;
reg DataRAM_6_ce1;
reg[12:0] DataRAM_7_address0;
reg DataRAM_7_ce0;
reg DataRAM_7_we0;
reg DataRAM_7_ce1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln172_reg_559;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln172_fu_346_p2;
reg   [0:0] icmp_ln172_reg_559_pp0_iter1_reg;
reg   [0:0] icmp_ln172_reg_559_pp0_iter2_reg;
reg   [0:0] icmp_ln172_reg_559_pp0_iter3_reg;
reg   [0:0] icmp_ln172_reg_559_pp0_iter4_reg;
reg   [0:0] icmp_ln172_reg_559_pp0_iter5_reg;
wire   [12:0] add_ln172_fu_352_p2;
reg   [12:0] add_ln172_reg_563;
reg   [6:0] k_load_reg_568;
wire   [0:0] icmp_ln181_fu_370_p2;
reg   [0:0] icmp_ln181_reg_573;
wire   [6:0] select_ln172_1_fu_376_p3;
reg   [6:0] select_ln172_1_reg_578;
wire   [6:0] select_ln172_fu_384_p3;
reg   [6:0] select_ln172_reg_585;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_pp0_stage1_11001;
reg   [12:0] DataRAM_addr_reg_590;
reg   [12:0] DataRAM_addr_reg_590_pp0_iter1_reg;
reg   [12:0] DataRAM_addr_reg_590_pp0_iter2_reg;
reg   [12:0] DataRAM_addr_reg_590_pp0_iter3_reg;
reg   [12:0] DataRAM_addr_reg_590_pp0_iter4_reg;
reg   [12:0] DataRAM_addr_reg_590_pp0_iter5_reg;
reg   [12:0] DataRAM_addr_reg_590_pp0_iter6_reg;
reg   [12:0] DataRAM_1_addr_reg_601;
reg   [12:0] DataRAM_1_addr_reg_601_pp0_iter1_reg;
reg   [12:0] DataRAM_1_addr_reg_601_pp0_iter2_reg;
reg   [12:0] DataRAM_1_addr_reg_601_pp0_iter3_reg;
reg   [12:0] DataRAM_1_addr_reg_601_pp0_iter4_reg;
reg   [12:0] DataRAM_1_addr_reg_601_pp0_iter5_reg;
reg   [12:0] DataRAM_1_addr_reg_601_pp0_iter6_reg;
reg   [12:0] DataRAM_2_addr_reg_612;
reg   [12:0] DataRAM_2_addr_reg_612_pp0_iter1_reg;
reg   [12:0] DataRAM_2_addr_reg_612_pp0_iter2_reg;
reg   [12:0] DataRAM_2_addr_reg_612_pp0_iter3_reg;
reg   [12:0] DataRAM_2_addr_reg_612_pp0_iter4_reg;
reg   [12:0] DataRAM_2_addr_reg_612_pp0_iter5_reg;
reg   [12:0] DataRAM_2_addr_reg_612_pp0_iter6_reg;
reg   [12:0] DataRAM_3_addr_reg_623;
reg   [12:0] DataRAM_3_addr_reg_623_pp0_iter1_reg;
reg   [12:0] DataRAM_3_addr_reg_623_pp0_iter2_reg;
reg   [12:0] DataRAM_3_addr_reg_623_pp0_iter3_reg;
reg   [12:0] DataRAM_3_addr_reg_623_pp0_iter4_reg;
reg   [12:0] DataRAM_3_addr_reg_623_pp0_iter5_reg;
reg   [12:0] DataRAM_3_addr_reg_623_pp0_iter6_reg;
reg   [12:0] DataRAM_4_addr_reg_634;
reg   [12:0] DataRAM_4_addr_reg_634_pp0_iter1_reg;
reg   [12:0] DataRAM_4_addr_reg_634_pp0_iter2_reg;
reg   [12:0] DataRAM_4_addr_reg_634_pp0_iter3_reg;
reg   [12:0] DataRAM_4_addr_reg_634_pp0_iter4_reg;
reg   [12:0] DataRAM_4_addr_reg_634_pp0_iter5_reg;
reg   [12:0] DataRAM_4_addr_reg_634_pp0_iter6_reg;
reg   [12:0] DataRAM_5_addr_reg_645;
reg   [12:0] DataRAM_5_addr_reg_645_pp0_iter1_reg;
reg   [12:0] DataRAM_5_addr_reg_645_pp0_iter2_reg;
reg   [12:0] DataRAM_5_addr_reg_645_pp0_iter3_reg;
reg   [12:0] DataRAM_5_addr_reg_645_pp0_iter4_reg;
reg   [12:0] DataRAM_5_addr_reg_645_pp0_iter5_reg;
reg   [12:0] DataRAM_5_addr_reg_645_pp0_iter6_reg;
reg   [12:0] DataRAM_6_addr_reg_656;
reg   [12:0] DataRAM_6_addr_reg_656_pp0_iter1_reg;
reg   [12:0] DataRAM_6_addr_reg_656_pp0_iter2_reg;
reg   [12:0] DataRAM_6_addr_reg_656_pp0_iter3_reg;
reg   [12:0] DataRAM_6_addr_reg_656_pp0_iter4_reg;
reg   [12:0] DataRAM_6_addr_reg_656_pp0_iter5_reg;
reg   [12:0] DataRAM_6_addr_reg_656_pp0_iter6_reg;
reg   [12:0] DataRAM_7_addr_reg_667;
reg   [12:0] DataRAM_7_addr_reg_667_pp0_iter1_reg;
reg   [12:0] DataRAM_7_addr_reg_667_pp0_iter2_reg;
reg   [12:0] DataRAM_7_addr_reg_667_pp0_iter3_reg;
reg   [12:0] DataRAM_7_addr_reg_667_pp0_iter4_reg;
reg   [12:0] DataRAM_7_addr_reg_667_pp0_iter5_reg;
reg   [12:0] DataRAM_7_addr_reg_667_pp0_iter6_reg;
reg   [2:0] trunc_ln181_2_reg_678;
reg   [2:0] trunc_ln181_2_reg_678_pp0_iter1_reg;
reg   [2:0] trunc_ln181_2_reg_678_pp0_iter2_reg;
reg   [2:0] trunc_ln181_2_reg_678_pp0_iter3_reg;
reg   [2:0] trunc_ln181_2_reg_678_pp0_iter4_reg;
reg   [2:0] trunc_ln181_2_reg_678_pp0_iter5_reg;
reg   [2:0] trunc_ln181_2_reg_678_pp0_iter6_reg;
wire   [31:0] AddInput1_Reg_fu_468_p10;
reg   [31:0] AddInput1_Reg_reg_684;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] AddInput2_Reg_fu_489_p10;
reg   [31:0] AddInput2_Reg_reg_689;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln188_1_fu_426_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln189_1_fu_446_p1;
reg   [6:0] k_fu_86;
wire   [6:0] add_ln181_fu_510_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_k_load;
reg   [6:0] j_fu_90;
reg   [6:0] ap_sig_allocacmp_j_load;
reg   [12:0] indvar_flatten90_fu_94;
reg   [12:0] ap_sig_allocacmp_indvar_flatten90_load;
wire   [6:0] add_ln172_1_fu_364_p2;
wire   [9:0] trunc_ln188_fu_390_p1;
wire   [9:0] zext_ln188_fu_393_p1;
wire   [9:0] trunc_ln189_fu_402_p1;
wire   [9:0] zext_ln189_fu_405_p1;
wire   [9:0] add_ln189_fu_396_p2;
wire   [2:0] empty_fu_414_p1;
wire   [12:0] tmp_s_fu_418_p3;
wire   [9:0] add_ln189_2_fu_408_p2;
wire   [12:0] tmp_62_fu_438_p3;
wire    ap_block_pp0_stage2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter6_stage0;
reg    ap_idle_pp0_0to5;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to7;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Crypto1_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U493(
    .din0(DataRAM_q1),
    .din1(DataRAM_1_q1),
    .din2(DataRAM_2_q1),
    .din3(DataRAM_3_q1),
    .din4(DataRAM_4_q1),
    .din5(DataRAM_5_q1),
    .din6(DataRAM_6_q1),
    .din7(DataRAM_7_q1),
    .din8(trunc_ln181_2_reg_678),
    .dout(AddInput1_Reg_fu_468_p10)
);

Crypto1_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U494(
    .din0(DataRAM_q0),
    .din1(DataRAM_1_q0),
    .din2(DataRAM_2_q0),
    .din3(DataRAM_3_q0),
    .din4(DataRAM_4_q0),
    .din5(DataRAM_5_q0),
    .din6(DataRAM_6_q0),
    .din7(DataRAM_7_q0),
    .din8(trunc_ln181_2_reg_678),
    .dout(AddInput2_Reg_fu_489_p10)
);

Crypto1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten90_fu_94 <= 13'd0;
    end else if (((icmp_ln172_reg_559 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        indvar_flatten90_fu_94 <= add_ln172_reg_563;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_90 <= 7'd0;
    end else if (((icmp_ln172_reg_559 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j_fu_90 <= select_ln172_1_reg_578;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_86 <= 7'd0;
    end else if (((icmp_ln172_reg_559 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        k_fu_86 <= add_ln181_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_559 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        AddInput1_Reg_reg_684 <= AddInput1_Reg_fu_468_p10;
        AddInput2_Reg_reg_689 <= AddInput2_Reg_fu_489_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_559 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_1_addr_reg_601 <= zext_ln188_1_fu_426_p1;
        DataRAM_2_addr_reg_612 <= zext_ln188_1_fu_426_p1;
        DataRAM_3_addr_reg_623 <= zext_ln188_1_fu_426_p1;
        DataRAM_4_addr_reg_634 <= zext_ln188_1_fu_426_p1;
        DataRAM_5_addr_reg_645 <= zext_ln188_1_fu_426_p1;
        DataRAM_6_addr_reg_656 <= zext_ln188_1_fu_426_p1;
        DataRAM_7_addr_reg_667 <= zext_ln188_1_fu_426_p1;
        DataRAM_addr_reg_590 <= zext_ln188_1_fu_426_p1;
        select_ln172_reg_585 <= select_ln172_fu_384_p3;
        trunc_ln181_2_reg_678 <= {{select_ln172_fu_384_p3[5:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_1_addr_reg_601_pp0_iter1_reg <= DataRAM_1_addr_reg_601;
        DataRAM_1_addr_reg_601_pp0_iter2_reg <= DataRAM_1_addr_reg_601_pp0_iter1_reg;
        DataRAM_1_addr_reg_601_pp0_iter3_reg <= DataRAM_1_addr_reg_601_pp0_iter2_reg;
        DataRAM_1_addr_reg_601_pp0_iter4_reg <= DataRAM_1_addr_reg_601_pp0_iter3_reg;
        DataRAM_1_addr_reg_601_pp0_iter5_reg <= DataRAM_1_addr_reg_601_pp0_iter4_reg;
        DataRAM_1_addr_reg_601_pp0_iter6_reg <= DataRAM_1_addr_reg_601_pp0_iter5_reg;
        DataRAM_2_addr_reg_612_pp0_iter1_reg <= DataRAM_2_addr_reg_612;
        DataRAM_2_addr_reg_612_pp0_iter2_reg <= DataRAM_2_addr_reg_612_pp0_iter1_reg;
        DataRAM_2_addr_reg_612_pp0_iter3_reg <= DataRAM_2_addr_reg_612_pp0_iter2_reg;
        DataRAM_2_addr_reg_612_pp0_iter4_reg <= DataRAM_2_addr_reg_612_pp0_iter3_reg;
        DataRAM_2_addr_reg_612_pp0_iter5_reg <= DataRAM_2_addr_reg_612_pp0_iter4_reg;
        DataRAM_2_addr_reg_612_pp0_iter6_reg <= DataRAM_2_addr_reg_612_pp0_iter5_reg;
        DataRAM_3_addr_reg_623_pp0_iter1_reg <= DataRAM_3_addr_reg_623;
        DataRAM_3_addr_reg_623_pp0_iter2_reg <= DataRAM_3_addr_reg_623_pp0_iter1_reg;
        DataRAM_3_addr_reg_623_pp0_iter3_reg <= DataRAM_3_addr_reg_623_pp0_iter2_reg;
        DataRAM_3_addr_reg_623_pp0_iter4_reg <= DataRAM_3_addr_reg_623_pp0_iter3_reg;
        DataRAM_3_addr_reg_623_pp0_iter5_reg <= DataRAM_3_addr_reg_623_pp0_iter4_reg;
        DataRAM_3_addr_reg_623_pp0_iter6_reg <= DataRAM_3_addr_reg_623_pp0_iter5_reg;
        DataRAM_4_addr_reg_634_pp0_iter1_reg <= DataRAM_4_addr_reg_634;
        DataRAM_4_addr_reg_634_pp0_iter2_reg <= DataRAM_4_addr_reg_634_pp0_iter1_reg;
        DataRAM_4_addr_reg_634_pp0_iter3_reg <= DataRAM_4_addr_reg_634_pp0_iter2_reg;
        DataRAM_4_addr_reg_634_pp0_iter4_reg <= DataRAM_4_addr_reg_634_pp0_iter3_reg;
        DataRAM_4_addr_reg_634_pp0_iter5_reg <= DataRAM_4_addr_reg_634_pp0_iter4_reg;
        DataRAM_4_addr_reg_634_pp0_iter6_reg <= DataRAM_4_addr_reg_634_pp0_iter5_reg;
        DataRAM_5_addr_reg_645_pp0_iter1_reg <= DataRAM_5_addr_reg_645;
        DataRAM_5_addr_reg_645_pp0_iter2_reg <= DataRAM_5_addr_reg_645_pp0_iter1_reg;
        DataRAM_5_addr_reg_645_pp0_iter3_reg <= DataRAM_5_addr_reg_645_pp0_iter2_reg;
        DataRAM_5_addr_reg_645_pp0_iter4_reg <= DataRAM_5_addr_reg_645_pp0_iter3_reg;
        DataRAM_5_addr_reg_645_pp0_iter5_reg <= DataRAM_5_addr_reg_645_pp0_iter4_reg;
        DataRAM_5_addr_reg_645_pp0_iter6_reg <= DataRAM_5_addr_reg_645_pp0_iter5_reg;
        DataRAM_6_addr_reg_656_pp0_iter1_reg <= DataRAM_6_addr_reg_656;
        DataRAM_6_addr_reg_656_pp0_iter2_reg <= DataRAM_6_addr_reg_656_pp0_iter1_reg;
        DataRAM_6_addr_reg_656_pp0_iter3_reg <= DataRAM_6_addr_reg_656_pp0_iter2_reg;
        DataRAM_6_addr_reg_656_pp0_iter4_reg <= DataRAM_6_addr_reg_656_pp0_iter3_reg;
        DataRAM_6_addr_reg_656_pp0_iter5_reg <= DataRAM_6_addr_reg_656_pp0_iter4_reg;
        DataRAM_6_addr_reg_656_pp0_iter6_reg <= DataRAM_6_addr_reg_656_pp0_iter5_reg;
        DataRAM_7_addr_reg_667_pp0_iter1_reg <= DataRAM_7_addr_reg_667;
        DataRAM_7_addr_reg_667_pp0_iter2_reg <= DataRAM_7_addr_reg_667_pp0_iter1_reg;
        DataRAM_7_addr_reg_667_pp0_iter3_reg <= DataRAM_7_addr_reg_667_pp0_iter2_reg;
        DataRAM_7_addr_reg_667_pp0_iter4_reg <= DataRAM_7_addr_reg_667_pp0_iter3_reg;
        DataRAM_7_addr_reg_667_pp0_iter5_reg <= DataRAM_7_addr_reg_667_pp0_iter4_reg;
        DataRAM_7_addr_reg_667_pp0_iter6_reg <= DataRAM_7_addr_reg_667_pp0_iter5_reg;
        DataRAM_addr_reg_590_pp0_iter1_reg <= DataRAM_addr_reg_590;
        DataRAM_addr_reg_590_pp0_iter2_reg <= DataRAM_addr_reg_590_pp0_iter1_reg;
        DataRAM_addr_reg_590_pp0_iter3_reg <= DataRAM_addr_reg_590_pp0_iter2_reg;
        DataRAM_addr_reg_590_pp0_iter4_reg <= DataRAM_addr_reg_590_pp0_iter3_reg;
        DataRAM_addr_reg_590_pp0_iter5_reg <= DataRAM_addr_reg_590_pp0_iter4_reg;
        DataRAM_addr_reg_590_pp0_iter6_reg <= DataRAM_addr_reg_590_pp0_iter5_reg;
        trunc_ln181_2_reg_678_pp0_iter1_reg <= trunc_ln181_2_reg_678;
        trunc_ln181_2_reg_678_pp0_iter2_reg <= trunc_ln181_2_reg_678_pp0_iter1_reg;
        trunc_ln181_2_reg_678_pp0_iter3_reg <= trunc_ln181_2_reg_678_pp0_iter2_reg;
        trunc_ln181_2_reg_678_pp0_iter4_reg <= trunc_ln181_2_reg_678_pp0_iter3_reg;
        trunc_ln181_2_reg_678_pp0_iter5_reg <= trunc_ln181_2_reg_678_pp0_iter4_reg;
        trunc_ln181_2_reg_678_pp0_iter6_reg <= trunc_ln181_2_reg_678_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_reg_563 <= add_ln172_fu_352_p2;
        icmp_ln172_reg_559 <= icmp_ln172_fu_346_p2;
        icmp_ln172_reg_559_pp0_iter1_reg <= icmp_ln172_reg_559;
        icmp_ln172_reg_559_pp0_iter2_reg <= icmp_ln172_reg_559_pp0_iter1_reg;
        icmp_ln172_reg_559_pp0_iter3_reg <= icmp_ln172_reg_559_pp0_iter2_reg;
        icmp_ln172_reg_559_pp0_iter4_reg <= icmp_ln172_reg_559_pp0_iter3_reg;
        icmp_ln172_reg_559_pp0_iter5_reg <= icmp_ln172_reg_559_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln172_fu_346_p2 == 1'd0))) begin
        icmp_ln181_reg_573 <= icmp_ln181_fu_370_p2;
        k_load_reg_568 <= ap_sig_allocacmp_k_load;
        select_ln172_1_reg_578 <= select_ln172_1_fu_376_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_1_address0 = DataRAM_1_addr_reg_601_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_1_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_1_ce0 = 1'b1;
    end else begin
        DataRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_1_ce1 = 1'b1;
    end else begin
        DataRAM_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_1_we0 = 1'b1;
    end else begin
        DataRAM_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_2_address0 = DataRAM_2_addr_reg_612_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_2_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_2_ce0 = 1'b1;
    end else begin
        DataRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_2_ce1 = 1'b1;
    end else begin
        DataRAM_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_2_we0 = 1'b1;
    end else begin
        DataRAM_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_3_address0 = DataRAM_3_addr_reg_623_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_3_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_3_ce0 = 1'b1;
    end else begin
        DataRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_3_ce1 = 1'b1;
    end else begin
        DataRAM_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_3_we0 = 1'b1;
    end else begin
        DataRAM_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_4_address0 = DataRAM_4_addr_reg_634_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_4_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_4_ce0 = 1'b1;
    end else begin
        DataRAM_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_4_ce1 = 1'b1;
    end else begin
        DataRAM_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_4_we0 = 1'b1;
    end else begin
        DataRAM_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_5_address0 = DataRAM_5_addr_reg_645_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_5_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_5_ce0 = 1'b1;
    end else begin
        DataRAM_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_5_ce1 = 1'b1;
    end else begin
        DataRAM_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_5_we0 = 1'b1;
    end else begin
        DataRAM_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_6_address0 = DataRAM_6_addr_reg_656_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_6_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_6_ce0 = 1'b1;
    end else begin
        DataRAM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_6_ce1 = 1'b1;
    end else begin
        DataRAM_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_6_we0 = 1'b1;
    end else begin
        DataRAM_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_7_address0 = DataRAM_7_addr_reg_667_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_7_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_7_ce0 = 1'b1;
    end else begin
        DataRAM_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_7_ce1 = 1'b1;
    end else begin
        DataRAM_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_7_we0 = 1'b1;
    end else begin
        DataRAM_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_address0 = DataRAM_addr_reg_590_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_address0 = zext_ln189_1_fu_446_p1;
    end else begin
        DataRAM_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DataRAM_ce0 = 1'b1;
    end else begin
        DataRAM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        DataRAM_ce1 = 1'b1;
    end else begin
        DataRAM_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (trunc_ln181_2_reg_678_pp0_iter6_reg == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_we0 = 1'b1;
    end else begin
        DataRAM_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_reg_559 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln172_reg_559_pp0_iter5_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten90_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten90_load = indvar_flatten90_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 7'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_load = 7'd0;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_86;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DataRAM_1_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_1_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_2_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_2_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_3_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_3_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_4_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_4_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_5_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_5_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_6_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_6_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_7_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_7_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign DataRAM_address1 = zext_ln188_1_fu_426_p1;

assign DataRAM_d0 = grp_Configurable_PE_fu_4773_p_dout0;

assign add_ln172_1_fu_364_p2 = (ap_sig_allocacmp_j_load + 7'd1);

assign add_ln172_fu_352_p2 = (ap_sig_allocacmp_indvar_flatten90_load + 13'd1);

assign add_ln181_fu_510_p2 = (select_ln172_reg_585 + 7'd1);

assign add_ln189_2_fu_408_p2 = (trunc_ln189_fu_402_p1 + zext_ln189_fu_405_p1);

assign add_ln189_fu_396_p2 = (trunc_ln188_fu_390_p1 + zext_ln188_fu_393_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign empty_fu_414_p1 = select_ln172_fu_384_p3[2:0];

assign grp_Configurable_PE_fu_4773_p_din1 = AddInput1_Reg_reg_684;

assign grp_Configurable_PE_fu_4773_p_din2 = AddInput2_Reg_reg_689;

assign grp_Configurable_PE_fu_4773_p_din3 = 2'd2;

assign grp_Configurable_PE_fu_4773_p_din4 = 2'd0;

assign icmp_ln172_fu_346_p2 = ((ap_sig_allocacmp_indvar_flatten90_load == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln181_fu_370_p2 = ((ap_sig_allocacmp_k_load == 7'd64) ? 1'b1 : 1'b0);

assign select_ln172_1_fu_376_p3 = ((icmp_ln181_fu_370_p2[0:0] == 1'b1) ? add_ln172_1_fu_364_p2 : ap_sig_allocacmp_j_load);

assign select_ln172_fu_384_p3 = ((icmp_ln181_reg_573[0:0] == 1'b1) ? 7'd0 : k_load_reg_568);

assign tmp_62_fu_438_p3 = {{add_ln189_2_fu_408_p2}, {empty_fu_414_p1}};

assign tmp_s_fu_418_p3 = {{add_ln189_fu_396_p2}, {empty_fu_414_p1}};

assign trunc_ln188_fu_390_p1 = add_ln188_1[9:0];

assign trunc_ln189_fu_402_p1 = add_ln189_1[9:0];

assign zext_ln188_1_fu_426_p1 = tmp_s_fu_418_p3;

assign zext_ln188_fu_393_p1 = select_ln172_1_reg_578;

assign zext_ln189_1_fu_446_p1 = tmp_62_fu_438_p3;

assign zext_ln189_fu_405_p1 = select_ln172_1_reg_578;

endmodule //Crypto1_Crypto1_Pipeline_POLY_ADD_ROW_LOOP_POLY_ADD_COL_LOOP6
