// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_MUL_MOD_3 (
        ap_clk,
        ap_rst,
        input1_val,
        input2_val,
        MOD_INDEX,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] input1_val;
input  [31:0] input2_val;
input  [1:0] MOD_INDEX;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [1:0] MOD_INDEX_read_reg_621;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter1_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter2_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter3_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter4_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter5_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter6_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter7_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter8_reg;
reg   [1:0] MOD_INDEX_read_reg_621_pp0_iter9_reg;
wire   [15:0] input2_low_fu_102_p1;
reg   [15:0] input2_low_reg_627;
wire   [15:0] input1_low_fu_106_p1;
reg   [15:0] input1_low_reg_632;
wire   [15:0] input1_high_fu_114_p4;
reg   [15:0] input1_high_reg_637;
wire   [15:0] input2_high_fu_132_p4;
reg   [15:0] input2_high_reg_642;
wire   [31:0] ac_fu_168_p2;
reg   [31:0] ac_reg_652;
reg   [31:0] ac_reg_652_pp0_iter2_reg;
reg   [31:0] ac_reg_652_pp0_iter3_reg;
wire   [31:0] bd_fu_174_p2;
reg   [31:0] bd_reg_658;
reg   [31:0] bd_reg_658_pp0_iter2_reg;
reg   [31:0] bd_reg_658_pp0_iter3_reg;
wire   [34:0] grp_fu_590_p4;
reg   [34:0] sub_ln63_reg_669;
wire   [63:0] res_mult_fu_213_p2;
reg   [63:0] res_mult_reg_674;
reg   [63:0] res_mult_reg_674_pp0_iter5_reg;
reg   [63:0] res_mult_reg_674_pp0_iter6_reg;
reg   [63:0] res_mult_reg_674_pp0_iter7_reg;
reg   [63:0] res_mult_reg_674_pp0_iter8_reg;
reg   [63:0] res_mult_reg_674_pp0_iter9_reg;
reg   [63:0] res_mult_reg_674_pp0_iter10_reg;
reg   [63:0] res_mult_reg_674_pp0_iter11_reg;
reg   [63:0] res_mult_reg_674_pp0_iter12_reg;
reg   [63:0] res_mult_reg_674_pp0_iter13_reg;
reg   [15:0] input1_low_1_reg_679;
reg   [15:0] input1_low_1_reg_679_pp0_iter5_reg;
reg   [15:0] input1_high_1_reg_685;
reg   [15:0] input1_high_1_reg_685_pp0_iter5_reg;
wire   [15:0] input2_low_1_fu_250_p1;
reg   [15:0] input2_low_1_reg_691;
wire  signed [15:0] sext_ln47_fu_274_p1;
reg  signed [15:0] sext_ln47_reg_696;
wire   [31:0] ac_1_fu_304_p2;
reg   [31:0] ac_1_reg_706;
reg   [31:0] ac_1_reg_706_pp0_iter7_reg;
reg   [31:0] ac_1_reg_706_pp0_iter8_reg;
wire   [31:0] bd_1_fu_310_p2;
reg   [31:0] bd_1_reg_712;
reg   [31:0] bd_1_reg_712_pp0_iter7_reg;
reg   [31:0] bd_1_reg_712_pp0_iter8_reg;
wire   [15:0] trunc_ln62_fu_316_p1;
reg   [15:0] trunc_ln62_reg_719;
reg   [15:0] trunc_ln62_reg_719_pp0_iter7_reg;
wire   [34:0] grp_fu_600_p4;
reg   [34:0] sub_ln63_1_reg_729;
reg   [15:0] res_mult_shift_part_reg_734;
reg   [15:0] res_mult_shift_part_reg_734_pp0_iter9_reg;
reg   [15:0] res_mult_shift_part_reg_734_pp0_iter10_reg;
reg   [15:0] trunc_ln45_2_reg_740;
reg   [15:0] trunc_ln45_2_reg_740_pp0_iter10_reg;
wire   [30:0] mod_fu_402_p5;
reg   [30:0] mod_reg_746;
reg   [30:0] mod_reg_746_pp0_iter11_reg;
reg   [30:0] mod_reg_746_pp0_iter12_reg;
reg   [30:0] mod_reg_746_pp0_iter13_reg;
reg   [30:0] mod_reg_746_pp0_iter14_reg;
wire   [15:0] input2_low_2_fu_413_p1;
reg   [15:0] input2_low_2_reg_752;
wire   [14:0] input2_high_2_fu_427_p4;
reg   [14:0] input2_high_2_reg_757;
wire   [30:0] ac_2_fu_463_p2;
reg   [30:0] ac_2_reg_767;
reg   [30:0] ac_2_reg_767_pp0_iter12_reg;
reg   [30:0] ac_2_reg_767_pp0_iter13_reg;
wire   [31:0] bd_2_fu_469_p2;
reg   [31:0] bd_2_reg_773;
reg   [31:0] bd_2_reg_773_pp0_iter12_reg;
reg   [31:0] bd_2_reg_773_pp0_iter13_reg;
wire   [34:0] grp_fu_611_p4;
reg   [34:0] sub_ln63_2_reg_784;
wire   [63:0] sub_ln142_fu_517_p2;
reg   [63:0] sub_ln142_reg_789;
wire    ap_block_pp0_stage0;
wire   [16:0] zext_ln45_fu_124_p1;
wire   [16:0] zext_ln44_1_fu_110_p1;
wire   [16:0] a_plus_b_fu_146_p2;
wire   [15:0] ac_fu_168_p0;
wire   [15:0] ac_fu_168_p1;
wire   [15:0] bd_fu_174_p0;
wire   [15:0] bd_fu_174_p1;
wire   [32:0] zext_ln63_3_fu_180_p1;
wire   [32:0] zext_ln63_4_fu_183_p1;
wire   [32:0] add_ln63_fu_186_p2;
wire   [50:0] sum2_fu_202_p3;
wire   [63:0] sum1_fu_196_p3;
wire  signed [63:0] sext_ln63_fu_209_p1;
wire   [19:0] m_fu_239_p5;
wire   [3:0] input2_high_1_fu_264_p4;
wire   [16:0] zext_ln47_4_fu_278_p1;
wire   [16:0] zext_ln46_3_fu_260_p1;
wire   [16:0] c_plus_d_1_fu_282_p2;
wire   [15:0] ac_1_fu_304_p0;
wire   [15:0] ac_1_fu_304_p1;
wire   [15:0] bd_1_fu_310_p0;
wire   [15:0] bd_1_fu_310_p1;
wire   [32:0] zext_ln63_9_fu_320_p1;
wire   [32:0] zext_ln63_10_fu_323_p1;
wire   [32:0] add_ln63_1_fu_326_p2;
wire   [31:0] trunc_ln65_fu_342_p1;
wire   [47:0] trunc_ln8_fu_345_p3;
wire   [47:0] tmp_fu_336_p3;
wire   [47:0] add_ln131_fu_353_p2;
wire   [50:0] sum2_1_fu_375_p3;
wire  signed [63:0] sext_ln63_1_fu_382_p1;
wire   [63:0] sum1_1_fu_369_p3;
wire   [63:0] res_mult_shift_fu_386_p2;
wire   [16:0] zext_ln47_3_fu_437_p1;
wire   [16:0] zext_ln46_5_fu_423_p1;
wire   [16:0] c_plus_d_2_fu_441_p2;
wire   [14:0] ac_2_fu_463_p0;
wire   [15:0] ac_2_fu_463_p1;
wire   [15:0] bd_2_fu_469_p0;
wire   [15:0] bd_2_fu_469_p1;
wire   [32:0] zext_ln63_15_fu_475_p1;
wire   [32:0] zext_ln63_16_fu_478_p1;
wire   [32:0] add_ln63_2_fu_481_p2;
wire   [62:0] sum1_2_fu_491_p3;
wire   [50:0] sum2_2_fu_501_p3;
wire   [63:0] zext_ln62_fu_497_p1;
wire   [63:0] res_shift_fu_512_p2;
wire  signed [63:0] sext_ln63_2_fu_508_p1;
wire   [63:0] zext_ln146_fu_523_p1;
wire   [31:0] zext_ln147_cast_fu_531_p3;
wire   [63:0] zext_ln147_fu_538_p1;
wire   [63:0] sub_ln146_fu_526_p2;
wire   [63:0] sub_ln147_fu_542_p2;
wire   [0:0] tmp_44_fu_555_p3;
wire   [31:0] trunc_ln149_1_fu_566_p1;
wire   [31:0] trunc_ln149_2_fu_570_p1;
wire   [0:0] tmp_43_fu_547_p3;
wire   [31:0] trunc_ln149_fu_563_p1;
wire   [31:0] select_ln149_fu_574_p3;
wire   [15:0] grp_fu_590_p0;
wire   [15:0] grp_fu_590_p1;
wire   [16:0] grp_fu_590_p2;
wire   [32:0] grp_fu_590_p3;
wire   [15:0] grp_fu_600_p0;
wire   [15:0] grp_fu_600_p1;
wire   [16:0] grp_fu_600_p2;
wire   [32:0] grp_fu_600_p3;
wire   [15:0] grp_fu_611_p0;
wire   [15:0] grp_fu_611_p1;
wire   [16:0] grp_fu_611_p2;
wire   [32:0] grp_fu_611_p3;
wire   [31:0] select_ln149_1_fu_582_p3;
reg    grp_fu_590_ce;
reg    grp_fu_600_ce;
reg    grp_fu_611_ce;
reg    ap_ce_reg;
reg   [31:0] input1_val_int_reg;
reg   [31:0] input2_val_int_reg;
reg   [1:0] MOD_INDEX_int_reg;
reg   [31:0] ap_return_int_reg;
wire   [31:0] ac_1_fu_304_p00;
wire   [31:0] ac_1_fu_304_p10;
wire   [30:0] ac_2_fu_463_p00;
wire   [30:0] ac_2_fu_463_p10;
wire   [31:0] ac_fu_168_p00;
wire   [31:0] ac_fu_168_p10;
wire   [31:0] bd_1_fu_310_p00;
wire   [31:0] bd_1_fu_310_p10;
wire   [31:0] bd_2_fu_469_p00;
wire   [31:0] bd_2_fu_469_p10;
wire   [31:0] bd_fu_174_p00;
wire   [31:0] bd_fu_174_p10;
wire   [16:0] grp_fu_590_p00;
wire   [16:0] grp_fu_590_p10;
wire   [33:0] grp_fu_590_p20;
wire   [34:0] grp_fu_590_p30;
wire   [16:0] grp_fu_600_p00;
wire   [16:0] grp_fu_600_p10;
wire   [33:0] grp_fu_600_p20;
wire   [34:0] grp_fu_600_p30;
wire   [16:0] grp_fu_611_p00;
wire   [16:0] grp_fu_611_p10;
wire   [33:0] grp_fu_611_p20;
wire   [34:0] grp_fu_611_p30;

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U377(
    .din0(ac_fu_168_p0),
    .din1(ac_fu_168_p1),
    .dout(ac_fu_168_p2)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U378(
    .din0(bd_fu_174_p0),
    .din1(bd_fu_174_p1),
    .dout(bd_fu_174_p2)
);

Crypto1_mux_3_2_20_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
mux_3_2_20_1_0_U379(
    .din0(20'd1015804),
    .din1(20'd753680),
    .din2(20'd524347),
    .din3(MOD_INDEX_read_reg_621_pp0_iter4_reg),
    .dout(m_fu_239_p5)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U380(
    .din0(ac_1_fu_304_p0),
    .din1(ac_1_fu_304_p1),
    .dout(ac_1_fu_304_p2)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U381(
    .din0(bd_1_fu_310_p0),
    .din1(bd_1_fu_310_p1),
    .dout(bd_1_fu_310_p2)
);

Crypto1_mux_3_2_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_3_2_31_1_0_U382(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .din3(MOD_INDEX_read_reg_621_pp0_iter9_reg),
    .dout(mod_fu_402_p5)
);

Crypto1_mul_15ns_16ns_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_15ns_16ns_31_1_0_U383(
    .din0(ac_2_fu_463_p0),
    .din1(ac_2_fu_463_p1),
    .dout(ac_2_fu_463_p2)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U384(
    .din0(bd_2_fu_469_p0),
    .din1(bd_2_fu_469_p1),
    .dout(bd_2_fu_469_p2)
);

Crypto1_ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .din3_WIDTH( 33 ),
    .dout_WIDTH( 35 ))
ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0_U385(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_590_p0),
    .din1(grp_fu_590_p1),
    .din2(grp_fu_590_p2),
    .din3(grp_fu_590_p3),
    .ce(grp_fu_590_ce),
    .dout(grp_fu_590_p4)
);

Crypto1_ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .din3_WIDTH( 33 ),
    .dout_WIDTH( 35 ))
ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0_U386(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_600_p0),
    .din1(grp_fu_600_p1),
    .din2(grp_fu_600_p2),
    .din3(grp_fu_600_p3),
    .ce(grp_fu_600_ce),
    .dout(grp_fu_600_p4)
);

Crypto1_ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .din3_WIDTH( 33 ),
    .dout_WIDTH( 35 ))
ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0_U387(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_611_p0),
    .din1(grp_fu_611_p1),
    .din2(grp_fu_611_p2),
    .din3(grp_fu_611_p3),
    .ce(grp_fu_611_ce),
    .dout(grp_fu_611_p4)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        MOD_INDEX_int_reg <= MOD_INDEX;
        input1_val_int_reg <= input1_val;
        input2_val_int_reg <= input2_val;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        MOD_INDEX_read_reg_621 <= MOD_INDEX_int_reg;
        MOD_INDEX_read_reg_621_pp0_iter1_reg <= MOD_INDEX_read_reg_621;
        MOD_INDEX_read_reg_621_pp0_iter2_reg <= MOD_INDEX_read_reg_621_pp0_iter1_reg;
        MOD_INDEX_read_reg_621_pp0_iter3_reg <= MOD_INDEX_read_reg_621_pp0_iter2_reg;
        MOD_INDEX_read_reg_621_pp0_iter4_reg <= MOD_INDEX_read_reg_621_pp0_iter3_reg;
        MOD_INDEX_read_reg_621_pp0_iter5_reg <= MOD_INDEX_read_reg_621_pp0_iter4_reg;
        MOD_INDEX_read_reg_621_pp0_iter6_reg <= MOD_INDEX_read_reg_621_pp0_iter5_reg;
        MOD_INDEX_read_reg_621_pp0_iter7_reg <= MOD_INDEX_read_reg_621_pp0_iter6_reg;
        MOD_INDEX_read_reg_621_pp0_iter8_reg <= MOD_INDEX_read_reg_621_pp0_iter7_reg;
        MOD_INDEX_read_reg_621_pp0_iter9_reg <= MOD_INDEX_read_reg_621_pp0_iter8_reg;
        ac_1_reg_706 <= ac_1_fu_304_p2;
        ac_1_reg_706_pp0_iter7_reg <= ac_1_reg_706;
        ac_1_reg_706_pp0_iter8_reg <= ac_1_reg_706_pp0_iter7_reg;
        ac_2_reg_767 <= ac_2_fu_463_p2;
        ac_2_reg_767_pp0_iter12_reg <= ac_2_reg_767;
        ac_2_reg_767_pp0_iter13_reg <= ac_2_reg_767_pp0_iter12_reg;
        ac_reg_652 <= ac_fu_168_p2;
        ac_reg_652_pp0_iter2_reg <= ac_reg_652;
        ac_reg_652_pp0_iter3_reg <= ac_reg_652_pp0_iter2_reg;
        bd_1_reg_712 <= bd_1_fu_310_p2;
        bd_1_reg_712_pp0_iter7_reg <= bd_1_reg_712;
        bd_1_reg_712_pp0_iter8_reg <= bd_1_reg_712_pp0_iter7_reg;
        bd_2_reg_773 <= bd_2_fu_469_p2;
        bd_2_reg_773_pp0_iter12_reg <= bd_2_reg_773;
        bd_2_reg_773_pp0_iter13_reg <= bd_2_reg_773_pp0_iter12_reg;
        bd_reg_658 <= bd_fu_174_p2;
        bd_reg_658_pp0_iter2_reg <= bd_reg_658;
        bd_reg_658_pp0_iter3_reg <= bd_reg_658_pp0_iter2_reg;
        input1_high_1_reg_685 <= {{res_mult_fu_213_p2[61:46]}};
        input1_high_1_reg_685_pp0_iter5_reg <= input1_high_1_reg_685;
        input1_high_reg_637 <= {{input1_val_int_reg[31:16]}};
        input1_low_1_reg_679 <= {{res_mult_fu_213_p2[45:30]}};
        input1_low_1_reg_679_pp0_iter5_reg <= input1_low_1_reg_679;
        input1_low_reg_632 <= input1_low_fu_106_p1;
        input2_high_2_reg_757 <= {{mod_fu_402_p5[30:16]}};
        input2_high_reg_642 <= {{input2_val_int_reg[31:16]}};
        input2_low_1_reg_691 <= input2_low_1_fu_250_p1;
        input2_low_2_reg_752 <= input2_low_2_fu_413_p1;
        input2_low_reg_627 <= input2_low_fu_102_p1;
        mod_reg_746 <= mod_fu_402_p5;
        mod_reg_746_pp0_iter11_reg <= mod_reg_746;
        mod_reg_746_pp0_iter12_reg <= mod_reg_746_pp0_iter11_reg;
        mod_reg_746_pp0_iter13_reg <= mod_reg_746_pp0_iter12_reg;
        mod_reg_746_pp0_iter14_reg <= mod_reg_746_pp0_iter13_reg;
        res_mult_reg_674 <= res_mult_fu_213_p2;
        res_mult_reg_674_pp0_iter10_reg <= res_mult_reg_674_pp0_iter9_reg;
        res_mult_reg_674_pp0_iter11_reg <= res_mult_reg_674_pp0_iter10_reg;
        res_mult_reg_674_pp0_iter12_reg <= res_mult_reg_674_pp0_iter11_reg;
        res_mult_reg_674_pp0_iter13_reg <= res_mult_reg_674_pp0_iter12_reg;
        res_mult_reg_674_pp0_iter5_reg <= res_mult_reg_674;
        res_mult_reg_674_pp0_iter6_reg <= res_mult_reg_674_pp0_iter5_reg;
        res_mult_reg_674_pp0_iter7_reg <= res_mult_reg_674_pp0_iter6_reg;
        res_mult_reg_674_pp0_iter8_reg <= res_mult_reg_674_pp0_iter7_reg;
        res_mult_reg_674_pp0_iter9_reg <= res_mult_reg_674_pp0_iter8_reg;
        res_mult_shift_part_reg_734 <= {{add_ln131_fu_353_p2[47:32]}};
        res_mult_shift_part_reg_734_pp0_iter10_reg <= res_mult_shift_part_reg_734_pp0_iter9_reg;
        res_mult_shift_part_reg_734_pp0_iter9_reg <= res_mult_shift_part_reg_734;
        sext_ln47_reg_696 <= sext_ln47_fu_274_p1;
        sub_ln142_reg_789 <= sub_ln142_fu_517_p2;
        sub_ln63_1_reg_729 <= grp_fu_600_p4;
        sub_ln63_2_reg_784 <= grp_fu_611_p4;
        sub_ln63_reg_669 <= grp_fu_590_p4;
        trunc_ln45_2_reg_740 <= {{res_mult_shift_fu_386_p2[63:48]}};
        trunc_ln45_2_reg_740_pp0_iter10_reg <= trunc_ln45_2_reg_740;
        trunc_ln62_reg_719 <= trunc_ln62_fu_316_p1;
        trunc_ln62_reg_719_pp0_iter7_reg <= trunc_ln62_reg_719;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln149_1_fu_582_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln149_1_fu_582_p3;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_590_ce = 1'b1;
    end else begin
        grp_fu_590_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_600_ce = 1'b1;
    end else begin
        grp_fu_600_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_611_ce = 1'b1;
    end else begin
        grp_fu_611_ce = 1'b0;
    end
end

assign a_plus_b_fu_146_p2 = (zext_ln45_fu_124_p1 + zext_ln44_1_fu_110_p1);

assign ac_1_fu_304_p0 = ac_1_fu_304_p00;

assign ac_1_fu_304_p00 = input1_high_1_reg_685_pp0_iter5_reg;

assign ac_1_fu_304_p1 = ac_1_fu_304_p10;

assign ac_1_fu_304_p10 = $unsigned(sext_ln47_reg_696);

assign ac_2_fu_463_p0 = ac_2_fu_463_p00;

assign ac_2_fu_463_p00 = input2_high_2_reg_757;

assign ac_2_fu_463_p1 = ac_2_fu_463_p10;

assign ac_2_fu_463_p10 = trunc_ln45_2_reg_740_pp0_iter10_reg;

assign ac_fu_168_p0 = ac_fu_168_p00;

assign ac_fu_168_p00 = input2_high_reg_642;

assign ac_fu_168_p1 = ac_fu_168_p10;

assign ac_fu_168_p10 = input1_high_reg_637;

assign add_ln131_fu_353_p2 = (trunc_ln8_fu_345_p3 + tmp_fu_336_p3);

assign add_ln63_1_fu_326_p2 = (zext_ln63_9_fu_320_p1 + zext_ln63_10_fu_323_p1);

assign add_ln63_2_fu_481_p2 = (zext_ln63_15_fu_475_p1 + zext_ln63_16_fu_478_p1);

assign add_ln63_fu_186_p2 = (zext_ln63_3_fu_180_p1 + zext_ln63_4_fu_183_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign bd_1_fu_310_p0 = bd_1_fu_310_p00;

assign bd_1_fu_310_p00 = input1_low_1_reg_679_pp0_iter5_reg;

assign bd_1_fu_310_p1 = bd_1_fu_310_p10;

assign bd_1_fu_310_p10 = input2_low_1_reg_691;

assign bd_2_fu_469_p0 = bd_2_fu_469_p00;

assign bd_2_fu_469_p00 = res_mult_shift_part_reg_734_pp0_iter10_reg;

assign bd_2_fu_469_p1 = bd_2_fu_469_p10;

assign bd_2_fu_469_p10 = input2_low_2_reg_752;

assign bd_fu_174_p0 = bd_fu_174_p00;

assign bd_fu_174_p00 = input2_low_reg_627;

assign bd_fu_174_p1 = bd_fu_174_p10;

assign bd_fu_174_p10 = input1_low_reg_632;

assign c_plus_d_1_fu_282_p2 = (zext_ln47_4_fu_278_p1 + zext_ln46_3_fu_260_p1);

assign c_plus_d_2_fu_441_p2 = (zext_ln47_3_fu_437_p1 + zext_ln46_5_fu_423_p1);

assign grp_fu_590_p0 = grp_fu_590_p00;

assign grp_fu_590_p00 = input2_high_fu_132_p4;

assign grp_fu_590_p1 = grp_fu_590_p10;

assign grp_fu_590_p10 = input2_low_fu_102_p1;

assign grp_fu_590_p2 = grp_fu_590_p20;

assign grp_fu_590_p20 = a_plus_b_fu_146_p2;

assign grp_fu_590_p3 = grp_fu_590_p30;

assign grp_fu_590_p30 = add_ln63_fu_186_p2;

assign grp_fu_600_p0 = grp_fu_600_p00;

assign grp_fu_600_p00 = input1_high_1_reg_685;

assign grp_fu_600_p1 = grp_fu_600_p10;

assign grp_fu_600_p10 = input1_low_1_reg_679;

assign grp_fu_600_p2 = grp_fu_600_p20;

assign grp_fu_600_p20 = c_plus_d_1_fu_282_p2;

assign grp_fu_600_p3 = grp_fu_600_p30;

assign grp_fu_600_p30 = add_ln63_1_fu_326_p2;

assign grp_fu_611_p0 = grp_fu_611_p00;

assign grp_fu_611_p00 = res_mult_shift_part_reg_734_pp0_iter9_reg;

assign grp_fu_611_p1 = grp_fu_611_p10;

assign grp_fu_611_p10 = trunc_ln45_2_reg_740;

assign grp_fu_611_p2 = grp_fu_611_p20;

assign grp_fu_611_p20 = c_plus_d_2_fu_441_p2;

assign grp_fu_611_p3 = grp_fu_611_p30;

assign grp_fu_611_p30 = add_ln63_2_fu_481_p2;

assign input1_high_fu_114_p4 = {{input1_val_int_reg[31:16]}};

assign input1_low_fu_106_p1 = input1_val_int_reg[15:0];

assign input2_high_1_fu_264_p4 = {{m_fu_239_p5[19:16]}};

assign input2_high_2_fu_427_p4 = {{mod_fu_402_p5[30:16]}};

assign input2_high_fu_132_p4 = {{input2_val_int_reg[31:16]}};

assign input2_low_1_fu_250_p1 = m_fu_239_p5[15:0];

assign input2_low_2_fu_413_p1 = mod_fu_402_p5[15:0];

assign input2_low_fu_102_p1 = input2_val_int_reg[15:0];

assign res_mult_fu_213_p2 = ($signed(sum1_fu_196_p3) + $signed(sext_ln63_fu_209_p1));

assign res_mult_shift_fu_386_p2 = ($signed(sext_ln63_1_fu_382_p1) + $signed(sum1_1_fu_369_p3));

assign res_shift_fu_512_p2 = (res_mult_reg_674_pp0_iter13_reg - zext_ln62_fu_497_p1);

assign select_ln149_1_fu_582_p3 = ((tmp_43_fu_547_p3[0:0] == 1'b1) ? trunc_ln149_fu_563_p1 : select_ln149_fu_574_p3);

assign select_ln149_fu_574_p3 = ((tmp_44_fu_555_p3[0:0] == 1'b1) ? trunc_ln149_1_fu_566_p1 : trunc_ln149_2_fu_570_p1);

assign sext_ln47_fu_274_p1 = $signed(input2_high_1_fu_264_p4);

assign sext_ln63_1_fu_382_p1 = $signed(sum2_1_fu_375_p3);

assign sext_ln63_2_fu_508_p1 = $signed(sum2_2_fu_501_p3);

assign sext_ln63_fu_209_p1 = $signed(sum2_fu_202_p3);

assign sub_ln142_fu_517_p2 = ($signed(res_shift_fu_512_p2) - $signed(sext_ln63_2_fu_508_p1));

assign sub_ln146_fu_526_p2 = (sub_ln142_reg_789 - zext_ln146_fu_523_p1);

assign sub_ln147_fu_542_p2 = (sub_ln142_reg_789 - zext_ln147_fu_538_p1);

assign sum1_1_fu_369_p3 = {{ac_1_reg_706_pp0_iter8_reg}, {bd_1_reg_712_pp0_iter8_reg}};

assign sum1_2_fu_491_p3 = {{ac_2_reg_767_pp0_iter13_reg}, {bd_2_reg_773_pp0_iter13_reg}};

assign sum1_fu_196_p3 = {{ac_reg_652_pp0_iter3_reg}, {bd_reg_658_pp0_iter3_reg}};

assign sum2_1_fu_375_p3 = {{sub_ln63_1_reg_729}, {16'd0}};

assign sum2_2_fu_501_p3 = {{sub_ln63_2_reg_784}, {16'd0}};

assign sum2_fu_202_p3 = {{sub_ln63_reg_669}, {16'd0}};

assign tmp_43_fu_547_p3 = sub_ln146_fu_526_p2[32'd63];

assign tmp_44_fu_555_p3 = sub_ln147_fu_542_p2[32'd63];

assign tmp_fu_336_p3 = {{trunc_ln62_reg_719_pp0_iter7_reg}, {bd_1_reg_712_pp0_iter7_reg}};

assign trunc_ln149_1_fu_566_p1 = sub_ln146_fu_526_p2[31:0];

assign trunc_ln149_2_fu_570_p1 = sub_ln147_fu_542_p2[31:0];

assign trunc_ln149_fu_563_p1 = sub_ln142_reg_789[31:0];

assign trunc_ln62_fu_316_p1 = ac_1_fu_304_p2[15:0];

assign trunc_ln65_fu_342_p1 = grp_fu_600_p4[31:0];

assign trunc_ln8_fu_345_p3 = {{trunc_ln65_fu_342_p1}, {16'd0}};

assign zext_ln146_fu_523_p1 = mod_reg_746_pp0_iter14_reg;

assign zext_ln147_cast_fu_531_p3 = {{mod_reg_746_pp0_iter14_reg}, {1'd0}};

assign zext_ln147_fu_538_p1 = zext_ln147_cast_fu_531_p3;

assign zext_ln44_1_fu_110_p1 = input1_low_fu_106_p1;

assign zext_ln45_fu_124_p1 = input1_high_fu_114_p4;

assign zext_ln46_3_fu_260_p1 = input2_low_1_fu_250_p1;

assign zext_ln46_5_fu_423_p1 = input2_low_2_fu_413_p1;

assign zext_ln47_3_fu_437_p1 = input2_high_2_fu_427_p4;

assign zext_ln47_4_fu_278_p1 = $unsigned(sext_ln47_fu_274_p1);

assign zext_ln62_fu_497_p1 = sum1_2_fu_491_p3;

assign zext_ln63_10_fu_323_p1 = bd_1_reg_712;

assign zext_ln63_15_fu_475_p1 = ac_2_reg_767;

assign zext_ln63_16_fu_478_p1 = bd_2_reg_773;

assign zext_ln63_3_fu_180_p1 = ac_reg_652;

assign zext_ln63_4_fu_183_p1 = bd_reg_658;

assign zext_ln63_9_fu_320_p1 = ac_1_reg_706;

endmodule //Crypto1_MUL_MOD_3
