

================================================================
== Vitis HLS Report for 'Crypto_Pipeline_POLY_MUL_LOOP'
================================================================
* Date:           Thu Feb 27 10:54:19 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        Crypto
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  5.655 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     4113|     4113|  32.904 us|  32.904 us|  4113|  4113|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- POLY_MUL_LOOP  |     4111|     4111|        20|          4|          1|  1024|       yes|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 20


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 4, D = 20, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.26>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j_6 = alloca i32 1"   --->   Operation 23 'alloca' 'j_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%RAMSel1_cast_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %RAMSel1_cast"   --->   Operation 24 'read' 'RAMSel1_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%RAMSel_cast_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %RAMSel_cast"   --->   Operation 25 'read' 'RAMSel_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln0 = store i13 0, i13 %j_6"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc290"   --->   Operation 27 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%j = load i13 %j_6"   --->   Operation 28 'load' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 29 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i13.i32, i13 %j, i32 12" [Crypto.cpp:145]   --->   Operation 30 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln145 = br i1 %tmp, void %for.inc290.split, void %for.inc290.1.preheader.exitStub" [Crypto.cpp:145]   --->   Operation 31 'br' 'br_ln145' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%j_6_cast75 = zext i13 %j"   --->   Operation 32 'zext' 'j_6_cast75' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%empty = trunc i13 %j"   --->   Operation 33 'trunc' 'empty' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%DataRAM_addr = getelementptr i32 %DataRAM, i64 0, i64 %j_6_cast75" [Crypto.cpp:148]   --->   Operation 34 'getelementptr' 'DataRAM_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%DataRAM_3_addr = getelementptr i32 %DataRAM_3, i64 0, i64 %j_6_cast75" [Crypto.cpp:148]   --->   Operation 35 'getelementptr' 'DataRAM_3_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%DataRAM_6_addr = getelementptr i32 %DataRAM_6, i64 0, i64 %j_6_cast75" [Crypto.cpp:148]   --->   Operation 36 'getelementptr' 'DataRAM_6_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%DataRAM_9_addr = getelementptr i32 %DataRAM_9, i64 0, i64 %j_6_cast75" [Crypto.cpp:148]   --->   Operation 37 'getelementptr' 'DataRAM_9_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (3.25ns)   --->   "%DataRAM_load = load i12 %DataRAM_addr" [Crypto.cpp:148]   --->   Operation 38 'load' 'DataRAM_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 39 [2/2] (3.25ns)   --->   "%DataRAM_3_load = load i12 %DataRAM_3_addr" [Crypto.cpp:148]   --->   Operation 39 'load' 'DataRAM_3_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 40 [2/2] (3.25ns)   --->   "%DataRAM_6_load = load i12 %DataRAM_6_addr" [Crypto.cpp:148]   --->   Operation 40 'load' 'DataRAM_6_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 41 [2/2] (3.25ns)   --->   "%DataRAM_9_load = load i12 %DataRAM_9_addr" [Crypto.cpp:148]   --->   Operation 41 'load' 'DataRAM_9_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%or_ln145 = or i12 %empty, i12 1" [Crypto.cpp:145]   --->   Operation 42 'or' 'or_ln145' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln148 = zext i12 %or_ln145" [Crypto.cpp:148]   --->   Operation 43 'zext' 'zext_ln148' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%DataRAM_addr_4 = getelementptr i32 %DataRAM, i64 0, i64 %zext_ln148" [Crypto.cpp:148]   --->   Operation 44 'getelementptr' 'DataRAM_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%DataRAM_3_addr_4 = getelementptr i32 %DataRAM_3, i64 0, i64 %zext_ln148" [Crypto.cpp:148]   --->   Operation 45 'getelementptr' 'DataRAM_3_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%DataRAM_6_addr_4 = getelementptr i32 %DataRAM_6, i64 0, i64 %zext_ln148" [Crypto.cpp:148]   --->   Operation 46 'getelementptr' 'DataRAM_6_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%DataRAM_9_addr_4 = getelementptr i32 %DataRAM_9, i64 0, i64 %zext_ln148" [Crypto.cpp:148]   --->   Operation 47 'getelementptr' 'DataRAM_9_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 48 [2/2] (3.25ns)   --->   "%DataRAM_load_4 = load i12 %DataRAM_addr_4" [Crypto.cpp:148]   --->   Operation 48 'load' 'DataRAM_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 49 [2/2] (3.25ns)   --->   "%DataRAM_3_load_4 = load i12 %DataRAM_3_addr_4" [Crypto.cpp:148]   --->   Operation 49 'load' 'DataRAM_3_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 50 [2/2] (3.25ns)   --->   "%DataRAM_6_load_4 = load i12 %DataRAM_6_addr_4" [Crypto.cpp:148]   --->   Operation 50 'load' 'DataRAM_6_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 51 [2/2] (3.25ns)   --->   "%DataRAM_9_load_4 = load i12 %DataRAM_9_addr_4" [Crypto.cpp:148]   --->   Operation 51 'load' 'DataRAM_9_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 52 [1/1] (1.86ns)   --->   "%switch_ln151 = switch i2 %RAMSel_cast_read, void %arrayidx26537.3.case.3, i2 0, void %arrayidx26537.3.case.0, i2 1, void %arrayidx26537.3.case.1, i2 2, void %arrayidx26537.3.case.2" [Crypto.cpp:151]   --->   Operation 52 'switch' 'switch_ln151' <Predicate = (!tmp)> <Delay = 1.86>
ST_1 : Operation 53 [1/1] (1.67ns)   --->   "%add_ln145 = add i13 %j, i13 4" [Crypto.cpp:145]   --->   Operation 53 'add' 'add_ln145' <Predicate = (!tmp)> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (1.58ns)   --->   "%store_ln145 = store i13 %add_ln145, i13 %j_6" [Crypto.cpp:145]   --->   Operation 54 'store' 'store_ln145' <Predicate = (!tmp)> <Delay = 1.58>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln145 = br void %for.inc290" [Crypto.cpp:145]   --->   Operation 55 'br' 'br_ln145' <Predicate = (!tmp)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.08>
ST_2 : Operation 56 [1/2] (3.25ns)   --->   "%DataRAM_load = load i12 %DataRAM_addr" [Crypto.cpp:148]   --->   Operation 56 'load' 'DataRAM_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 57 [1/2] (3.25ns)   --->   "%DataRAM_3_load = load i12 %DataRAM_3_addr" [Crypto.cpp:148]   --->   Operation 57 'load' 'DataRAM_3_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 58 [1/2] (3.25ns)   --->   "%DataRAM_6_load = load i12 %DataRAM_6_addr" [Crypto.cpp:148]   --->   Operation 58 'load' 'DataRAM_6_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 59 [1/2] (3.25ns)   --->   "%DataRAM_9_load = load i12 %DataRAM_9_addr" [Crypto.cpp:148]   --->   Operation 59 'load' 'DataRAM_9_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 60 [1/1] (1.82ns)   --->   "%MulInput1 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load, i32 %DataRAM_3_load, i32 %DataRAM_6_load, i32 %DataRAM_9_load, i2 %RAMSel_cast_read" [Crypto.cpp:148]   --->   Operation 60 'mux' 'MulInput1' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.82ns)   --->   "%MulInput2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load, i32 %DataRAM_3_load, i32 %DataRAM_6_load, i32 %DataRAM_9_load, i2 %RAMSel1_cast_read" [Crypto.cpp:149]   --->   Operation 61 'mux' 'MulInput2' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%or_ln145_1 = or i12 %empty, i12 2" [Crypto.cpp:145]   --->   Operation 62 'or' 'or_ln145_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln148_1 = zext i12 %or_ln145_1" [Crypto.cpp:148]   --->   Operation 63 'zext' 'zext_ln148_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%DataRAM_addr_5 = getelementptr i32 %DataRAM, i64 0, i64 %zext_ln148_1" [Crypto.cpp:148]   --->   Operation 64 'getelementptr' 'DataRAM_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%DataRAM_3_addr_5 = getelementptr i32 %DataRAM_3, i64 0, i64 %zext_ln148_1" [Crypto.cpp:148]   --->   Operation 65 'getelementptr' 'DataRAM_3_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%DataRAM_6_addr_5 = getelementptr i32 %DataRAM_6, i64 0, i64 %zext_ln148_1" [Crypto.cpp:148]   --->   Operation 66 'getelementptr' 'DataRAM_6_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%DataRAM_9_addr_5 = getelementptr i32 %DataRAM_9, i64 0, i64 %zext_ln148_1" [Crypto.cpp:148]   --->   Operation 67 'getelementptr' 'DataRAM_9_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%or_ln145_2 = or i12 %empty, i12 3" [Crypto.cpp:145]   --->   Operation 68 'or' 'or_ln145_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln148_2 = zext i12 %or_ln145_2" [Crypto.cpp:148]   --->   Operation 69 'zext' 'zext_ln148_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%DataRAM_addr_6 = getelementptr i32 %DataRAM, i64 0, i64 %zext_ln148_2" [Crypto.cpp:148]   --->   Operation 70 'getelementptr' 'DataRAM_addr_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%DataRAM_3_addr_6 = getelementptr i32 %DataRAM_3, i64 0, i64 %zext_ln148_2" [Crypto.cpp:148]   --->   Operation 71 'getelementptr' 'DataRAM_3_addr_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%DataRAM_6_addr_6 = getelementptr i32 %DataRAM_6, i64 0, i64 %zext_ln148_2" [Crypto.cpp:148]   --->   Operation 72 'getelementptr' 'DataRAM_6_addr_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%DataRAM_9_addr_6 = getelementptr i32 %DataRAM_9, i64 0, i64 %zext_ln148_2" [Crypto.cpp:148]   --->   Operation 73 'getelementptr' 'DataRAM_9_addr_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 74 [1/2] (3.25ns)   --->   "%DataRAM_load_4 = load i12 %DataRAM_addr_4" [Crypto.cpp:148]   --->   Operation 74 'load' 'DataRAM_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 75 [1/2] (3.25ns)   --->   "%DataRAM_3_load_4 = load i12 %DataRAM_3_addr_4" [Crypto.cpp:148]   --->   Operation 75 'load' 'DataRAM_3_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 76 [1/2] (3.25ns)   --->   "%DataRAM_6_load_4 = load i12 %DataRAM_6_addr_4" [Crypto.cpp:148]   --->   Operation 76 'load' 'DataRAM_6_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 77 [1/2] (3.25ns)   --->   "%DataRAM_9_load_4 = load i12 %DataRAM_9_addr_4" [Crypto.cpp:148]   --->   Operation 77 'load' 'DataRAM_9_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 78 [1/1] (1.82ns)   --->   "%MulInput1_1 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load_4, i32 %DataRAM_3_load_4, i32 %DataRAM_6_load_4, i32 %DataRAM_9_load_4, i2 %RAMSel_cast_read" [Crypto.cpp:148]   --->   Operation 78 'mux' 'MulInput1_1' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (1.82ns)   --->   "%MulInput2_1 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load_4, i32 %DataRAM_3_load_4, i32 %DataRAM_6_load_4, i32 %DataRAM_9_load_4, i2 %RAMSel1_cast_read" [Crypto.cpp:149]   --->   Operation 79 'mux' 'MulInput2_1' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [2/2] (3.25ns)   --->   "%DataRAM_load_5 = load i12 %DataRAM_addr_5" [Crypto.cpp:148]   --->   Operation 80 'load' 'DataRAM_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 81 [2/2] (3.25ns)   --->   "%DataRAM_3_load_5 = load i12 %DataRAM_3_addr_5" [Crypto.cpp:148]   --->   Operation 81 'load' 'DataRAM_3_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 82 [2/2] (3.25ns)   --->   "%DataRAM_6_load_5 = load i12 %DataRAM_6_addr_5" [Crypto.cpp:148]   --->   Operation 82 'load' 'DataRAM_6_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 83 [2/2] (3.25ns)   --->   "%DataRAM_9_load_5 = load i12 %DataRAM_9_addr_5" [Crypto.cpp:148]   --->   Operation 83 'load' 'DataRAM_9_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 84 [2/2] (3.25ns)   --->   "%DataRAM_load_6 = load i12 %DataRAM_addr_6" [Crypto.cpp:148]   --->   Operation 84 'load' 'DataRAM_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 85 [2/2] (3.25ns)   --->   "%DataRAM_3_load_6 = load i12 %DataRAM_3_addr_6" [Crypto.cpp:148]   --->   Operation 85 'load' 'DataRAM_3_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 86 [2/2] (3.25ns)   --->   "%DataRAM_6_load_6 = load i12 %DataRAM_6_addr_6" [Crypto.cpp:148]   --->   Operation 86 'load' 'DataRAM_6_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 87 [2/2] (3.25ns)   --->   "%DataRAM_9_load_6 = load i12 %DataRAM_9_addr_6" [Crypto.cpp:148]   --->   Operation 87 'load' 'DataRAM_9_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 3 <SV = 2> <Delay = 5.08>
ST_3 : Operation 88 [14/14] (1.05ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 88 'call' 'call_ret1' <Predicate = (!tmp)> <Delay = 1.05> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 89 [1/2] (3.25ns)   --->   "%DataRAM_load_5 = load i12 %DataRAM_addr_5" [Crypto.cpp:148]   --->   Operation 89 'load' 'DataRAM_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 90 [1/2] (3.25ns)   --->   "%DataRAM_3_load_5 = load i12 %DataRAM_3_addr_5" [Crypto.cpp:148]   --->   Operation 90 'load' 'DataRAM_3_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 91 [1/2] (3.25ns)   --->   "%DataRAM_6_load_5 = load i12 %DataRAM_6_addr_5" [Crypto.cpp:148]   --->   Operation 91 'load' 'DataRAM_6_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 92 [1/2] (3.25ns)   --->   "%DataRAM_9_load_5 = load i12 %DataRAM_9_addr_5" [Crypto.cpp:148]   --->   Operation 92 'load' 'DataRAM_9_load_5' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 93 [1/1] (1.82ns)   --->   "%MulInput1_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load_5, i32 %DataRAM_3_load_5, i32 %DataRAM_6_load_5, i32 %DataRAM_9_load_5, i2 %RAMSel_cast_read" [Crypto.cpp:148]   --->   Operation 93 'mux' 'MulInput1_2' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (1.82ns)   --->   "%MulInput2_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load_5, i32 %DataRAM_3_load_5, i32 %DataRAM_6_load_5, i32 %DataRAM_9_load_5, i2 %RAMSel1_cast_read" [Crypto.cpp:149]   --->   Operation 94 'mux' 'MulInput2_2' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/2] (3.25ns)   --->   "%DataRAM_load_6 = load i12 %DataRAM_addr_6" [Crypto.cpp:148]   --->   Operation 95 'load' 'DataRAM_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 96 [1/2] (3.25ns)   --->   "%DataRAM_3_load_6 = load i12 %DataRAM_3_addr_6" [Crypto.cpp:148]   --->   Operation 96 'load' 'DataRAM_3_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 97 [1/2] (3.25ns)   --->   "%DataRAM_6_load_6 = load i12 %DataRAM_6_addr_6" [Crypto.cpp:148]   --->   Operation 97 'load' 'DataRAM_6_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 98 [1/2] (3.25ns)   --->   "%DataRAM_9_load_6 = load i12 %DataRAM_9_addr_6" [Crypto.cpp:148]   --->   Operation 98 'load' 'DataRAM_9_load_6' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 99 [1/1] (1.82ns)   --->   "%MulInput1_3 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load_6, i32 %DataRAM_3_load_6, i32 %DataRAM_6_load_6, i32 %DataRAM_9_load_6, i2 %RAMSel_cast_read" [Crypto.cpp:148]   --->   Operation 99 'mux' 'MulInput1_3' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (1.82ns)   --->   "%MulInput2_3 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_load_6, i32 %DataRAM_3_load_6, i32 %DataRAM_6_load_6, i32 %DataRAM_9_load_6, i2 %RAMSel1_cast_read" [Crypto.cpp:149]   --->   Operation 100 'mux' 'MulInput2_3' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.65>
ST_4 : Operation 101 [13/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 101 'call' 'call_ret1' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 102 [14/14] (1.05ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 102 'call' 'call_ret2' <Predicate = (!tmp)> <Delay = 1.05> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.65>
ST_5 : Operation 103 [12/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 103 'call' 'call_ret1' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 104 [13/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 104 'call' 'call_ret2' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 105 [14/14] (1.05ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 105 'call' 'call_ret3' <Predicate = (!tmp)> <Delay = 1.05> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 5.65>
ST_6 : Operation 106 [11/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 106 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 107 [12/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 107 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 108 [13/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 108 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 109 [14/14] (1.05ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 109 'call' 'MulRes_0' <Predicate = true> <Delay = 1.05> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 5.65>
ST_7 : Operation 110 [10/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 110 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 111 [11/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 111 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 112 [12/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 112 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 113 [13/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 113 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 5.65>
ST_8 : Operation 114 [9/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 114 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 115 [10/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 115 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 116 [11/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 116 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 117 [12/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 117 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 5.65>
ST_9 : Operation 118 [8/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 118 'call' 'call_ret1' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 119 [9/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 119 'call' 'call_ret2' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 120 [10/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 120 'call' 'call_ret3' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 121 [11/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 121 'call' 'MulRes_0' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 5.65>
ST_10 : Operation 122 [7/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 122 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 123 [8/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 123 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 124 [9/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 124 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 125 [10/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 125 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 5.65>
ST_11 : Operation 126 [6/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 126 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 127 [7/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 127 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 128 [8/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 128 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 129 [9/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 129 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 5.65>
ST_12 : Operation 130 [5/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 130 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 131 [6/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 131 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 132 [7/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 132 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 133 [8/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 133 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 5.65>
ST_13 : Operation 134 [4/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 134 'call' 'call_ret1' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 135 [5/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 135 'call' 'call_ret2' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 136 [6/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 136 'call' 'call_ret3' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 137 [7/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 137 'call' 'MulRes_0' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 5.65>
ST_14 : Operation 138 [3/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 138 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 139 [4/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 139 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 140 [5/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 140 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 141 [6/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 141 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 5.65>
ST_15 : Operation 142 [2/14] (5.65ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 142 'call' 'call_ret1' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 143 [3/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 143 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 144 [4/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 144 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 145 [5/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 145 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 5.65>
ST_16 : Operation 146 [1/14] (4.21ns)   --->   "%call_ret1 = call i32 @MUL_MOD.1, i32 %MulInput1, i32 %MulInput2, i2 0" [Crypto.cpp:150]   --->   Operation 146 'call' 'call_ret1' <Predicate = true> <Delay = 4.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 147 [2/14] (5.65ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 147 'call' 'call_ret2' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 148 [3/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 148 'call' 'call_ret3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 149 [4/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 149 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 178 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 178 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 17 <SV = 16> <Delay = 5.65>
ST_17 : Operation 150 [1/14] (4.21ns)   --->   "%call_ret2 = call i32 @MUL_MOD.1, i32 %MulInput1_1, i32 %MulInput2_1, i2 0" [Crypto.cpp:150]   --->   Operation 150 'call' 'call_ret2' <Predicate = (!tmp)> <Delay = 4.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 151 [2/14] (5.65ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 151 'call' 'call_ret3' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 152 [3/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 152 'call' 'MulRes_0' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 5.65>
ST_18 : Operation 153 [1/14] (4.21ns)   --->   "%call_ret3 = call i32 @MUL_MOD.1, i32 %MulInput1_2, i32 %MulInput2_2, i2 0" [Crypto.cpp:150]   --->   Operation 153 'call' 'call_ret3' <Predicate = true> <Delay = 4.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 154 [2/14] (5.65ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 154 'call' 'MulRes_0' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 4.21>
ST_19 : Operation 155 [1/1] (0.00ns)   --->   "%speclooptripcount_ln145 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1024, i64 1024, i64 1024" [Crypto.cpp:145]   --->   Operation 155 'speclooptripcount' 'speclooptripcount_ln145' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 156 [1/1] (0.00ns)   --->   "%specloopname_ln145 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [Crypto.cpp:145]   --->   Operation 156 'specloopname' 'specloopname_ln145' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 157 [1/14] (4.21ns)   --->   "%MulRes_0 = call i32 @MUL_MOD.1, i32 %MulInput1_3, i32 %MulInput2_3, i2 0" [Crypto.cpp:150]   --->   Operation 157 'call' 'MulRes_0' <Predicate = true> <Delay = 4.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 158 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret1, i12 %DataRAM_6_addr" [Crypto.cpp:151]   --->   Operation 158 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 159 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret2, i12 %DataRAM_6_addr_4" [Crypto.cpp:151]   --->   Operation 159 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 160 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret1, i12 %DataRAM_3_addr" [Crypto.cpp:151]   --->   Operation 160 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 161 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret2, i12 %DataRAM_3_addr_4" [Crypto.cpp:151]   --->   Operation 161 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 162 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret1, i12 %DataRAM_addr" [Crypto.cpp:151]   --->   Operation 162 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 163 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret2, i12 %DataRAM_addr_4" [Crypto.cpp:151]   --->   Operation 163 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 164 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret1, i12 %DataRAM_9_addr" [Crypto.cpp:151]   --->   Operation 164 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_19 : Operation 165 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret2, i12 %DataRAM_9_addr_4" [Crypto.cpp:151]   --->   Operation 165 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 20 <SV = 19> <Delay = 3.25>
ST_20 : Operation 166 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret3, i12 %DataRAM_6_addr_5" [Crypto.cpp:151]   --->   Operation 166 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 167 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %MulRes_0, i12 %DataRAM_6_addr_6" [Crypto.cpp:151]   --->   Operation 167 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 168 [1/1] (0.00ns)   --->   "%br_ln151 = br void %arrayidx26537.3.exit" [Crypto.cpp:151]   --->   Operation 168 'br' 'br_ln151' <Predicate = (RAMSel_cast_read == 2)> <Delay = 0.00>
ST_20 : Operation 169 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret3, i12 %DataRAM_3_addr_5" [Crypto.cpp:151]   --->   Operation 169 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 170 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %MulRes_0, i12 %DataRAM_3_addr_6" [Crypto.cpp:151]   --->   Operation 170 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 171 [1/1] (0.00ns)   --->   "%br_ln151 = br void %arrayidx26537.3.exit" [Crypto.cpp:151]   --->   Operation 171 'br' 'br_ln151' <Predicate = (RAMSel_cast_read == 1)> <Delay = 0.00>
ST_20 : Operation 172 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret3, i12 %DataRAM_addr_5" [Crypto.cpp:151]   --->   Operation 172 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 173 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %MulRes_0, i12 %DataRAM_addr_6" [Crypto.cpp:151]   --->   Operation 173 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 174 [1/1] (0.00ns)   --->   "%br_ln151 = br void %arrayidx26537.3.exit" [Crypto.cpp:151]   --->   Operation 174 'br' 'br_ln151' <Predicate = (RAMSel_cast_read == 0)> <Delay = 0.00>
ST_20 : Operation 175 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %call_ret3, i12 %DataRAM_9_addr_5" [Crypto.cpp:151]   --->   Operation 175 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 176 [1/1] (3.25ns)   --->   "%store_ln151 = store i32 %MulRes_0, i12 %DataRAM_9_addr_6" [Crypto.cpp:151]   --->   Operation 176 'store' 'store_ln151' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_20 : Operation 177 [1/1] (0.00ns)   --->   "%br_ln151 = br void %arrayidx26537.3.exit" [Crypto.cpp:151]   --->   Operation 177 'br' 'br_ln151' <Predicate = (RAMSel_cast_read == 3)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 3.268ns
The critical path consists of the following:
	'alloca' operation ('j') [7]  (0.000 ns)
	'load' operation ('j') on local variable 'j' [13]  (0.000 ns)
	'add' operation ('add_ln145', Crypto.cpp:145) [98]  (1.679 ns)
	'store' operation ('store_ln145', Crypto.cpp:145) of variable 'add_ln145', Crypto.cpp:145 on local variable 'j' [99]  (1.588 ns)

 <State 2>: 5.081ns
The critical path consists of the following:
	'load' operation ('DataRAM_load', Crypto.cpp:148) on array 'DataRAM' [26]  (3.254 ns)
	'mux' operation ('MulInput1', Crypto.cpp:148) [30]  (1.827 ns)

 <State 3>: 5.081ns
The critical path consists of the following:
	'load' operation ('DataRAM_load_5', Crypto.cpp:148) on array 'DataRAM' [58]  (3.254 ns)
	'mux' operation ('MulInput1', Crypto.cpp:148) [62]  (1.827 ns)

 <State 4>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 5>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 6>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 7>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 8>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 9>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 10>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 11>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 12>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 13>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 14>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 15>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret1', Crypto.cpp:150) to 'MUL_MOD.1' [32]  (5.655 ns)

 <State 16>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret2', Crypto.cpp:150) to 'MUL_MOD.1' [57]  (5.655 ns)

 <State 17>: 5.655ns
The critical path consists of the following:
	'call' operation ('call_ret3', Crypto.cpp:150) to 'MUL_MOD.1' [64]  (5.655 ns)

 <State 18>: 5.655ns
The critical path consists of the following:
	'call' operation ('MulRes[0]', Crypto.cpp:150) to 'MUL_MOD.1' [71]  (5.655 ns)

 <State 19>: 4.218ns
The critical path consists of the following:
	'call' operation ('MulRes[0]', Crypto.cpp:150) to 'MUL_MOD.1' [71]  (4.218 ns)

 <State 20>: 3.254ns
The critical path consists of the following:
	'store' operation ('store_ln151', Crypto.cpp:151) of variable 'call_ret3', Crypto.cpp:150 on array 'DataRAM_3' [82]  (3.254 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
