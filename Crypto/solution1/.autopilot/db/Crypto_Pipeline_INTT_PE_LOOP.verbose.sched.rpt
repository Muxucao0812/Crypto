

================================================================
== Vitis HLS Report for 'Crypto_Pipeline_INTT_PE_LOOP'
================================================================
* Date:           Mon Jan 13 00:09:22 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        Crypto
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+-----------+------------+
    |  Clock |  Target | Estimated | Uncertainty|
    +--------+---------+-----------+------------+
    |ap_clk  |  8.00 ns|  54.207 ns|     2.16 ns|
    +--------+---------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+------------+----------+-------------+-----+------------+---------+
    |   Latency (cycles)   |   Latency (absolute)   |     Interval     | Pipeline|
    |   min   |     max    |    min   |     max     | min |     max    |   Type  |
    +---------+------------+----------+-------------+-----+------------+---------+
    |        2|  3221225471|  0.108 us|  174.613 sec|    2|  3221225471|       no|
    +---------+------------+----------+-------------+-----+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+------------+----------+-----------+-----------+----------------+----------+
        |                |   Latency (cycles)   | Iteration|  Initiation Interval  |      Trip      |          |
        |    Loop Name   |   min   |     max    |  Latency |  achieved |   target  |      Count     | Pipelined|
        +----------------+---------+------------+----------+-----------+-----------+----------------+----------+
        |- INTT_PE_LOOP  |        0|  3221225469|         3|          3|          1|  0 ~ 1073741823|       yes|
        +----------------+---------+------------+----------+-----------+-----------+----------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 3, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%phi_mul4 = alloca i32 1"   --->   Operation 6 'alloca' 'phi_mul4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%j_1 = alloca i32 1"   --->   Operation 7 'alloca' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%zext_ln64_1_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %zext_ln64_1"   --->   Operation 8 'read' 'zext_ln64_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln89_1_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %zext_ln89_1"   --->   Operation 9 'read' 'zext_ln89_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln19_9_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %zext_ln19_9"   --->   Operation 10 'read' 'zext_ln19_9_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%mod_1_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %mod_1"   --->   Operation 11 'read' 'mod_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln19_8_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %zext_ln19_8"   --->   Operation 12 'read' 'zext_ln19_8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%m_1_read = read i20 @_ssdm_op_Read.ap_auto.i20, i20 %m_1"   --->   Operation 13 'read' 'm_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln10_read = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %trunc_ln10"   --->   Operation 14 'read' 'trunc_ln10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%trunc_ln158_1_read = read i12 @_ssdm_op_Read.ap_auto.i12, i12 %trunc_ln158_1"   --->   Operation 15 'read' 'trunc_ln158_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln158_2_read = read i12 @_ssdm_op_Read.ap_auto.i12, i12 %trunc_ln158_2"   --->   Operation 16 'read' 'trunc_ln158_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%hf_1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %hf_1"   --->   Operation 17 'read' 'hf_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln64_1_cast = zext i31 %zext_ln64_1_read"   --->   Operation 18 'zext' 'zext_ln64_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln89_1_cast = zext i31 %zext_ln89_1_read"   --->   Operation 19 'zext' 'zext_ln89_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln19_9_cast = zext i16 %zext_ln19_9_read"   --->   Operation 20 'zext' 'zext_ln19_9_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln19_8_cast = zext i16 %zext_ln19_8_read"   --->   Operation 21 'zext' 'zext_ln19_8_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln0 = store i31 0, i31 %j_1"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln0 = store i13 0, i13 %phi_mul4"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc262"   --->   Operation 24 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.34>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%j = load i31 %j_1" [Crypto.cpp:160]   --->   Operation 25 'load' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln160 = zext i31 %j" [Crypto.cpp:160]   --->   Operation 26 'zext' 'zext_ln160' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (2.55ns)   --->   "%icmp_ln160 = icmp_slt  i32 %zext_ln160, i32 %hf_1_read" [Crypto.cpp:160]   --->   Operation 27 'icmp' 'icmp_ln160' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (2.52ns)   --->   "%add_ln160 = add i31 %j, i31 1" [Crypto.cpp:160]   --->   Operation 28 'add' 'add_ln160' <Predicate = true> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln160 = br i1 %icmp_ln160, void %for.inc265.loopexit.exitStub, void %for.inc262.split" [Crypto.cpp:160]   --->   Operation 29 'br' 'br_ln160' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%phi_mul4_load = load i13 %phi_mul4" [Crypto.cpp:164]   --->   Operation 30 'load' 'phi_mul4_load' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln160 = trunc i31 %j" [Crypto.cpp:160]   --->   Operation 31 'trunc' 'trunc_ln160' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.54ns)   --->   "%add_ln162 = add i12 %trunc_ln160, i12 %trunc_ln158_2_read" [Crypto.cpp:162]   --->   Operation 32 'add' 'add_ln162' <Predicate = (icmp_ln160)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln162 = zext i12 %add_ln162" [Crypto.cpp:162]   --->   Operation 33 'zext' 'zext_ln162' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%res = getelementptr i32 %DataTemp, i64 0, i64 %zext_ln162" [Crypto.cpp:162]   --->   Operation 34 'getelementptr' 'res' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 35 [2/2] (3.25ns)   --->   "%u = load i12 %res" [Crypto.cpp:165]   --->   Operation 35 'load' 'u' <Predicate = (icmp_ln160)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 36 [1/1] (1.54ns)   --->   "%add_ln163 = add i12 %add_ln162, i12 %trunc_ln158_1_read" [Crypto.cpp:163]   --->   Operation 36 'add' 'add_ln163' <Predicate = (icmp_ln160)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln163 = zext i12 %add_ln163" [Crypto.cpp:163]   --->   Operation 37 'zext' 'zext_ln163' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%res_2 = getelementptr i32 %DataTemp, i64 0, i64 %zext_ln163" [Crypto.cpp:163]   --->   Operation 38 'getelementptr' 'res_2' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 39 [2/2] (3.25ns)   --->   "%a2 = load i12 %res_2" [Crypto.cpp:163]   --->   Operation 39 'load' 'a2' <Predicate = (icmp_ln160)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 40 [1/1] (1.67ns)   --->   "%add_ln164_1 = add i13 %phi_mul4_load, i13 %trunc_ln10_read" [Crypto.cpp:164]   --->   Operation 40 'add' 'add_ln164_1' <Predicate = (icmp_ln160)> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.99ns)   --->   "%xor_ln164 = xor i13 %phi_mul4_load, i13 4096" [Crypto.cpp:164]   --->   Operation 41 'xor' 'xor_ln164' <Predicate = (icmp_ln160)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln164 = zext i13 %xor_ln164" [Crypto.cpp:164]   --->   Operation 42 'zext' 'zext_ln164' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%twiddle_ram_addr = getelementptr i32 %twiddle_ram, i64 0, i64 %zext_ln164" [Crypto.cpp:164]   --->   Operation 43 'getelementptr' 'twiddle_ram_addr' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (3.25ns)   --->   "%tf = load i13 %twiddle_ram_addr" [Crypto.cpp:164]   --->   Operation 44 'load' 'tf' <Predicate = (icmp_ln160)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%input2_high_7 = partselect i4 @_ssdm_op_PartSelect.i4.i20.i32.i32, i20 %m_1_read, i32 16, i32 19" [Arithmetic.cpp:20->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 45 'partselect' 'input2_high_7' <Predicate = (icmp_ln160)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln160 = store i31 %add_ln160, i31 %j_1" [Crypto.cpp:160]   --->   Operation 46 'store' 'store_ln160' <Predicate = (icmp_ln160)> <Delay = 1.58>
ST_2 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln160 = store i13 %add_ln164_1, i13 %phi_mul4" [Crypto.cpp:160]   --->   Operation 47 'store' 'store_ln160' <Predicate = (icmp_ln160)> <Delay = 1.58>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 138 'ret' 'ret_ln0' <Predicate = (!icmp_ln160)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 54.2>
ST_3 : Operation 48 [1/2] (3.25ns)   --->   "%u = load i12 %res" [Crypto.cpp:165]   --->   Operation 48 'load' 'u' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 49 [1/2] (3.25ns)   --->   "%a2 = load i12 %res_2" [Crypto.cpp:163]   --->   Operation 49 'load' 'a2' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%input1_low = trunc i32 %a2" [Crypto.cpp:163]   --->   Operation 50 'trunc' 'input1_low' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/2] (3.25ns)   --->   "%tf = load i13 %twiddle_ram_addr" [Crypto.cpp:164]   --->   Operation 51 'load' 'tf' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%input2_low = trunc i32 %tf" [Crypto.cpp:164]   --->   Operation 52 'trunc' 'input2_low' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i16 %input1_low" [Arithmetic.cpp:17->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 53 'zext' 'zext_ln17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%input1_high = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %a2, i32 16, i32 31" [Arithmetic.cpp:18->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 54 'partselect' 'input1_high' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i16 %input1_high" [Arithmetic.cpp:18->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 55 'zext' 'zext_ln18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i16 %input2_low" [Arithmetic.cpp:19->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 56 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%input2_high = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %tf, i32 16, i32 31" [Arithmetic.cpp:20->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 57 'partselect' 'input2_high' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i16 %input2_high" [Arithmetic.cpp:20->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 58 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (5.58ns)   --->   "%temp1 = mul i32 %zext_ln19, i32 %zext_ln17" [Arithmetic.cpp:22->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 59 'mul' 'temp1' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (5.58ns)   --->   "%temp2 = mul i32 %zext_ln20, i32 %zext_ln17" [Arithmetic.cpp:23->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 60 'mul' 'temp2' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (3.36ns) (grouped into DSP with root node add_ln30_7)   --->   "%temp3 = mul i32 %zext_ln19, i32 %zext_ln18" [Arithmetic.cpp:24->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 61 'mul' 'temp3' <Predicate = true> <Delay = 3.36> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 62 [1/1] (5.58ns)   --->   "%temp4 = mul i32 %zext_ln20, i32 %zext_ln18" [Arithmetic.cpp:25->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 62 'mul' 'temp4' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%sum1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %temp4, i32 %temp1" [Arithmetic.cpp:29->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 63 'bitconcatenate' 'sum1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln30 = zext i32 %temp2" [Arithmetic.cpp:30->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 64 'zext' 'zext_ln30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns) (grouped into DSP with root node add_ln30_7)   --->   "%zext_ln30_16 = zext i32 %temp3" [Arithmetic.cpp:30->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 65 'zext' 'zext_ln30_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln30_7 = add i33 %zext_ln30, i33 %zext_ln30_16" [Arithmetic.cpp:30->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 66 'add' 'add_ln30_7' <Predicate = true> <Delay = 3.02> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%sum2 = bitconcatenate i49 @_ssdm_op_BitConcatenate.i49.i33.i16, i33 %add_ln30_7, i16 0" [Arithmetic.cpp:30->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 67 'bitconcatenate' 'sum2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i49 %sum2" [Arithmetic.cpp:28->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 68 'zext' 'zext_ln28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (3.52ns)   --->   "%res_mult = add i64 %zext_ln28, i64 %sum1" [Arithmetic.cpp:32->Arithmetic.cpp:69->Crypto.cpp:167]   --->   Operation 69 'add' 'res_mult' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%input1_low_7 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult, i32 30, i32 45" [Arithmetic.cpp:73->Crypto.cpp:167]   --->   Operation 70 'partselect' 'input1_low_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln17_11 = zext i16 %input1_low_7" [Arithmetic.cpp:17->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 71 'zext' 'zext_ln17_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%input1_high_4 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult, i32 46, i32 61" [Arithmetic.cpp:18->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 72 'partselect' 'input1_high_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln18_5 = zext i16 %input1_high_4" [Arithmetic.cpp:18->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 73 'zext' 'zext_ln18_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%sext_ln20 = sext i4 %input2_high_7" [Arithmetic.cpp:20->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 74 'sext' 'sext_ln20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln20_7 = zext i16 %sext_ln20" [Arithmetic.cpp:20->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 75 'zext' 'zext_ln20_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (5.58ns)   --->   "%temp1_7 = mul i32 %zext_ln17_11, i32 %zext_ln19_8_cast" [Arithmetic.cpp:22->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 76 'mul' 'temp1_7' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (5.58ns)   --->   "%temp2_7 = mul i32 %zext_ln17_11, i32 %zext_ln20_7" [Arithmetic.cpp:23->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 77 'mul' 'temp2_7' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (5.58ns)   --->   "%temp3_7 = mul i32 %zext_ln18_5, i32 %zext_ln19_8_cast" [Arithmetic.cpp:24->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 78 'mul' 'temp3_7' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (5.58ns)   --->   "%temp4_7 = mul i32 %zext_ln18_5, i32 %zext_ln20_7" [Arithmetic.cpp:25->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 79 'mul' 'temp4_7' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i32 %temp4_7" [Arithmetic.cpp:29->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 80 'trunc' 'trunc_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%sum1_7 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %temp4_7, i32 %temp1_7" [Arithmetic.cpp:29->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 81 'bitconcatenate' 'sum1_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln30_17 = zext i32 %temp2_7" [Arithmetic.cpp:30->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 82 'zext' 'zext_ln30_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln30_18 = zext i32 %temp3_7" [Arithmetic.cpp:30->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 83 'zext' 'zext_ln30_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (2.55ns)   --->   "%add_ln30 = add i32 %temp2_7, i32 %temp3_7" [Arithmetic.cpp:30->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 84 'add' 'add_ln30' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (2.55ns)   --->   "%add_ln30_8 = add i33 %zext_ln30_17, i33 %zext_ln30_18" [Arithmetic.cpp:30->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 85 'add' 'add_ln30_8' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%sum2_7 = bitconcatenate i49 @_ssdm_op_BitConcatenate.i49.i33.i16, i33 %add_ln30_8, i16 0" [Arithmetic.cpp:30->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 86 'bitconcatenate' 'sum2_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln28_11 = zext i49 %sum2_7" [Arithmetic.cpp:28->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 87 'zext' 'zext_ln28_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i48 @_ssdm_op_BitConcatenate.i48.i16.i32, i16 %trunc_ln29, i32 %temp1_7" [Arithmetic.cpp:32->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 88 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln32_1 = bitconcatenate i48 @_ssdm_op_BitConcatenate.i48.i32.i16, i32 %add_ln30, i16 0" [Arithmetic.cpp:32->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 89 'bitconcatenate' 'trunc_ln32_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (3.52ns)   --->   "%res_mult_shift = add i64 %zext_ln28_11, i64 %sum1_7" [Arithmetic.cpp:32->Arithmetic.cpp:75->Crypto.cpp:167]   --->   Operation 90 'add' 'res_mult_shift' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (3.10ns)   --->   "%add_ln74 = add i48 %trunc_ln32_1, i48 %tmp_3" [Arithmetic.cpp:74->Crypto.cpp:167]   --->   Operation 91 'add' 'add_ln74' <Predicate = true> <Delay = 3.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%res_mult_shift_part = partselect i16 @_ssdm_op_PartSelect.i16.i48.i32.i32, i48 %add_ln74, i32 32, i32 47" [Arithmetic.cpp:80->Crypto.cpp:167]   --->   Operation 92 'partselect' 'res_mult_shift_part' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln17_12 = zext i16 %res_mult_shift_part" [Arithmetic.cpp:17->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 93 'zext' 'zext_ln17_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln17_13 = zext i16 %res_mult_shift_part" [Arithmetic.cpp:17->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 94 'zext' 'zext_ln17_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%input2_high_8 = partselect i15 @_ssdm_op_PartSelect.i15.i31.i32.i32, i31 %mod_1_read, i32 16, i32 30" [Arithmetic.cpp:20->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 95 'partselect' 'input2_high_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln20_8 = zext i15 %input2_high_8" [Arithmetic.cpp:20->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 96 'zext' 'zext_ln20_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (5.58ns)   --->   "%temp1_8 = mul i32 %zext_ln17_12, i32 %zext_ln19_9_cast" [Arithmetic.cpp:22->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 97 'mul' 'temp1_8' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (3.36ns) (grouped into DSP with root node add_ln30_9)   --->   "%temp2_8 = mul i31 %zext_ln17_13, i31 %zext_ln20_8" [Arithmetic.cpp:23->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 98 'mul' 'temp2_8' <Predicate = true> <Delay = 3.36> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%trunc_ln24_4 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult_shift, i32 48, i32 63" [Arithmetic.cpp:24->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 99 'partselect' 'trunc_ln24_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i16 %trunc_ln24_4" [Arithmetic.cpp:24->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 100 'zext' 'zext_ln24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln24_4 = zext i16 %trunc_ln24_4" [Arithmetic.cpp:24->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 101 'zext' 'zext_ln24_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (5.58ns)   --->   "%temp3_8 = mul i32 %zext_ln19_9_cast, i32 %zext_ln24" [Arithmetic.cpp:24->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 102 'mul' 'temp3_8' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (5.58ns)   --->   "%temp4_8 = mul i31 %zext_ln20_8, i31 %zext_ln24_4" [Arithmetic.cpp:25->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 103 'mul' 'temp4_8' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%sum1_8 = bitconcatenate i63 @_ssdm_op_BitConcatenate.i63.i31.i32, i31 %temp4_8, i32 %temp1_8" [Arithmetic.cpp:29->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 104 'bitconcatenate' 'sum1_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln28_12 = zext i63 %sum1_8" [Arithmetic.cpp:28->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 105 'zext' 'zext_ln28_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns) (grouped into DSP with root node add_ln30_9)   --->   "%zext_ln30_19 = zext i31 %temp2_8" [Arithmetic.cpp:30->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 106 'zext' 'zext_ln30_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln30_20 = zext i32 %temp3_8" [Arithmetic.cpp:30->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 107 'zext' 'zext_ln30_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln30_9 = add i33 %zext_ln30_19, i33 %zext_ln30_20" [Arithmetic.cpp:30->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 108 'add' 'add_ln30_9' <Predicate = true> <Delay = 3.02> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%sum2_8 = bitconcatenate i49 @_ssdm_op_BitConcatenate.i49.i33.i16, i33 %add_ln30_9, i16 0" [Arithmetic.cpp:30->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 109 'bitconcatenate' 'sum2_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln28_13 = zext i49 %sum2_8" [Arithmetic.cpp:28->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 110 'zext' 'zext_ln28_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%res_shift = sub i64 %res_mult, i64 %zext_ln28_12" [Arithmetic.cpp:32->Arithmetic.cpp:81->Crypto.cpp:167]   --->   Operation 111 'sub' 'res_shift' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 112 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%sub_ln85 = sub i64 %res_shift, i64 %zext_ln28_13" [Arithmetic.cpp:85->Crypto.cpp:167]   --->   Operation 112 'sub' 'sub_ln85' <Predicate = true> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 113 [1/1] (3.52ns)   --->   "%sub_ln89 = sub i64 %sub_ln85, i64 %zext_ln89_1_cast" [Arithmetic.cpp:89->Crypto.cpp:167]   --->   Operation 113 'sub' 'sub_ln89' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%shl_ln90_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %mod_1_read, i1 0" [Arithmetic.cpp:90->Crypto.cpp:167]   --->   Operation 114 'bitconcatenate' 'shl_ln90_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i32 %shl_ln90_1" [Arithmetic.cpp:90->Crypto.cpp:167]   --->   Operation 115 'zext' 'zext_ln90' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 116 [1/1] (3.52ns)   --->   "%sub_ln90 = sub i64 %sub_ln85, i64 %zext_ln90" [Arithmetic.cpp:90->Crypto.cpp:167]   --->   Operation 116 'sub' 'sub_ln90' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node v)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %sub_ln89, i32 63" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 117 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node v)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %sub_ln90, i32 63" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 118 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node v)   --->   "%trunc_ln92 = trunc i64 %sub_ln85" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 119 'trunc' 'trunc_ln92' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node v)   --->   "%trunc_ln92_7 = trunc i64 %sub_ln89" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 120 'trunc' 'trunc_ln92_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node v)   --->   "%trunc_ln92_8 = trunc i64 %sub_ln90" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 121 'trunc' 'trunc_ln92_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node v)   --->   "%select_ln92 = select i1 %tmp_8, i32 %trunc_ln92_7, i32 %trunc_ln92_8" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 122 'select' 'select_ln92' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 123 [1/1] (0.69ns) (out node of the LUT)   --->   "%v = select i1 %tmp, i32 %trunc_ln92, i32 %select_ln92" [Arithmetic.cpp:92->Crypto.cpp:167]   --->   Operation 123 'select' 'v' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 124 [1/1] (2.55ns)   --->   "%add_ln40 = add i32 %u, i32 %v" [Arithmetic.cpp:40->Crypto.cpp:168]   --->   Operation 124 'add' 'add_ln40' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 125 [1/1] (2.55ns)   --->   "%icmp_ln43 = icmp_slt  i32 %add_ln40, i32 %zext_ln64_1_cast" [Arithmetic.cpp:43->Crypto.cpp:168]   --->   Operation 125 'icmp' 'icmp_ln43' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 126 [1/1] (2.55ns)   --->   "%sub_ln44 = sub i32 %add_ln40, i32 %zext_ln64_1_cast" [Arithmetic.cpp:44->Crypto.cpp:168]   --->   Operation 126 'sub' 'sub_ln44' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 127 [1/1] (0.69ns)   --->   "%select_ln43 = select i1 %icmp_ln43, i32 %add_ln40, i32 %sub_ln44" [Arithmetic.cpp:43->Crypto.cpp:168]   --->   Operation 127 'select' 'select_ln43' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 128 [1/1] (3.25ns)   --->   "%store_ln40 = store i32 %select_ln43, i12 %res" [Arithmetic.cpp:40->Crypto.cpp:168]   --->   Operation 128 'store' 'store_ln40' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 4 <SV = 3> <Delay = 9.05>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%specpipeline_ln161 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty" [Crypto.cpp:161]   --->   Operation 129 'specpipeline' 'specpipeline_ln161' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%speclooptripcount_ln160 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 1073741823, i64 536870911" [Crypto.cpp:160]   --->   Operation 130 'speclooptripcount' 'speclooptripcount_ln160' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%specloopname_ln160 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [Crypto.cpp:160]   --->   Operation 131 'specloopname' 'specloopname_ln160' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (2.55ns)   --->   "%sub_ln53 = sub i32 %u, i32 %v" [Arithmetic.cpp:53->Crypto.cpp:169]   --->   Operation 132 'sub' 'sub_ln53' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %sub_ln53, i32 31" [Arithmetic.cpp:55->Crypto.cpp:169]   --->   Operation 133 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 134 [1/1] (2.55ns)   --->   "%add_ln56 = add i32 %sub_ln53, i32 %zext_ln64_1_cast" [Arithmetic.cpp:56->Crypto.cpp:169]   --->   Operation 134 'add' 'add_ln56' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (0.69ns)   --->   "%select_ln55 = select i1 %tmp_9, i32 %add_ln56, i32 %sub_ln53" [Arithmetic.cpp:55->Crypto.cpp:169]   --->   Operation 135 'select' 'select_ln55' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (3.25ns)   --->   "%store_ln53 = store i32 %select_ln55, i12 %res_2" [Arithmetic.cpp:53->Crypto.cpp:169]   --->   Operation 136 'store' 'store_ln53' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%br_ln160 = br void %for.inc262" [Crypto.cpp:160]   --->   Operation 137 'br' 'br_ln160' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation ('j') [14]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'j' [29]  (1.588 ns)

 <State 2>: 6.348ns
The critical path consists of the following:
	'load' operation ('j', Crypto.cpp:160) on local variable 'j' [33]  (0.000 ns)
	'add' operation ('add_ln162', Crypto.cpp:162) [44]  (1.547 ns)
	'add' operation ('add_ln163', Crypto.cpp:163) [48]  (1.547 ns)
	'getelementptr' operation ('res', Crypto.cpp:163) [50]  (0.000 ns)
	'load' operation ('a2', Crypto.cpp:163) on array 'DataTemp' [51]  (3.254 ns)

 <State 3>: 54.207ns
The critical path consists of the following:
	'load' operation ('a2', Crypto.cpp:163) on array 'DataTemp' [51]  (3.254 ns)
	'mul' operation ('temp2', Arithmetic.cpp:23->Arithmetic.cpp:69->Crypto.cpp:167) [66]  (5.580 ns)
	'add' operation of DSP[72] ('add_ln30_7', Arithmetic.cpp:30->Arithmetic.cpp:69->Crypto.cpp:167) [72]  (3.020 ns)
	'add' operation ('res_mult', Arithmetic.cpp:32->Arithmetic.cpp:69->Crypto.cpp:167) [75]  (3.520 ns)
	'mul' operation ('temp2', Arithmetic.cpp:23->Arithmetic.cpp:75->Crypto.cpp:167) [84]  (5.580 ns)
	'add' operation ('add_ln30_8', Arithmetic.cpp:30->Arithmetic.cpp:75->Crypto.cpp:167) [92]  (2.552 ns)
	'add' operation ('res_mult_shift', Arithmetic.cpp:32->Arithmetic.cpp:75->Crypto.cpp:167) [97]  (3.520 ns)
	'mul' operation ('temp3', Arithmetic.cpp:24->Arithmetic.cpp:81->Crypto.cpp:167) [109]  (5.580 ns)
	'add' operation of DSP[115] ('add_ln30_9', Arithmetic.cpp:30->Arithmetic.cpp:81->Crypto.cpp:167) [115]  (3.020 ns)
	'sub' operation ('sub_ln85', Arithmetic.cpp:85->Crypto.cpp:167) [119]  (5.307 ns)
	'sub' operation ('sub_ln89', Arithmetic.cpp:89->Crypto.cpp:167) [120]  (3.520 ns)
	'select' operation ('v', Arithmetic.cpp:92->Crypto.cpp:167) [130]  (0.698 ns)
	'add' operation ('add_ln40', Arithmetic.cpp:40->Crypto.cpp:168) [131]  (2.552 ns)
	'icmp' operation ('icmp_ln43', Arithmetic.cpp:43->Crypto.cpp:168) [132]  (2.552 ns)
	'select' operation ('select_ln43', Arithmetic.cpp:43->Crypto.cpp:168) [134]  (0.698 ns)
	'store' operation ('store_ln40', Arithmetic.cpp:40->Crypto.cpp:168) of variable 'select_ln43', Arithmetic.cpp:43->Crypto.cpp:168 on array 'DataTemp' [135]  (3.254 ns)

 <State 4>: 9.056ns
The critical path consists of the following:
	'sub' operation ('sub_ln53', Arithmetic.cpp:53->Crypto.cpp:169) [136]  (2.552 ns)
	'add' operation ('add_ln56', Arithmetic.cpp:56->Crypto.cpp:169) [138]  (2.552 ns)
	'select' operation ('select_ln55', Arithmetic.cpp:55->Crypto.cpp:169) [139]  (0.698 ns)
	'store' operation ('store_ln53', Arithmetic.cpp:53->Crypto.cpp:169) of variable 'select_ln55', Arithmetic.cpp:55->Crypto.cpp:169 on array 'DataTemp' [140]  (3.254 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
