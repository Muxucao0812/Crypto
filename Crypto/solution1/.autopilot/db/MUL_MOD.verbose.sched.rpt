

================================================================
== Vitis HLS Report for 'MUL_MOD'
================================================================
* Date:           Fri Apr  4 16:47:05 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        Crypto
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1761-3


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  6.00 ns|  3.803 ns|     1.62 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       12|       12|  72.000 ns|  72.000 ns|    1|    1|      yes|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 1, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.36>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%MOD_INDEX_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %MOD_INDEX" [HLS/src/Arithmetic.cpp:119]   --->   Operation 14 'read' 'MOD_INDEX_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%input2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input2_val" [HLS/src/Arithmetic.cpp:119]   --->   Operation 15 'read' 'input2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%input1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input1_val" [HLS/src/Arithmetic.cpp:119]   --->   Operation 16 'read' 'input1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input2_low = trunc i32 %input2_val_read" [HLS/src/Arithmetic.cpp:119]   --->   Operation 17 'trunc' 'input2_low' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%input1_low = trunc i32 %input1_val_read" [HLS/src/Arithmetic.cpp:119]   --->   Operation 18 'trunc' 'input1_low' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln44_6 = zext i16 %input1_low" [HLS/src/Arithmetic.cpp:44->HLS/src/Arithmetic.cpp:126]   --->   Operation 19 'zext' 'zext_ln44_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%input1_high = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %input1_val_read, i32 16, i32 31" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:126]   --->   Operation 20 'partselect' 'input1_high' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln45_4 = zext i16 %input1_high" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:126]   --->   Operation 21 'zext' 'zext_ln45_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln46_6 = zext i16 %input2_low" [HLS/src/Arithmetic.cpp:46->HLS/src/Arithmetic.cpp:126]   --->   Operation 22 'zext' 'zext_ln46_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%input2_high = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %input2_val_read, i32 16, i32 31" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:126]   --->   Operation 23 'partselect' 'input2_high' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln47_4 = zext i16 %input2_high" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:126]   --->   Operation 24 'zext' 'zext_ln47_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.24ns)   --->   "%a_plus_b = add i17 %zext_ln45_4, i17 %zext_ln44_6" [HLS/src/Arithmetic.cpp:50->HLS/src/Arithmetic.cpp:126]   --->   Operation 25 'add' 'a_plus_b' <Predicate = true> <Delay = 1.24> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.48ns) (grouped into DSP with root node sub_ln63)   --->   "%c_plus_d = add i17 %zext_ln47_4, i17 %zext_ln46_6" [HLS/src/Arithmetic.cpp:51->HLS/src/Arithmetic.cpp:126]   --->   Operation 26 'add' 'c_plus_d' <Predicate = true> <Delay = 1.48> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i17 %a_plus_b" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 27 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into DSP with root node sub_ln63)   --->   "%zext_ln63_18 = zext i17 %c_plus_d" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 28 'zext' 'zext_ln63_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [3/3] (0.88ns) (grouped into DSP with root node sub_ln63)   --->   "%mul_ln63 = mul i34 %zext_ln63_18, i34 %zext_ln63" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 29 'mul' 'mul_ln63' <Predicate = true> <Delay = 0.88> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 2 <SV = 1> <Delay = 3.34>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i16 %input1_low" [HLS/src/Arithmetic.cpp:44->HLS/src/Arithmetic.cpp:126]   --->   Operation 30 'zext' 'zext_ln44' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln45_7 = zext i16 %input1_high" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:126]   --->   Operation 31 'zext' 'zext_ln45_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i16 %input2_low" [HLS/src/Arithmetic.cpp:46->HLS/src/Arithmetic.cpp:126]   --->   Operation 32 'zext' 'zext_ln46' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i16 %input2_high" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:126]   --->   Operation 33 'zext' 'zext_ln47' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (3.34ns)   --->   "%ac = mul i32 %zext_ln47, i32 %zext_ln45_7" [HLS/src/Arithmetic.cpp:54->HLS/src/Arithmetic.cpp:126]   --->   Operation 34 'mul' 'ac' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (3.34ns)   --->   "%bd = mul i32 %zext_ln46, i32 %zext_ln44" [HLS/src/Arithmetic.cpp:55->HLS/src/Arithmetic.cpp:126]   --->   Operation 35 'mul' 'bd' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [2/3] (0.88ns) (grouped into DSP with root node sub_ln63)   --->   "%mul_ln63 = mul i34 %zext_ln63_18, i34 %zext_ln63" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 36 'mul' 'mul_ln63' <Predicate = true> <Delay = 0.88> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 2.87>
ST_3 : Operation 37 [1/3] (0.00ns) (grouped into DSP with root node sub_ln63)   --->   "%mul_ln63 = mul i34 %zext_ln63_18, i34 %zext_ln63" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 37 'mul' 'mul_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into DSP with root node sub_ln63)   --->   "%zext_ln63_19 = zext i34 %mul_ln63" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 38 'zext' 'zext_ln63_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln63_20 = zext i32 %ac" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 39 'zext' 'zext_ln63_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln63_21 = zext i32 %bd" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 40 'zext' 'zext_ln63_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.57ns)   --->   "%add_ln63 = add i33 %zext_ln63_21, i33 %zext_ln63_20" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 41 'add' 'add_ln63' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln63_22 = zext i33 %add_ln63" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 42 'zext' 'zext_ln63_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [2/2] (1.30ns) (root node of the DSP)   --->   "%sub_ln63 = sub i35 %zext_ln63_19, i35 %zext_ln63_22" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 43 'sub' 'sub_ln63' <Predicate = true> <Delay = 1.30> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 3.02>
ST_4 : Operation 44 [1/2] (1.30ns) (root node of the DSP)   --->   "%sub_ln63 = sub i35 %zext_ln63_19, i35 %zext_ln63_22" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 44 'sub' 'sub_ln63' <Predicate = true> <Delay = 1.30> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%sum1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %ac, i32 %bd" [HLS/src/Arithmetic.cpp:62->HLS/src/Arithmetic.cpp:126]   --->   Operation 45 'bitconcatenate' 'sum1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%sum2 = bitconcatenate i51 @_ssdm_op_BitConcatenate.i51.i35.i16, i35 %sub_ln63, i16 0" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 46 'bitconcatenate' 'sum2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln63 = sext i51 %sum2" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126]   --->   Operation 47 'sext' 'sext_ln63' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (1.72ns)   --->   "%res_mult = add i64 %sum1, i64 %sext_ln63" [HLS/src/Arithmetic.cpp:65->HLS/src/Arithmetic.cpp:126]   --->   Operation 48 'add' 'res_mult' <Predicate = true> <Delay = 1.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%input1_low_3 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult, i32 30, i32 45" [HLS/src/Arithmetic.cpp:130]   --->   Operation 49 'partselect' 'input1_low_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%input1_high_2 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult, i32 46, i32 61" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:132]   --->   Operation 50 'partselect' 'input1_high_2' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.93>
ST_5 : Operation 51 [1/1] (0.80ns)   --->   "%m = sparsemux i20 @_ssdm_op_SparseMux.ap_auto.3i20.i20.i2, i2 0, i20 1015804, i2 1, i20 753680, i2 2, i20 524347, i20 0, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:121]   --->   Operation 51 'sparsemux' 'm' <Predicate = true> <Delay = 0.80> <CoreInst = "SparseMux">   --->   Core 132 'SparseMux' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%input2_low_3 = trunc i20 %m" [HLS/src/Arithmetic.cpp:121]   --->   Operation 52 'trunc' 'input2_low_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln44_8 = zext i16 %input1_low_3" [HLS/src/Arithmetic.cpp:44->HLS/src/Arithmetic.cpp:132]   --->   Operation 53 'zext' 'zext_ln44_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln45_5 = zext i16 %input1_high_2" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:132]   --->   Operation 54 'zext' 'zext_ln45_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln46_8 = zext i16 %input2_low_3" [HLS/src/Arithmetic.cpp:46->HLS/src/Arithmetic.cpp:132]   --->   Operation 55 'zext' 'zext_ln46_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%input2_high_3 = partselect i4 @_ssdm_op_PartSelect.i4.i20.i32.i32, i20 %m, i32 16, i32 19" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:132]   --->   Operation 56 'partselect' 'input2_high_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln47 = sext i4 %input2_high_3" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:132]   --->   Operation 57 'sext' 'sext_ln47' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln47_7 = zext i16 %sext_ln47" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:132]   --->   Operation 58 'zext' 'zext_ln47_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (1.48ns) (grouped into DSP with root node sub_ln63_3)   --->   "%a_plus_b_3 = add i17 %zext_ln45_5, i17 %zext_ln44_8" [HLS/src/Arithmetic.cpp:50->HLS/src/Arithmetic.cpp:132]   --->   Operation 59 'add' 'a_plus_b_3' <Predicate = true> <Delay = 1.48> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 60 [1/1] (1.24ns)   --->   "%c_plus_d_3 = add i17 %zext_ln47_7, i17 %zext_ln46_8" [HLS/src/Arithmetic.cpp:51->HLS/src/Arithmetic.cpp:132]   --->   Operation 60 'add' 'c_plus_d_3' <Predicate = true> <Delay = 1.24> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns) (grouped into DSP with root node sub_ln63_3)   --->   "%zext_ln63_23 = zext i17 %a_plus_b_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 61 'zext' 'zext_ln63_23' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln63_24 = zext i17 %c_plus_d_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 62 'zext' 'zext_ln63_24' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [3/3] (0.88ns) (grouped into DSP with root node sub_ln63_3)   --->   "%mul_ln63_3 = mul i34 %zext_ln63_23, i34 %zext_ln63_24" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 63 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 0.88> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 3.34>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln44_7 = zext i16 %input1_low_3" [HLS/src/Arithmetic.cpp:44->HLS/src/Arithmetic.cpp:132]   --->   Operation 64 'zext' 'zext_ln44_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln45_8 = zext i16 %input1_high_2" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:132]   --->   Operation 65 'zext' 'zext_ln45_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln46_7 = zext i16 %input2_low_3" [HLS/src/Arithmetic.cpp:46->HLS/src/Arithmetic.cpp:132]   --->   Operation 66 'zext' 'zext_ln46_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln47_6 = zext i16 %sext_ln47" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:132]   --->   Operation 67 'zext' 'zext_ln47_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (3.34ns)   --->   "%ac_3 = mul i32 %zext_ln45_8, i32 %zext_ln47_6" [HLS/src/Arithmetic.cpp:54->HLS/src/Arithmetic.cpp:132]   --->   Operation 68 'mul' 'ac_3' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (3.34ns)   --->   "%bd_3 = mul i32 %zext_ln44_7, i32 %zext_ln46_7" [HLS/src/Arithmetic.cpp:55->HLS/src/Arithmetic.cpp:132]   --->   Operation 69 'mul' 'bd_3' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [2/3] (0.88ns) (grouped into DSP with root node sub_ln63_3)   --->   "%mul_ln63_3 = mul i34 %zext_ln63_23, i34 %zext_ln63_24" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 70 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 0.88> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 2.87>
ST_7 : Operation 71 [1/3] (0.00ns) (grouped into DSP with root node sub_ln63_3)   --->   "%mul_ln63_3 = mul i34 %zext_ln63_23, i34 %zext_ln63_24" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 71 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 72 [1/1] (0.00ns) (grouped into DSP with root node sub_ln63_3)   --->   "%zext_ln63_25 = zext i34 %mul_ln63_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 72 'zext' 'zext_ln63_25' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln63_26 = zext i32 %ac_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 73 'zext' 'zext_ln63_26' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln63_27 = zext i32 %bd_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 74 'zext' 'zext_ln63_27' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (1.57ns)   --->   "%add_ln63_3 = add i33 %zext_ln63_27, i33 %zext_ln63_26" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 75 'add' 'add_ln63_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln63_28 = zext i33 %add_ln63_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 76 'zext' 'zext_ln63_28' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [2/2] (1.30ns) (root node of the DSP)   --->   "%sub_ln63_3 = sub i35 %zext_ln63_25, i35 %zext_ln63_28" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 77 'sub' 'sub_ln63_3' <Predicate = true> <Delay = 1.30> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 3.02>
ST_8 : Operation 78 [1/2] (1.30ns) (root node of the DSP)   --->   "%sub_ln63_3 = sub i35 %zext_ln63_25, i35 %zext_ln63_28" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 78 'sub' 'sub_ln63_3' <Predicate = true> <Delay = 1.30> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "%sum1_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %ac_3, i32 %bd_3" [HLS/src/Arithmetic.cpp:62->HLS/src/Arithmetic.cpp:132]   --->   Operation 79 'bitconcatenate' 'sum1_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%sum2_3 = bitconcatenate i51 @_ssdm_op_BitConcatenate.i51.i35.i16, i35 %sub_ln63_3, i16 0" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 80 'bitconcatenate' 'sum2_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%sext_ln63_3 = sext i51 %sum2_3" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132]   --->   Operation 81 'sext' 'sext_ln63_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (1.72ns)   --->   "%res_mult_shift = add i64 %sext_ln63_3, i64 %sum1_3" [HLS/src/Arithmetic.cpp:65->HLS/src/Arithmetic.cpp:132]   --->   Operation 82 'add' 'res_mult_shift' <Predicate = true> <Delay = 1.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 83 [1/1] (0.00ns)   --->   "%res_mult_shift_part = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult_shift, i32 32, i32 47" [HLS/src/Arithmetic.cpp:137]   --->   Operation 83 'partselect' 'res_mult_shift_part' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_s = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %res_mult_shift, i32 48, i32 63" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:138]   --->   Operation 84 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 2.93>
ST_9 : Operation 85 [1/1] (0.80ns)   --->   "%mod = sparsemux i31 @_ssdm_op_SparseMux.ap_auto.3i31.i31.i2, i2 0, i31 1073750017, i2 1, i31 1073815553, i2 2, i31 1073872897, i31 0, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:146]   --->   Operation 85 'sparsemux' 'mod' <Predicate = true> <Delay = 0.80> <CoreInst = "SparseMux">   --->   Core 132 'SparseMux' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%input2_low_4 = trunc i31 %mod" [HLS/src/Arithmetic.cpp:119]   --->   Operation 86 'trunc' 'input2_low_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln44_10 = zext i16 %res_mult_shift_part" [HLS/src/Arithmetic.cpp:44->HLS/src/Arithmetic.cpp:138]   --->   Operation 87 'zext' 'zext_ln44_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln45_6 = zext i16 %tmp_s" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:138]   --->   Operation 88 'zext' 'zext_ln45_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln46_10 = zext i16 %input2_low_4" [HLS/src/Arithmetic.cpp:46->HLS/src/Arithmetic.cpp:138]   --->   Operation 89 'zext' 'zext_ln46_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (0.00ns)   --->   "%input2_high_4 = partselect i15 @_ssdm_op_PartSelect.i15.i31.i32.i32, i31 %mod, i32 16, i32 30" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:138]   --->   Operation 90 'partselect' 'input2_high_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln47_5 = zext i15 %input2_high_4" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:138]   --->   Operation 91 'zext' 'zext_ln47_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (1.48ns) (grouped into DSP with root node sub_ln63_4)   --->   "%a_plus_b_4 = add i17 %zext_ln44_10, i17 %zext_ln45_6" [HLS/src/Arithmetic.cpp:50->HLS/src/Arithmetic.cpp:138]   --->   Operation 92 'add' 'a_plus_b_4' <Predicate = true> <Delay = 1.48> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 93 [1/1] (1.24ns)   --->   "%c_plus_d_4 = add i17 %zext_ln47_5, i17 %zext_ln46_10" [HLS/src/Arithmetic.cpp:51->HLS/src/Arithmetic.cpp:138]   --->   Operation 93 'add' 'c_plus_d_4' <Predicate = true> <Delay = 1.24> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 94 [1/1] (0.00ns) (grouped into DSP with root node sub_ln63_4)   --->   "%zext_ln63_29 = zext i17 %a_plus_b_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 94 'zext' 'zext_ln63_29' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln63_30 = zext i17 %c_plus_d_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 95 'zext' 'zext_ln63_30' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [3/3] (0.88ns) (grouped into DSP with root node sub_ln63_4)   --->   "%mul_ln63_4 = mul i34 %zext_ln63_29, i34 %zext_ln63_30" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 96 'mul' 'mul_ln63_4' <Predicate = true> <Delay = 0.88> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 10 <SV = 9> <Delay = 3.34>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln44_9 = zext i16 %res_mult_shift_part" [HLS/src/Arithmetic.cpp:44->HLS/src/Arithmetic.cpp:138]   --->   Operation 97 'zext' 'zext_ln44_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i16 %tmp_s" [HLS/src/Arithmetic.cpp:45->HLS/src/Arithmetic.cpp:138]   --->   Operation 98 'zext' 'zext_ln45' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln46_9 = zext i16 %input2_low_4" [HLS/src/Arithmetic.cpp:46->HLS/src/Arithmetic.cpp:138]   --->   Operation 99 'zext' 'zext_ln46_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln47_8 = zext i15 %input2_high_4" [HLS/src/Arithmetic.cpp:47->HLS/src/Arithmetic.cpp:138]   --->   Operation 100 'zext' 'zext_ln47_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (3.34ns)   --->   "%ac_4 = mul i31 %zext_ln45, i31 %zext_ln47_8" [HLS/src/Arithmetic.cpp:54->HLS/src/Arithmetic.cpp:138]   --->   Operation 101 'mul' 'ac_4' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (3.34ns)   --->   "%bd_4 = mul i32 %zext_ln44_9, i32 %zext_ln46_9" [HLS/src/Arithmetic.cpp:55->HLS/src/Arithmetic.cpp:138]   --->   Operation 102 'mul' 'bd_4' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 103 [2/3] (0.88ns) (grouped into DSP with root node sub_ln63_4)   --->   "%mul_ln63_4 = mul i34 %zext_ln63_29, i34 %zext_ln63_30" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 103 'mul' 'mul_ln63_4' <Predicate = true> <Delay = 0.88> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 2.87>
ST_11 : Operation 104 [1/3] (0.00ns) (grouped into DSP with root node sub_ln63_4)   --->   "%mul_ln63_4 = mul i34 %zext_ln63_29, i34 %zext_ln63_30" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 104 'mul' 'mul_ln63_4' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 105 [1/1] (0.00ns) (grouped into DSP with root node sub_ln63_4)   --->   "%zext_ln63_31 = zext i34 %mul_ln63_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 105 'zext' 'zext_ln63_31' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln63_32 = zext i31 %ac_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 106 'zext' 'zext_ln63_32' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln63_33 = zext i32 %bd_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 107 'zext' 'zext_ln63_33' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (1.57ns)   --->   "%add_ln63_4 = add i33 %zext_ln63_33, i33 %zext_ln63_32" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 108 'add' 'add_ln63_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln63_34 = zext i33 %add_ln63_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 109 'zext' 'zext_ln63_34' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 110 [2/2] (1.30ns) (root node of the DSP)   --->   "%sub_ln63_4 = sub i35 %zext_ln63_31, i35 %zext_ln63_34" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 110 'sub' 'sub_ln63_4' <Predicate = true> <Delay = 1.30> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 12 <SV = 11> <Delay = 3.80>
ST_12 : Operation 111 [1/2] (1.30ns) (root node of the DSP)   --->   "%sub_ln63_4 = sub i35 %zext_ln63_31, i35 %zext_ln63_34" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 111 'sub' 'sub_ln63_4' <Predicate = true> <Delay = 1.30> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.35> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%sum1_4 = bitconcatenate i63 @_ssdm_op_BitConcatenate.i63.i31.i32, i31 %ac_4, i32 %bd_4" [HLS/src/Arithmetic.cpp:62->HLS/src/Arithmetic.cpp:138]   --->   Operation 112 'bitconcatenate' 'sum1_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i63 %sum1_4" [HLS/src/Arithmetic.cpp:62->HLS/src/Arithmetic.cpp:138]   --->   Operation 113 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (0.00ns)   --->   "%sum2_4 = bitconcatenate i51 @_ssdm_op_BitConcatenate.i51.i35.i16, i35 %sub_ln63_4, i16 0" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 114 'bitconcatenate' 'sum2_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln63_4 = sext i51 %sum2_4" [HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138]   --->   Operation 115 'sext' 'sext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%res_shift = sub i64 %res_mult, i64 %zext_ln62" [HLS/src/Arithmetic.cpp:65->HLS/src/Arithmetic.cpp:138]   --->   Operation 116 'sub' 'res_shift' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.25> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 117 [1/1] (2.50ns) (root node of TernaryAdder)   --->   "%sub_ln142 = sub i64 %res_shift, i64 %sext_ln63_4" [HLS/src/Arithmetic.cpp:142]   --->   Operation 117 'sub' 'sub_ln142' <Predicate = true> <Delay = 2.50> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.25> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 13 <SV = 12> <Delay = 2.17>
ST_13 : Operation 118 [1/1] (0.00ns)   --->   "%specpipeline_ln119 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_5" [HLS/src/Arithmetic.cpp:119]   --->   Operation 118 'specpipeline' 'specpipeline_ln119' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln146 = zext i31 %mod" [HLS/src/Arithmetic.cpp:146]   --->   Operation 119 'zext' 'zext_ln146' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 120 [1/1] (1.72ns)   --->   "%sub_ln146 = sub i64 %sub_ln142, i64 %zext_ln146" [HLS/src/Arithmetic.cpp:146]   --->   Operation 120 'sub' 'sub_ln146' <Predicate = true> <Delay = 1.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln147_cast = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %mod, i1 0" [HLS/src/Arithmetic.cpp:147]   --->   Operation 121 'bitconcatenate' 'zext_ln147_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln147 = zext i32 %zext_ln147_cast" [HLS/src/Arithmetic.cpp:147]   --->   Operation 122 'zext' 'zext_ln147' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 123 [1/1] (1.72ns)   --->   "%sub_ln147 = sub i64 %sub_ln142, i64 %zext_ln147" [HLS/src/Arithmetic.cpp:147]   --->   Operation 123 'sub' 'sub_ln147' <Predicate = true> <Delay = 1.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node select_ln149_2)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %sub_ln146, i32 63" [HLS/src/Arithmetic.cpp:149]   --->   Operation 124 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node select_ln149_2)   --->   "%tmp_44 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %sub_ln147, i32 63" [HLS/src/Arithmetic.cpp:149]   --->   Operation 125 'bitselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node select_ln149_2)   --->   "%trunc_ln149 = trunc i64 %sub_ln142" [HLS/src/Arithmetic.cpp:149]   --->   Operation 126 'trunc' 'trunc_ln149' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node select_ln149_2)   --->   "%trunc_ln149_3 = trunc i64 %sub_ln146" [HLS/src/Arithmetic.cpp:149]   --->   Operation 127 'trunc' 'trunc_ln149_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node select_ln149_2)   --->   "%trunc_ln149_4 = trunc i64 %sub_ln147" [HLS/src/Arithmetic.cpp:149]   --->   Operation 128 'trunc' 'trunc_ln149_4' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node select_ln149_2)   --->   "%select_ln149 = select i1 %tmp_44, i32 %trunc_ln149_3, i32 %trunc_ln149_4" [HLS/src/Arithmetic.cpp:149]   --->   Operation 129 'select' 'select_ln149' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 130 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln149_2 = select i1 %tmp, i32 %trunc_ln149, i32 %select_ln149" [HLS/src/Arithmetic.cpp:149]   --->   Operation 130 'select' 'select_ln149_2' <Predicate = true> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (0.00ns)   --->   "%ret_ln151 = ret i32 %select_ln149_2" [HLS/src/Arithmetic.cpp:151]   --->   Operation 131 'ret' 'ret_ln151' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.000ns, clock uncertainty: 1.620ns.

 <State 1>: 2.360ns
The critical path consists of the following:
	wire read operation ('input2_val_read', HLS/src/Arithmetic.cpp:119) on port 'input2_val' (HLS/src/Arithmetic.cpp:119) [5]  (0.000 ns)
	'add' operation 17 bit of DSP[36] ('c_plus_d', HLS/src/Arithmetic.cpp:51->HLS/src/Arithmetic.cpp:126) [25]  (1.480 ns)
	'mul' operation 34 bit of DSP[36] ('mul_ln63', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126) [30]  (0.880 ns)

 <State 2>: 3.340ns
The critical path consists of the following:
	'mul' operation 32 bit ('ac', HLS/src/Arithmetic.cpp:54->HLS/src/Arithmetic.cpp:126) [26]  (3.340 ns)

 <State 3>: 2.878ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln63', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126) [34]  (1.578 ns)
	'sub' operation 35 bit of DSP[36] ('sub_ln63', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126) [36]  (1.300 ns)

 <State 4>: 3.020ns
The critical path consists of the following:
	'sub' operation 35 bit of DSP[36] ('sub_ln63', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:126) [36]  (1.300 ns)
	'add' operation 64 bit ('res_mult', HLS/src/Arithmetic.cpp:65->HLS/src/Arithmetic.cpp:126) [40]  (1.720 ns)

 <State 5>: 2.934ns
The critical path consists of the following:
	'sparsemux' operation 20 bit ('m', HLS/src/Arithmetic.cpp:121) [12]  (0.807 ns)
	'add' operation 17 bit ('c_plus_d', HLS/src/Arithmetic.cpp:51->HLS/src/Arithmetic.cpp:132) [54]  (1.247 ns)
	'mul' operation 34 bit of DSP[65] ('mul_ln63_3', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132) [59]  (0.880 ns)

 <State 6>: 3.340ns
The critical path consists of the following:
	'mul' operation 32 bit ('ac', HLS/src/Arithmetic.cpp:54->HLS/src/Arithmetic.cpp:132) [55]  (3.340 ns)

 <State 7>: 2.878ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln63_3', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132) [63]  (1.578 ns)
	'sub' operation 35 bit of DSP[65] ('sub_ln63_3', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132) [65]  (1.300 ns)

 <State 8>: 3.020ns
The critical path consists of the following:
	'sub' operation 35 bit of DSP[65] ('sub_ln63_3', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:132) [65]  (1.300 ns)
	'add' operation 64 bit ('res_mult_shift', HLS/src/Arithmetic.cpp:65->HLS/src/Arithmetic.cpp:132) [69]  (1.720 ns)

 <State 9>: 2.934ns
The critical path consists of the following:
	'sparsemux' operation 31 bit ('mod', HLS/src/Arithmetic.cpp:146) [10]  (0.807 ns)
	'add' operation 17 bit ('c_plus_d', HLS/src/Arithmetic.cpp:51->HLS/src/Arithmetic.cpp:138) [82]  (1.247 ns)
	'mul' operation 34 bit of DSP[93] ('mul_ln63_4', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138) [87]  (0.880 ns)

 <State 10>: 3.340ns
The critical path consists of the following:
	'mul' operation 31 bit ('ac', HLS/src/Arithmetic.cpp:54->HLS/src/Arithmetic.cpp:138) [83]  (3.340 ns)

 <State 11>: 2.878ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln63_4', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138) [91]  (1.578 ns)
	'sub' operation 35 bit of DSP[93] ('sub_ln63_4', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138) [93]  (1.300 ns)

 <State 12>: 3.803ns
The critical path consists of the following:
	'sub' operation 35 bit of DSP[93] ('sub_ln63_4', HLS/src/Arithmetic.cpp:63->HLS/src/Arithmetic.cpp:138) [93]  (1.300 ns)
	'sub' operation 64 bit ('sub_ln142', HLS/src/Arithmetic.cpp:142) [99]  (2.503 ns)

 <State 13>: 2.177ns
The critical path consists of the following:
	'sub' operation 64 bit ('sub_ln146', HLS/src/Arithmetic.cpp:146) [101]  (1.720 ns)
	'select' operation 32 bit ('select_ln149_2', HLS/src/Arithmetic.cpp:149) [111]  (0.457 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
