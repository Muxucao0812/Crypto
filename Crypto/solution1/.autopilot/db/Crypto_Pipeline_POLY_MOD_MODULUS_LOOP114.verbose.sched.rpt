

================================================================
== Vitis HLS Report for 'Crypto_Pipeline_POLY_MOD_MODULUS_LOOP114'
================================================================
* Date:           Thu Feb 27 10:54:21 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        Crypto
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  5.683 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     4105|     4105|  32.840 us|  32.840 us|  4105|  4105|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |         Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- POLY_MOD_MODULUS_LOOP1  |     4103|     4103|        12|          4|          1|  1024|       yes|
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 4, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.26>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 15 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%RAMSel_cast_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %RAMSel_cast"   --->   Operation 16 'read' 'RAMSel_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln0 = store i13 0, i13 %j"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc152.2"   --->   Operation 18 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%j_16 = load i13 %j"   --->   Operation 19 'load' 'j_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 20 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i13.i32, i13 %j_16, i32 12" [Crypto.cpp:96]   --->   Operation 21 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln96 = br i1 %tmp, void %for.inc152.2.split, void %sw.epilog.loopexit11.exitStub" [Crypto.cpp:96]   --->   Operation 22 'br' 'br_ln96' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j_19_cast89 = zext i13 %j_16"   --->   Operation 23 'zext' 'j_19_cast89' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty = trunc i13 %j_16"   --->   Operation 24 'trunc' 'empty' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%DataRAM_2_addr_2 = getelementptr i32 %DataRAM_2, i64 0, i64 %j_19_cast89" [Crypto.cpp:99]   --->   Operation 25 'getelementptr' 'DataRAM_2_addr_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%DataRAM_5_addr_2 = getelementptr i32 %DataRAM_5, i64 0, i64 %j_19_cast89" [Crypto.cpp:99]   --->   Operation 26 'getelementptr' 'DataRAM_5_addr_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%DataRAM_8_addr_2 = getelementptr i32 %DataRAM_8, i64 0, i64 %j_19_cast89" [Crypto.cpp:99]   --->   Operation 27 'getelementptr' 'DataRAM_8_addr_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%DataRAM_11_addr_2 = getelementptr i32 %DataRAM_11, i64 0, i64 %j_19_cast89" [Crypto.cpp:99]   --->   Operation 28 'getelementptr' 'DataRAM_11_addr_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (3.25ns)   --->   "%DataRAM_2_load_1 = load i12 %DataRAM_2_addr_2" [Crypto.cpp:99]   --->   Operation 29 'load' 'DataRAM_2_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 30 [2/2] (3.25ns)   --->   "%DataRAM_5_load_1 = load i12 %DataRAM_5_addr_2" [Crypto.cpp:99]   --->   Operation 30 'load' 'DataRAM_5_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 31 [2/2] (3.25ns)   --->   "%DataRAM_8_load_1 = load i12 %DataRAM_8_addr_2" [Crypto.cpp:99]   --->   Operation 31 'load' 'DataRAM_8_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 32 [2/2] (3.25ns)   --->   "%DataRAM_11_load_1 = load i12 %DataRAM_11_addr_2" [Crypto.cpp:99]   --->   Operation 32 'load' 'DataRAM_11_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%or_ln96 = or i12 %empty, i12 1" [Crypto.cpp:96]   --->   Operation 33 'or' 'or_ln96' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln99 = zext i12 %or_ln96" [Crypto.cpp:99]   --->   Operation 34 'zext' 'zext_ln99' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%DataRAM_2_addr_3 = getelementptr i32 %DataRAM_2, i64 0, i64 %zext_ln99" [Crypto.cpp:99]   --->   Operation 35 'getelementptr' 'DataRAM_2_addr_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%DataRAM_5_addr_3 = getelementptr i32 %DataRAM_5, i64 0, i64 %zext_ln99" [Crypto.cpp:99]   --->   Operation 36 'getelementptr' 'DataRAM_5_addr_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%DataRAM_8_addr_3 = getelementptr i32 %DataRAM_8, i64 0, i64 %zext_ln99" [Crypto.cpp:99]   --->   Operation 37 'getelementptr' 'DataRAM_8_addr_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%DataRAM_11_addr_3 = getelementptr i32 %DataRAM_11, i64 0, i64 %zext_ln99" [Crypto.cpp:99]   --->   Operation 38 'getelementptr' 'DataRAM_11_addr_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (3.25ns)   --->   "%DataRAM_2_load_2 = load i12 %DataRAM_2_addr_3" [Crypto.cpp:99]   --->   Operation 39 'load' 'DataRAM_2_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 40 [2/2] (3.25ns)   --->   "%DataRAM_5_load_2 = load i12 %DataRAM_5_addr_3" [Crypto.cpp:99]   --->   Operation 40 'load' 'DataRAM_5_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 41 [2/2] (3.25ns)   --->   "%DataRAM_8_load_2 = load i12 %DataRAM_8_addr_3" [Crypto.cpp:99]   --->   Operation 41 'load' 'DataRAM_8_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 42 [2/2] (3.25ns)   --->   "%DataRAM_11_load_2 = load i12 %DataRAM_11_addr_3" [Crypto.cpp:99]   --->   Operation 42 'load' 'DataRAM_11_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 43 [1/1] (1.86ns)   --->   "%switch_ln101 = switch i2 %RAMSel_cast_read, void %arrayidx14555.2.3.case.3, i2 0, void %arrayidx14555.2.3.case.0, i2 1, void %arrayidx14555.2.3.case.1, i2 2, void %arrayidx14555.2.3.case.2" [Crypto.cpp:101]   --->   Operation 43 'switch' 'switch_ln101' <Predicate = (!tmp)> <Delay = 1.86>
ST_1 : Operation 44 [1/1] (1.67ns)   --->   "%add_ln96 = add i13 %j_16, i13 4" [Crypto.cpp:96]   --->   Operation 44 'add' 'add_ln96' <Predicate = (!tmp)> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (1.58ns)   --->   "%store_ln96 = store i13 %add_ln96, i13 %j" [Crypto.cpp:96]   --->   Operation 45 'store' 'store_ln96' <Predicate = (!tmp)> <Delay = 1.58>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln96 = br void %for.inc152.2" [Crypto.cpp:96]   --->   Operation 46 'br' 'br_ln96' <Predicate = (!tmp)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.08>
ST_2 : Operation 47 [1/2] (3.25ns)   --->   "%DataRAM_2_load_1 = load i12 %DataRAM_2_addr_2" [Crypto.cpp:99]   --->   Operation 47 'load' 'DataRAM_2_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 48 [1/2] (3.25ns)   --->   "%DataRAM_5_load_1 = load i12 %DataRAM_5_addr_2" [Crypto.cpp:99]   --->   Operation 48 'load' 'DataRAM_5_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 49 [1/2] (3.25ns)   --->   "%DataRAM_8_load_1 = load i12 %DataRAM_8_addr_2" [Crypto.cpp:99]   --->   Operation 49 'load' 'DataRAM_8_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 50 [1/2] (3.25ns)   --->   "%DataRAM_11_load_1 = load i12 %DataRAM_11_addr_2" [Crypto.cpp:99]   --->   Operation 50 'load' 'DataRAM_11_load_1' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 51 [1/1] (1.82ns)   --->   "%ModInput = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_2_load_1, i32 %DataRAM_5_load_1, i32 %DataRAM_8_load_1, i32 %DataRAM_11_load_1, i2 %RAMSel_cast_read" [Crypto.cpp:99]   --->   Operation 51 'mux' 'ModInput' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%or_ln96_1 = or i12 %empty, i12 2" [Crypto.cpp:96]   --->   Operation 52 'or' 'or_ln96_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln99_1 = zext i12 %or_ln96_1" [Crypto.cpp:99]   --->   Operation 53 'zext' 'zext_ln99_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%DataRAM_2_addr_4 = getelementptr i32 %DataRAM_2, i64 0, i64 %zext_ln99_1" [Crypto.cpp:99]   --->   Operation 54 'getelementptr' 'DataRAM_2_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%DataRAM_5_addr_4 = getelementptr i32 %DataRAM_5, i64 0, i64 %zext_ln99_1" [Crypto.cpp:99]   --->   Operation 55 'getelementptr' 'DataRAM_5_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%DataRAM_8_addr_4 = getelementptr i32 %DataRAM_8, i64 0, i64 %zext_ln99_1" [Crypto.cpp:99]   --->   Operation 56 'getelementptr' 'DataRAM_8_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%DataRAM_11_addr_4 = getelementptr i32 %DataRAM_11, i64 0, i64 %zext_ln99_1" [Crypto.cpp:99]   --->   Operation 57 'getelementptr' 'DataRAM_11_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%or_ln96_2 = or i12 %empty, i12 3" [Crypto.cpp:96]   --->   Operation 58 'or' 'or_ln96_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln99_2 = zext i12 %or_ln96_2" [Crypto.cpp:99]   --->   Operation 59 'zext' 'zext_ln99_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%DataRAM_2_addr_5 = getelementptr i32 %DataRAM_2, i64 0, i64 %zext_ln99_2" [Crypto.cpp:99]   --->   Operation 60 'getelementptr' 'DataRAM_2_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%DataRAM_5_addr_5 = getelementptr i32 %DataRAM_5, i64 0, i64 %zext_ln99_2" [Crypto.cpp:99]   --->   Operation 61 'getelementptr' 'DataRAM_5_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%DataRAM_8_addr_5 = getelementptr i32 %DataRAM_8, i64 0, i64 %zext_ln99_2" [Crypto.cpp:99]   --->   Operation 62 'getelementptr' 'DataRAM_8_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%DataRAM_11_addr_5 = getelementptr i32 %DataRAM_11, i64 0, i64 %zext_ln99_2" [Crypto.cpp:99]   --->   Operation 63 'getelementptr' 'DataRAM_11_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 64 [1/2] (3.25ns)   --->   "%DataRAM_2_load_2 = load i12 %DataRAM_2_addr_3" [Crypto.cpp:99]   --->   Operation 64 'load' 'DataRAM_2_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 65 [1/2] (3.25ns)   --->   "%DataRAM_5_load_2 = load i12 %DataRAM_5_addr_3" [Crypto.cpp:99]   --->   Operation 65 'load' 'DataRAM_5_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 66 [1/2] (3.25ns)   --->   "%DataRAM_8_load_2 = load i12 %DataRAM_8_addr_3" [Crypto.cpp:99]   --->   Operation 66 'load' 'DataRAM_8_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 67 [1/2] (3.25ns)   --->   "%DataRAM_11_load_2 = load i12 %DataRAM_11_addr_3" [Crypto.cpp:99]   --->   Operation 67 'load' 'DataRAM_11_load_2' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 68 [1/1] (1.82ns)   --->   "%ModInput_1 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_2_load_2, i32 %DataRAM_5_load_2, i32 %DataRAM_8_load_2, i32 %DataRAM_11_load_2, i2 %RAMSel_cast_read" [Crypto.cpp:99]   --->   Operation 68 'mux' 'ModInput_1' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [2/2] (3.25ns)   --->   "%DataRAM_2_load_3 = load i12 %DataRAM_2_addr_4" [Crypto.cpp:99]   --->   Operation 69 'load' 'DataRAM_2_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 70 [2/2] (3.25ns)   --->   "%DataRAM_5_load_3 = load i12 %DataRAM_5_addr_4" [Crypto.cpp:99]   --->   Operation 70 'load' 'DataRAM_5_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 71 [2/2] (3.25ns)   --->   "%DataRAM_8_load_3 = load i12 %DataRAM_8_addr_4" [Crypto.cpp:99]   --->   Operation 71 'load' 'DataRAM_8_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 72 [2/2] (3.25ns)   --->   "%DataRAM_11_load_3 = load i12 %DataRAM_11_addr_4" [Crypto.cpp:99]   --->   Operation 72 'load' 'DataRAM_11_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 73 [2/2] (3.25ns)   --->   "%DataRAM_2_load_4 = load i12 %DataRAM_2_addr_5" [Crypto.cpp:99]   --->   Operation 73 'load' 'DataRAM_2_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 74 [2/2] (3.25ns)   --->   "%DataRAM_5_load_4 = load i12 %DataRAM_5_addr_5" [Crypto.cpp:99]   --->   Operation 74 'load' 'DataRAM_5_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 75 [2/2] (3.25ns)   --->   "%DataRAM_8_load_4 = load i12 %DataRAM_8_addr_5" [Crypto.cpp:99]   --->   Operation 75 'load' 'DataRAM_8_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 76 [2/2] (3.25ns)   --->   "%DataRAM_11_load_4 = load i12 %DataRAM_11_addr_5" [Crypto.cpp:99]   --->   Operation 76 'load' 'DataRAM_11_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 3 <SV = 2> <Delay = 5.65>
ST_3 : Operation 77 [6/6] (5.65ns)   --->   "%ModRes = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput" [Crypto.cpp:100]   --->   Operation 77 'call' 'ModRes' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 78 [1/2] (3.25ns)   --->   "%DataRAM_2_load_3 = load i12 %DataRAM_2_addr_4" [Crypto.cpp:99]   --->   Operation 78 'load' 'DataRAM_2_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 79 [1/2] (3.25ns)   --->   "%DataRAM_5_load_3 = load i12 %DataRAM_5_addr_4" [Crypto.cpp:99]   --->   Operation 79 'load' 'DataRAM_5_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 80 [1/2] (3.25ns)   --->   "%DataRAM_8_load_3 = load i12 %DataRAM_8_addr_4" [Crypto.cpp:99]   --->   Operation 80 'load' 'DataRAM_8_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 81 [1/2] (3.25ns)   --->   "%DataRAM_11_load_3 = load i12 %DataRAM_11_addr_4" [Crypto.cpp:99]   --->   Operation 81 'load' 'DataRAM_11_load_3' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 82 [1/1] (1.82ns)   --->   "%ModInput_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_2_load_3, i32 %DataRAM_5_load_3, i32 %DataRAM_8_load_3, i32 %DataRAM_11_load_3, i2 %RAMSel_cast_read" [Crypto.cpp:99]   --->   Operation 82 'mux' 'ModInput_2' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/2] (3.25ns)   --->   "%DataRAM_2_load_4 = load i12 %DataRAM_2_addr_5" [Crypto.cpp:99]   --->   Operation 83 'load' 'DataRAM_2_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 84 [1/2] (3.25ns)   --->   "%DataRAM_5_load_4 = load i12 %DataRAM_5_addr_5" [Crypto.cpp:99]   --->   Operation 84 'load' 'DataRAM_5_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 85 [1/2] (3.25ns)   --->   "%DataRAM_8_load_4 = load i12 %DataRAM_8_addr_5" [Crypto.cpp:99]   --->   Operation 85 'load' 'DataRAM_8_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 86 [1/2] (3.25ns)   --->   "%DataRAM_11_load_4 = load i12 %DataRAM_11_addr_5" [Crypto.cpp:99]   --->   Operation 86 'load' 'DataRAM_11_load_4' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 87 [1/1] (1.82ns)   --->   "%ModInput_3 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %DataRAM_2_load_4, i32 %DataRAM_5_load_4, i32 %DataRAM_8_load_4, i32 %DataRAM_11_load_4, i2 %RAMSel_cast_read" [Crypto.cpp:99]   --->   Operation 87 'mux' 'ModInput_3' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.68>
ST_4 : Operation 88 [5/6] (5.68ns)   --->   "%ModRes = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput" [Crypto.cpp:100]   --->   Operation 88 'call' 'ModRes' <Predicate = (!tmp)> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 89 [6/6] (5.65ns)   --->   "%ModRes_1 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_1" [Crypto.cpp:100]   --->   Operation 89 'call' 'ModRes_1' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.68>
ST_5 : Operation 90 [4/6] (5.68ns)   --->   "%ModRes = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput" [Crypto.cpp:100]   --->   Operation 90 'call' 'ModRes' <Predicate = (!tmp)> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 91 [5/6] (5.68ns)   --->   "%ModRes_1 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_1" [Crypto.cpp:100]   --->   Operation 91 'call' 'ModRes_1' <Predicate = (!tmp)> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 92 [6/6] (5.65ns)   --->   "%ModRes_2 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_2" [Crypto.cpp:100]   --->   Operation 92 'call' 'ModRes_2' <Predicate = (!tmp)> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 5.68>
ST_6 : Operation 93 [3/6] (5.68ns)   --->   "%ModRes = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput" [Crypto.cpp:100]   --->   Operation 93 'call' 'ModRes' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 94 [4/6] (5.68ns)   --->   "%ModRes_1 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_1" [Crypto.cpp:100]   --->   Operation 94 'call' 'ModRes_1' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 95 [5/6] (5.68ns)   --->   "%ModRes_2 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_2" [Crypto.cpp:100]   --->   Operation 95 'call' 'ModRes_2' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 96 [6/6] (5.65ns)   --->   "%ModRes_3 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_3" [Crypto.cpp:100]   --->   Operation 96 'call' 'ModRes_3' <Predicate = true> <Delay = 5.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 5.68>
ST_7 : Operation 97 [2/6] (5.68ns)   --->   "%ModRes = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput" [Crypto.cpp:100]   --->   Operation 97 'call' 'ModRes' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 98 [3/6] (5.68ns)   --->   "%ModRes_1 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_1" [Crypto.cpp:100]   --->   Operation 98 'call' 'ModRes_1' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 99 [4/6] (5.68ns)   --->   "%ModRes_2 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_2" [Crypto.cpp:100]   --->   Operation 99 'call' 'ModRes_2' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 100 [5/6] (5.68ns)   --->   "%ModRes_3 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_3" [Crypto.cpp:100]   --->   Operation 100 'call' 'ModRes_3' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 5.68>
ST_8 : Operation 101 [1/6] (0.69ns)   --->   "%ModRes = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput" [Crypto.cpp:100]   --->   Operation 101 'call' 'ModRes' <Predicate = true> <Delay = 0.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 102 [2/6] (5.68ns)   --->   "%ModRes_1 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_1" [Crypto.cpp:100]   --->   Operation 102 'call' 'ModRes_1' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 103 [3/6] (5.68ns)   --->   "%ModRes_2 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_2" [Crypto.cpp:100]   --->   Operation 103 'call' 'ModRes_2' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 104 [4/6] (5.68ns)   --->   "%ModRes_3 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_3" [Crypto.cpp:100]   --->   Operation 104 'call' 'ModRes_3' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 105 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes, i12 %DataRAM_8_addr_2" [Crypto.cpp:101]   --->   Operation 105 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 106 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes, i12 %DataRAM_5_addr_2" [Crypto.cpp:101]   --->   Operation 106 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 107 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes, i12 %DataRAM_2_addr_2" [Crypto.cpp:101]   --->   Operation 107 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 108 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes, i12 %DataRAM_11_addr_2" [Crypto.cpp:101]   --->   Operation 108 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 133 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 5.68>
ST_9 : Operation 109 [1/6] (0.69ns)   --->   "%ModRes_1 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_1" [Crypto.cpp:100]   --->   Operation 109 'call' 'ModRes_1' <Predicate = (!tmp)> <Delay = 0.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 110 [2/6] (5.68ns)   --->   "%ModRes_2 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_2" [Crypto.cpp:100]   --->   Operation 110 'call' 'ModRes_2' <Predicate = (!tmp)> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 111 [3/6] (5.68ns)   --->   "%ModRes_3 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_3" [Crypto.cpp:100]   --->   Operation 111 'call' 'ModRes_3' <Predicate = (!tmp)> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 5.68>
ST_10 : Operation 112 [1/6] (0.69ns)   --->   "%ModRes_2 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_2" [Crypto.cpp:100]   --->   Operation 112 'call' 'ModRes_2' <Predicate = true> <Delay = 0.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 113 [2/6] (5.68ns)   --->   "%ModRes_3 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_3" [Crypto.cpp:100]   --->   Operation 113 'call' 'ModRes_3' <Predicate = true> <Delay = 5.68> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 114 [1/1] (0.00ns)   --->   "%speclooptripcount_ln98 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1024, i64 1024, i64 1024" [Crypto.cpp:98]   --->   Operation 114 'speclooptripcount' 'speclooptripcount_ln98' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%specloopname_ln96 = specloopname void @_ssdm_op_SpecLoopName, void @empty_17" [Crypto.cpp:96]   --->   Operation 115 'specloopname' 'specloopname_ln96' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 116 [1/6] (0.69ns)   --->   "%ModRes_3 = call i32 @MOD_PLAINTEXTMODULUS, i32 %ModInput_3" [Crypto.cpp:100]   --->   Operation 116 'call' 'ModRes_3' <Predicate = true> <Delay = 0.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 117 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_1, i12 %DataRAM_8_addr_3" [Crypto.cpp:101]   --->   Operation 117 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 118 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_2, i12 %DataRAM_8_addr_4" [Crypto.cpp:101]   --->   Operation 118 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 119 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_1, i12 %DataRAM_5_addr_3" [Crypto.cpp:101]   --->   Operation 119 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 120 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_2, i12 %DataRAM_5_addr_4" [Crypto.cpp:101]   --->   Operation 120 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 121 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_1, i12 %DataRAM_2_addr_3" [Crypto.cpp:101]   --->   Operation 121 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 122 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_2, i12 %DataRAM_2_addr_4" [Crypto.cpp:101]   --->   Operation 122 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 123 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_1, i12 %DataRAM_11_addr_3" [Crypto.cpp:101]   --->   Operation 123 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_11 : Operation 124 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_2, i12 %DataRAM_11_addr_4" [Crypto.cpp:101]   --->   Operation 124 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 125 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_3, i12 %DataRAM_8_addr_5" [Crypto.cpp:101]   --->   Operation 125 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 126 [1/1] (0.00ns)   --->   "%br_ln101 = br void %arrayidx14555.2.3.exit" [Crypto.cpp:101]   --->   Operation 126 'br' 'br_ln101' <Predicate = (RAMSel_cast_read == 2)> <Delay = 0.00>
ST_12 : Operation 127 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_3, i12 %DataRAM_5_addr_5" [Crypto.cpp:101]   --->   Operation 127 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln101 = br void %arrayidx14555.2.3.exit" [Crypto.cpp:101]   --->   Operation 128 'br' 'br_ln101' <Predicate = (RAMSel_cast_read == 1)> <Delay = 0.00>
ST_12 : Operation 129 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_3, i12 %DataRAM_2_addr_5" [Crypto.cpp:101]   --->   Operation 129 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 130 [1/1] (0.00ns)   --->   "%br_ln101 = br void %arrayidx14555.2.3.exit" [Crypto.cpp:101]   --->   Operation 130 'br' 'br_ln101' <Predicate = (RAMSel_cast_read == 0)> <Delay = 0.00>
ST_12 : Operation 131 [1/1] (3.25ns)   --->   "%store_ln101 = store i32 %ModRes_3, i12 %DataRAM_11_addr_5" [Crypto.cpp:101]   --->   Operation 131 'store' 'store_ln101' <Predicate = (RAMSel_cast_read == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 132 [1/1] (0.00ns)   --->   "%br_ln101 = br void %arrayidx14555.2.3.exit" [Crypto.cpp:101]   --->   Operation 132 'br' 'br_ln101' <Predicate = (RAMSel_cast_read == 3)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 3.268ns
The critical path consists of the following:
	'alloca' operation ('j') [6]  (0.000 ns)
	'load' operation ('j') on local variable 'j' [11]  (0.000 ns)
	'add' operation ('add_ln96', Crypto.cpp:96) [92]  (1.679 ns)
	'store' operation ('store_ln96', Crypto.cpp:96) of variable 'add_ln96', Crypto.cpp:96 on local variable 'j' [93]  (1.588 ns)

 <State 2>: 5.081ns
The critical path consists of the following:
	'load' operation ('DataRAM_2_load_1', Crypto.cpp:99) on array 'DataRAM_2' [24]  (3.254 ns)
	'mux' operation ('ModInput', Crypto.cpp:99) [28]  (1.827 ns)

 <State 3>: 5.655ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [29]  (5.655 ns)

 <State 4>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [29]  (5.683 ns)

 <State 5>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [29]  (5.683 ns)

 <State 6>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [29]  (5.683 ns)

 <State 7>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [29]  (5.683 ns)

 <State 8>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [53]  (5.683 ns)

 <State 9>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [59]  (5.683 ns)

 <State 10>: 5.683ns
The critical path consists of the following:
	'call' operation ('ModRes', Crypto.cpp:100) to 'MOD_PLAINTEXTMODULUS' [65]  (5.683 ns)

 <State 11>: 3.254ns
The critical path consists of the following:
	'store' operation ('store_ln101', Crypto.cpp:101) of variable 'ModRes', Crypto.cpp:100 on array 'DataRAM_11' [87]  (3.254 ns)

 <State 12>: 3.254ns
The critical path consists of the following:
	'store' operation ('store_ln101', Crypto.cpp:101) of variable 'ModRes', Crypto.cpp:100 on array 'DataRAM_2' [83]  (3.254 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
