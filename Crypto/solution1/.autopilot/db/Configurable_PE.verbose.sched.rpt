

================================================================
== Vitis HLS Report for 'Configurable_PE'
================================================================
* Date:           Fri Apr  4 16:47:37 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        Crypto
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1761-3


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  6.00 ns|  3.803 ns|     1.62 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       13|       13|  78.000 ns|  78.000 ns|    1|    1|      yes|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 14


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 1
  Pipeline-0 : II = 1, D = 14, States = { 1 4 5 6 7 8 9 10 11 12 13 2 3 14 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 4 
2 --> 3 
3 --> 14 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 2 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.56>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%op_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %op" [HLS/src/Arithmetic.cpp:187]   --->   Operation 15 'read' 'op_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%MOD_INDEX_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %MOD_INDEX" [HLS/src/Arithmetic.cpp:187]   --->   Operation 16 'read' 'MOD_INDEX_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input2_val" [HLS/src/Arithmetic.cpp:187]   --->   Operation 17 'read' 'input2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%input1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input1_val" [HLS/src/Arithmetic.cpp:187]   --->   Operation 18 'read' 'input1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.20ns)   --->   "%switch_ln190 = switch i2 %op_read, void %if.then, i2 2, void %if.then5, i2 1, void %if.then2" [HLS/src/Arithmetic.cpp:190]   --->   Operation 19 'switch' 'switch_ln190' <Predicate = true> <Delay = 1.20>
ST_1 : Operation 20 [14/14] (2.36ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 20 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 2.36> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 11> <Delay = 3.80>
ST_2 : Operation 21 [1/1] (1.57ns)   --->   "%res1_temp_6 = sub i32 %input1_val_read, i32 %input2_val_read" [HLS/src/Arithmetic.cpp:86->HLS/src/Arithmetic.cpp:194]   --->   Operation 21 'sub' 'res1_temp_6' <Predicate = (op_read == 1)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %res1_temp_6, i32 31" [HLS/src/Arithmetic.cpp:88->HLS/src/Arithmetic.cpp:194]   --->   Operation 22 'bitselect' 'tmp' <Predicate = (op_read == 1)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.83ns)   --->   "%br_ln88 = br i1 %tmp, void %if.end59, void %if.then.i116" [HLS/src/Arithmetic.cpp:88->HLS/src/Arithmetic.cpp:194]   --->   Operation 23 'br' 'br_ln88' <Predicate = (op_read == 1)> <Delay = 0.83>
ST_2 : Operation 24 [3/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 24 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 25 [1/1] (1.57ns)   --->   "%res1_temp = add i32 %input2_val_read, i32 %input1_val_read" [HLS/src/Arithmetic.cpp:73->HLS/src/Arithmetic.cpp:191]   --->   Operation 25 'add' 'res1_temp' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 12> <Delay = 3.80>
ST_3 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node res1_temp_7)   --->   "%zext_ln89_cast = sparsemux i31 @_ssdm_op_SparseMux.ap_auto.3i31.i31.i2, i2 0, i31 1073750017, i2 1, i31 1073815553, i2 2, i31 1073872897, i31 0, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:89->HLS/src/Arithmetic.cpp:194]   --->   Operation 26 'sparsemux' 'zext_ln89_cast' <Predicate = (op_read == 1 & tmp)> <Delay = 0.00> <CoreInst = "SparseMux">   --->   Core 132 'SparseMux' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node res1_temp_7)   --->   "%zext_ln89 = zext i31 %zext_ln89_cast" [HLS/src/Arithmetic.cpp:89->HLS/src/Arithmetic.cpp:194]   --->   Operation 27 'zext' 'zext_ln89' <Predicate = (op_read == 1 & tmp)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.57ns) (out node of the LUT)   --->   "%res1_temp_7 = add i32 %zext_ln89, i32 %res1_temp_6" [HLS/src/Arithmetic.cpp:89->HLS/src/Arithmetic.cpp:194]   --->   Operation 28 'add' 'res1_temp_7' <Predicate = (op_read == 1 & tmp)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.83ns)   --->   "%br_ln90 = br void %if.end59" [HLS/src/Arithmetic.cpp:90->HLS/src/Arithmetic.cpp:194]   --->   Operation 29 'br' 'br_ln90' <Predicate = (op_read == 1 & tmp)> <Delay = 0.83>
ST_3 : Operation 30 [2/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 30 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 31 [1/1] (0.80ns)   --->   "%zext_ln76_cast = sparsemux i31 @_ssdm_op_SparseMux.ap_auto.3i31.i31.i2, i2 0, i31 1073750017, i2 1, i31 1073815553, i2 2, i31 1073872897, i31 0, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:76->HLS/src/Arithmetic.cpp:191]   --->   Operation 31 'sparsemux' 'zext_ln76_cast' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 0.80> <CoreInst = "SparseMux">   --->   Core 132 'SparseMux' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i31 %zext_ln76_cast" [HLS/src/Arithmetic.cpp:76->HLS/src/Arithmetic.cpp:191]   --->   Operation 32 'zext' 'zext_ln76' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (1.57ns)   --->   "%icmp_ln76 = icmp_slt  i32 %res1_temp, i32 %zext_ln76" [HLS/src/Arithmetic.cpp:76->HLS/src/Arithmetic.cpp:191]   --->   Operation 33 'icmp' 'icmp_ln76' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 1.57> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (1.57ns)   --->   "%res1_temp_3 = sub i32 %res1_temp, i32 %zext_ln76" [HLS/src/Arithmetic.cpp:77->HLS/src/Arithmetic.cpp:191]   --->   Operation 34 'sub' 'res1_temp_3' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.45ns)   --->   "%res1_temp_4 = select i1 %icmp_ln76, i32 %res1_temp, i32 %res1_temp_3" [HLS/src/Arithmetic.cpp:76->HLS/src/Arithmetic.cpp:191]   --->   Operation 35 'select' 'res1_temp_4' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.83ns)   --->   "%br_ln193 = br void %if.end59" [HLS/src/Arithmetic.cpp:193]   --->   Operation 36 'br' 'br_ln193' <Predicate = (op_read != 2 & op_read != 1)> <Delay = 0.83>

State 4 <SV = 1> <Delay = 3.80>
ST_4 : Operation 37 [13/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 37 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 2> <Delay = 3.80>
ST_5 : Operation 38 [12/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 38 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 3> <Delay = 3.80>
ST_6 : Operation 39 [11/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 39 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 4> <Delay = 3.80>
ST_7 : Operation 40 [10/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 40 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 5> <Delay = 3.80>
ST_8 : Operation 41 [9/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 41 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 6> <Delay = 3.80>
ST_9 : Operation 42 [8/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 42 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 7> <Delay = 3.80>
ST_10 : Operation 43 [7/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 43 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 8> <Delay = 3.80>
ST_11 : Operation 44 [6/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 44 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 9> <Delay = 3.80>
ST_12 : Operation 45 [5/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 45 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 10> <Delay = 3.80>
ST_13 : Operation 46 [4/14] (3.80ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 46 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 3.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 3.01>
ST_14 : Operation 47 [1/14] (2.17ns)   --->   "%res1_temp_5 = call i32 @MUL_MOD.3, i32 %input1_val_read, i32 %input2_val_read, i2 %MOD_INDEX_read" [HLS/src/Arithmetic.cpp:197]   --->   Operation 47 'call' 'res1_temp_5' <Predicate = (op_read == 2)> <Delay = 2.17> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 48 [1/1] (0.83ns)   --->   "%br_ln0 = br void %if.end59"   --->   Operation 48 'br' 'br_ln0' <Predicate = (op_read == 2)> <Delay = 0.83>
ST_14 : Operation 49 [1/1] (0.00ns)   --->   "%res1_2 = phi i32 %res1_temp_4, void %if.then, i32 %res1_temp_5, void %if.then5, i32 %res1_temp_7, void %if.then.i116, i32 %res1_temp_6, void %if.then2"   --->   Operation 49 'phi' 'res1_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 50 [1/1] (0.00ns)   --->   "%ret_ln215 = ret i32 %res1_2" [HLS/src/Arithmetic.cpp:215]   --->   Operation 50 'ret' 'ret_ln215' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.000ns, clock uncertainty: 1.620ns.

 <State 1>: 3.568ns
The critical path consists of the following:
	wire read operation ('op_read', HLS/src/Arithmetic.cpp:187) on port 'op' (HLS/src/Arithmetic.cpp:187) [5]  (0.000 ns)
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (2.360 ns)
	blocking operation 1.20841 ns on control path)

 <State 2>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 3>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 4>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 5>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 6>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 7>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 8>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 9>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 10>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 11>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 12>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 13>: 3.803ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (3.803 ns)

 <State 14>: 3.012ns
The critical path consists of the following:
	'call' operation 32 bit ('res1_temp', HLS/src/Arithmetic.cpp:197) to 'MUL_MOD.3' [20]  (2.177 ns)
	multiplexor before 'phi' operation 32 bit ('res1_temp') with incoming values : ('res1_temp', HLS/src/Arithmetic.cpp:86->HLS/src/Arithmetic.cpp:194) ('res1_temp', HLS/src/Arithmetic.cpp:89->HLS/src/Arithmetic.cpp:194) ('res1_temp', HLS/src/Arithmetic.cpp:197) ('res1_temp', HLS/src/Arithmetic.cpp:76->HLS/src/Arithmetic.cpp:191) [31]  (0.835 ns)
	'phi' operation 32 bit ('res1_temp') with incoming values : ('res1_temp', HLS/src/Arithmetic.cpp:86->HLS/src/Arithmetic.cpp:194) ('res1_temp', HLS/src/Arithmetic.cpp:89->HLS/src/Arithmetic.cpp:194) ('res1_temp', HLS/src/Arithmetic.cpp:197) ('res1_temp', HLS/src/Arithmetic.cpp:76->HLS/src/Arithmetic.cpp:191) [31]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
