// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto_MOD_PLAINTEXTMODULUS (
        ap_clk,
        ap_rst,
        input_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] input_val;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [31:0] input_val_read_reg_315;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] res_mult_shift_part_reg_320;
reg   [14:0] trunc_ln7_reg_326;
wire   [16:0] add_ln30_fu_235_p2;
reg   [16:0] add_ln30_reg_332;
wire   [47:0] res_shift_fu_241_p2;
reg   [47:0] res_shift_reg_337;
wire   [48:0] sub_ln78_fu_261_p2;
reg   [48:0] sub_ln78_reg_342;
wire   [31:0] trunc_ln80_fu_267_p1;
reg   [31:0] trunc_ln80_reg_348;
reg   [31:0] trunc_ln80_reg_348_pp0_iter3_reg;
reg   [0:0] tmp_reg_354;
wire   [31:0] add_ln81_fu_305_p2;
reg   [31:0] add_ln81_reg_359;
wire    ap_block_pp0_stage0;
wire   [15:0] tmp_1_fu_68_p4;
wire   [16:0] res_mult_high_fu_78_p3;
wire   [18:0] shl_ln22_1_fu_98_p4;
wire   [31:0] shl_ln_fu_90_p3;
wire   [31:0] zext_ln22_fu_108_p1;
wire   [19:0] zext_ln22_1_fu_112_p1;
wire   [19:0] zext_ln71_fu_86_p1;
wire   [31:0] temp1_fu_116_p2;
wire   [32:0] sum1_fu_128_p3;
wire   [19:0] temp2_fu_122_p2;
wire   [35:0] sum2_fu_140_p3;
wire  signed [47:0] sext_ln28_fu_148_p1;
wire   [17:0] trunc_ln32_fu_160_p1;
wire   [48:0] zext_ln28_7_fu_152_p1;
wire   [48:0] zext_ln28_fu_136_p1;
wire   [33:0] trunc_ln_fu_164_p3;
wire   [33:0] zext_ln32_fu_156_p1;
wire   [33:0] add_ln72_fu_178_p2;
wire   [48:0] res_mult_shift_fu_172_p2;
wire   [32:0] res_mult_fu_204_p3;
wire   [31:0] zext_ln17_fu_215_p1;
wire   [46:0] sum1_5_fu_218_p3;
wire   [16:0] zext_ln30_fu_229_p1;
wire   [16:0] zext_ln30_11_fu_232_p1;
wire   [47:0] zext_ln69_fu_211_p1;
wire   [47:0] zext_ln28_8_fu_225_p1;
wire   [32:0] sum2_5_fu_247_p3;
wire  signed [48:0] sext_ln78_fu_258_p1;
wire   [48:0] zext_ln28_9_fu_254_p1;
wire   [48:0] add_ln79_fu_271_p2;
wire   [48:0] add_ln80_fu_276_p2;
wire   [0:0] tmp_5_fu_289_p3;
wire   [31:0] select_ln81_fu_297_p3;
wire   [31:0] select_ln81_1_fu_310_p3;
reg    ap_ce_reg;
reg   [31:0] input_val_int_reg;
reg   [31:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln30_reg_332 <= add_ln30_fu_235_p2;
        add_ln81_reg_359 <= add_ln81_fu_305_p2;
        input_val_read_reg_315 <= input_val_int_reg;
        res_mult_shift_part_reg_320 <= {{add_ln72_fu_178_p2[33:18]}};
        res_shift_reg_337 <= res_shift_fu_241_p2;
        sub_ln78_reg_342 <= sub_ln78_fu_261_p2;
        tmp_reg_354 <= add_ln79_fu_271_p2[32'd48];
        trunc_ln7_reg_326 <= {{res_mult_shift_fu_172_p2[48:34]}};
        trunc_ln80_reg_348 <= trunc_ln80_fu_267_p1;
        trunc_ln80_reg_348_pp0_iter3_reg <= trunc_ln80_reg_348;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln81_1_fu_310_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        input_val_int_reg <= input_val;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln81_1_fu_310_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln30_fu_235_p2 = (zext_ln30_fu_229_p1 + zext_ln30_11_fu_232_p1);

assign add_ln72_fu_178_p2 = (trunc_ln_fu_164_p3 + zext_ln32_fu_156_p1);

assign add_ln79_fu_271_p2 = ($signed(sub_ln78_reg_342) + $signed(49'd562949953355775));

assign add_ln80_fu_276_p2 = ($signed(sub_ln78_reg_342) + $signed(49'd562949953290238));

assign add_ln81_fu_305_p2 = (trunc_ln80_reg_348 + select_ln81_fu_297_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign res_mult_fu_204_p3 = {{1'd0}, {input_val_read_reg_315}};

assign res_mult_high_fu_78_p3 = {{1'd0}, {tmp_1_fu_68_p4}};

assign res_mult_shift_fu_172_p2 = (zext_ln28_7_fu_152_p1 + zext_ln28_fu_136_p1);

assign res_shift_fu_241_p2 = (zext_ln69_fu_211_p1 - zext_ln28_8_fu_225_p1);

assign select_ln81_1_fu_310_p3 = ((tmp_reg_354[0:0] == 1'b1) ? trunc_ln80_reg_348_pp0_iter3_reg : add_ln81_reg_359);

assign select_ln81_fu_297_p3 = ((tmp_5_fu_289_p3[0:0] == 1'b1) ? 32'd4294901759 : 32'd4294836222);

assign sext_ln28_fu_148_p1 = $signed(sum2_fu_140_p3);

assign sext_ln78_fu_258_p1 = $signed(res_shift_reg_337);

assign shl_ln22_1_fu_98_p4 = {{{{1'd0}, {tmp_1_fu_68_p4}}}, {2'd0}};

assign shl_ln_fu_90_p3 = {{tmp_1_fu_68_p4}, {16'd0}};

assign sub_ln78_fu_261_p2 = ($signed(sext_ln78_fu_258_p1) - $signed(zext_ln28_9_fu_254_p1));

assign sum1_5_fu_218_p3 = {{trunc_ln7_reg_326}, {zext_ln17_fu_215_p1}};

assign sum1_fu_128_p3 = {{1'd0}, {temp1_fu_116_p2}};

assign sum2_5_fu_247_p3 = {{add_ln30_reg_332}, {16'd0}};

assign sum2_fu_140_p3 = {{temp2_fu_122_p2}, {16'd0}};

assign temp1_fu_116_p2 = (shl_ln_fu_90_p3 - zext_ln22_fu_108_p1);

assign temp2_fu_122_p2 = (zext_ln22_1_fu_112_p1 - zext_ln71_fu_86_p1);

assign tmp_1_fu_68_p4 = {{input_val_int_reg[31:16]}};

assign tmp_5_fu_289_p3 = add_ln80_fu_276_p2[32'd48];

assign trunc_ln32_fu_160_p1 = temp2_fu_122_p2[17:0];

assign trunc_ln80_fu_267_p1 = sub_ln78_fu_261_p2[31:0];

assign trunc_ln_fu_164_p3 = {{trunc_ln32_fu_160_p1}, {16'd0}};

assign zext_ln17_fu_215_p1 = res_mult_shift_part_reg_320;

assign zext_ln22_1_fu_112_p1 = shl_ln22_1_fu_98_p4;

assign zext_ln22_fu_108_p1 = shl_ln22_1_fu_98_p4;

assign zext_ln28_7_fu_152_p1 = $unsigned(sext_ln28_fu_148_p1);

assign zext_ln28_8_fu_225_p1 = sum1_5_fu_218_p3;

assign zext_ln28_9_fu_254_p1 = sum2_5_fu_247_p3;

assign zext_ln28_fu_136_p1 = sum1_fu_128_p3;

assign zext_ln30_11_fu_232_p1 = trunc_ln7_reg_326;

assign zext_ln30_fu_229_p1 = res_mult_shift_part_reg_320;

assign zext_ln32_fu_156_p1 = sum1_fu_128_p3;

assign zext_ln69_fu_211_p1 = res_mult_fu_204_p3;

assign zext_ln71_fu_86_p1 = res_mult_high_fu_78_p3;

endmodule //Crypto_MOD_PLAINTEXTMODULUS
