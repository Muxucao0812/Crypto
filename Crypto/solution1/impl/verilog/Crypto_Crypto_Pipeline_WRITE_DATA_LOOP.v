// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto_Crypto_Pipeline_WRITE_DATA_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        DataRAM_address0,
        DataRAM_ce0,
        DataRAM_we0,
        DataRAM_d0,
        DataRAM_1_address0,
        DataRAM_1_ce0,
        DataRAM_1_we0,
        DataRAM_1_d0,
        DataRAM_2_address0,
        DataRAM_2_ce0,
        DataRAM_2_we0,
        DataRAM_2_d0,
        DataRAM_3_address0,
        DataRAM_3_ce0,
        DataRAM_3_we0,
        DataRAM_3_d0,
        DataRAM_4_address0,
        DataRAM_4_ce0,
        DataRAM_4_we0,
        DataRAM_4_d0,
        DataRAM_5_address0,
        DataRAM_5_ce0,
        DataRAM_5_we0,
        DataRAM_5_d0,
        DataRAM_6_address0,
        DataRAM_6_ce0,
        DataRAM_6_we0,
        DataRAM_6_d0,
        DataRAM_7_address0,
        DataRAM_7_ce0,
        DataRAM_7_we0,
        DataRAM_7_d0,
        DataRAM_8_address0,
        DataRAM_8_ce0,
        DataRAM_8_we0,
        DataRAM_8_d0,
        DataRAM_9_address0,
        DataRAM_9_ce0,
        DataRAM_9_we0,
        DataRAM_9_d0,
        DataRAM_10_address0,
        DataRAM_10_ce0,
        DataRAM_10_we0,
        DataRAM_10_d0,
        DataRAM_11_address0,
        DataRAM_11_ce0,
        DataRAM_11_we0,
        DataRAM_11_d0,
        DataRAM_12_address0,
        DataRAM_12_ce0,
        DataRAM_12_we0,
        DataRAM_12_d0,
        DataRAM_13_address0,
        DataRAM_13_ce0,
        DataRAM_13_we0,
        DataRAM_13_d0,
        DataRAM_14_address0,
        DataRAM_14_ce0,
        DataRAM_14_we0,
        DataRAM_14_d0,
        DataRAM_15_address0,
        DataRAM_15_ce0,
        DataRAM_15_we0,
        DataRAM_15_d0,
        DataRAM_16_address0,
        DataRAM_16_ce0,
        DataRAM_16_we0,
        DataRAM_16_d0,
        DataRAM_17_address0,
        DataRAM_17_ce0,
        DataRAM_17_we0,
        DataRAM_17_d0,
        DataRAM_18_address0,
        DataRAM_18_ce0,
        DataRAM_18_we0,
        DataRAM_18_d0,
        DataRAM_19_address0,
        DataRAM_19_ce0,
        DataRAM_19_we0,
        DataRAM_19_d0,
        DataRAM_20_address0,
        DataRAM_20_ce0,
        DataRAM_20_we0,
        DataRAM_20_d0,
        DataRAM_21_address0,
        DataRAM_21_ce0,
        DataRAM_21_we0,
        DataRAM_21_d0,
        DataRAM_22_address0,
        DataRAM_22_ce0,
        DataRAM_22_we0,
        DataRAM_22_d0,
        DataRAM_23_address0,
        DataRAM_23_ce0,
        DataRAM_23_we0,
        DataRAM_23_d0,
        DataRAM_24_address0,
        DataRAM_24_ce0,
        DataRAM_24_we0,
        DataRAM_24_d0,
        DataRAM_25_address0,
        DataRAM_25_ce0,
        DataRAM_25_we0,
        DataRAM_25_d0,
        DataRAM_26_address0,
        DataRAM_26_ce0,
        DataRAM_26_we0,
        DataRAM_26_d0,
        DataRAM_27_address0,
        DataRAM_27_ce0,
        DataRAM_27_we0,
        DataRAM_27_d0,
        DataRAM_28_address0,
        DataRAM_28_ce0,
        DataRAM_28_we0,
        DataRAM_28_d0,
        DataRAM_29_address0,
        DataRAM_29_ce0,
        DataRAM_29_we0,
        DataRAM_29_d0,
        DataRAM_30_address0,
        DataRAM_30_ce0,
        DataRAM_30_we0,
        DataRAM_30_d0,
        DataRAM_31_address0,
        DataRAM_31_ce0,
        DataRAM_31_we0,
        DataRAM_31_d0,
        DataIn_address0,
        DataIn_ce0,
        DataIn_q0,
        RAMSel_cast
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] DataRAM_address0;
output   DataRAM_ce0;
output   DataRAM_we0;
output  [31:0] DataRAM_d0;
output  [7:0] DataRAM_1_address0;
output   DataRAM_1_ce0;
output   DataRAM_1_we0;
output  [31:0] DataRAM_1_d0;
output  [7:0] DataRAM_2_address0;
output   DataRAM_2_ce0;
output   DataRAM_2_we0;
output  [31:0] DataRAM_2_d0;
output  [7:0] DataRAM_3_address0;
output   DataRAM_3_ce0;
output   DataRAM_3_we0;
output  [31:0] DataRAM_3_d0;
output  [7:0] DataRAM_4_address0;
output   DataRAM_4_ce0;
output   DataRAM_4_we0;
output  [31:0] DataRAM_4_d0;
output  [7:0] DataRAM_5_address0;
output   DataRAM_5_ce0;
output   DataRAM_5_we0;
output  [31:0] DataRAM_5_d0;
output  [7:0] DataRAM_6_address0;
output   DataRAM_6_ce0;
output   DataRAM_6_we0;
output  [31:0] DataRAM_6_d0;
output  [7:0] DataRAM_7_address0;
output   DataRAM_7_ce0;
output   DataRAM_7_we0;
output  [31:0] DataRAM_7_d0;
output  [7:0] DataRAM_8_address0;
output   DataRAM_8_ce0;
output   DataRAM_8_we0;
output  [31:0] DataRAM_8_d0;
output  [7:0] DataRAM_9_address0;
output   DataRAM_9_ce0;
output   DataRAM_9_we0;
output  [31:0] DataRAM_9_d0;
output  [7:0] DataRAM_10_address0;
output   DataRAM_10_ce0;
output   DataRAM_10_we0;
output  [31:0] DataRAM_10_d0;
output  [7:0] DataRAM_11_address0;
output   DataRAM_11_ce0;
output   DataRAM_11_we0;
output  [31:0] DataRAM_11_d0;
output  [7:0] DataRAM_12_address0;
output   DataRAM_12_ce0;
output   DataRAM_12_we0;
output  [31:0] DataRAM_12_d0;
output  [7:0] DataRAM_13_address0;
output   DataRAM_13_ce0;
output   DataRAM_13_we0;
output  [31:0] DataRAM_13_d0;
output  [7:0] DataRAM_14_address0;
output   DataRAM_14_ce0;
output   DataRAM_14_we0;
output  [31:0] DataRAM_14_d0;
output  [7:0] DataRAM_15_address0;
output   DataRAM_15_ce0;
output   DataRAM_15_we0;
output  [31:0] DataRAM_15_d0;
output  [7:0] DataRAM_16_address0;
output   DataRAM_16_ce0;
output   DataRAM_16_we0;
output  [31:0] DataRAM_16_d0;
output  [7:0] DataRAM_17_address0;
output   DataRAM_17_ce0;
output   DataRAM_17_we0;
output  [31:0] DataRAM_17_d0;
output  [7:0] DataRAM_18_address0;
output   DataRAM_18_ce0;
output   DataRAM_18_we0;
output  [31:0] DataRAM_18_d0;
output  [7:0] DataRAM_19_address0;
output   DataRAM_19_ce0;
output   DataRAM_19_we0;
output  [31:0] DataRAM_19_d0;
output  [7:0] DataRAM_20_address0;
output   DataRAM_20_ce0;
output   DataRAM_20_we0;
output  [31:0] DataRAM_20_d0;
output  [7:0] DataRAM_21_address0;
output   DataRAM_21_ce0;
output   DataRAM_21_we0;
output  [31:0] DataRAM_21_d0;
output  [7:0] DataRAM_22_address0;
output   DataRAM_22_ce0;
output   DataRAM_22_we0;
output  [31:0] DataRAM_22_d0;
output  [7:0] DataRAM_23_address0;
output   DataRAM_23_ce0;
output   DataRAM_23_we0;
output  [31:0] DataRAM_23_d0;
output  [7:0] DataRAM_24_address0;
output   DataRAM_24_ce0;
output   DataRAM_24_we0;
output  [31:0] DataRAM_24_d0;
output  [7:0] DataRAM_25_address0;
output   DataRAM_25_ce0;
output   DataRAM_25_we0;
output  [31:0] DataRAM_25_d0;
output  [7:0] DataRAM_26_address0;
output   DataRAM_26_ce0;
output   DataRAM_26_we0;
output  [31:0] DataRAM_26_d0;
output  [7:0] DataRAM_27_address0;
output   DataRAM_27_ce0;
output   DataRAM_27_we0;
output  [31:0] DataRAM_27_d0;
output  [7:0] DataRAM_28_address0;
output   DataRAM_28_ce0;
output   DataRAM_28_we0;
output  [31:0] DataRAM_28_d0;
output  [7:0] DataRAM_29_address0;
output   DataRAM_29_ce0;
output   DataRAM_29_we0;
output  [31:0] DataRAM_29_d0;
output  [7:0] DataRAM_30_address0;
output   DataRAM_30_ce0;
output   DataRAM_30_we0;
output  [31:0] DataRAM_30_d0;
output  [7:0] DataRAM_31_address0;
output   DataRAM_31_ce0;
output   DataRAM_31_we0;
output  [31:0] DataRAM_31_d0;
output  [11:0] DataIn_address0;
output   DataIn_ce0;
input  [31:0] DataIn_q0;
input  [0:0] RAMSel_cast;

reg ap_idle;
reg DataRAM_ce0;
reg DataRAM_we0;
reg DataRAM_1_ce0;
reg DataRAM_1_we0;
reg DataRAM_2_ce0;
reg DataRAM_2_we0;
reg DataRAM_3_ce0;
reg DataRAM_3_we0;
reg DataRAM_4_ce0;
reg DataRAM_4_we0;
reg DataRAM_5_ce0;
reg DataRAM_5_we0;
reg DataRAM_6_ce0;
reg DataRAM_6_we0;
reg DataRAM_7_ce0;
reg DataRAM_7_we0;
reg DataRAM_8_ce0;
reg DataRAM_8_we0;
reg DataRAM_9_ce0;
reg DataRAM_9_we0;
reg DataRAM_10_ce0;
reg DataRAM_10_we0;
reg DataRAM_11_ce0;
reg DataRAM_11_we0;
reg DataRAM_12_ce0;
reg DataRAM_12_we0;
reg DataRAM_13_ce0;
reg DataRAM_13_we0;
reg DataRAM_14_ce0;
reg DataRAM_14_we0;
reg DataRAM_15_ce0;
reg DataRAM_15_we0;
reg DataRAM_16_ce0;
reg DataRAM_16_we0;
reg DataRAM_17_ce0;
reg DataRAM_17_we0;
reg DataRAM_18_ce0;
reg DataRAM_18_we0;
reg DataRAM_19_ce0;
reg DataRAM_19_we0;
reg DataRAM_20_ce0;
reg DataRAM_20_we0;
reg DataRAM_21_ce0;
reg DataRAM_21_we0;
reg DataRAM_22_ce0;
reg DataRAM_22_we0;
reg DataRAM_23_ce0;
reg DataRAM_23_we0;
reg DataRAM_24_ce0;
reg DataRAM_24_we0;
reg DataRAM_25_ce0;
reg DataRAM_25_we0;
reg DataRAM_26_ce0;
reg DataRAM_26_we0;
reg DataRAM_27_ce0;
reg DataRAM_27_we0;
reg DataRAM_28_ce0;
reg DataRAM_28_we0;
reg DataRAM_29_ce0;
reg DataRAM_29_we0;
reg DataRAM_30_ce0;
reg DataRAM_30_we0;
reg DataRAM_31_ce0;
reg DataRAM_31_we0;
reg DataIn_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln50_fu_593_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] RAMSel_cast_read_reg_671;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] empty_fu_610_p1;
reg   [3:0] empty_reg_679;
reg   [3:0] empty_reg_679_pp0_iter1_reg;
reg   [7:0] lshr_ln_reg_683;
reg   [7:0] lshr_ln_reg_683_pp0_iter1_reg;
reg   [31:0] DataIn_load_reg_693;
wire   [63:0] i_cast68_fu_605_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln50_fu_629_p1;
reg   [12:0] i_fu_146;
wire   [12:0] add_ln50_fu_599_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Crypto_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln50_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_146 <= add_ln50_fu_599_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_146 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataIn_load_reg_693 <= DataIn_q0;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        empty_reg_679_pp0_iter1_reg <= empty_reg_679;
        lshr_ln_reg_683_pp0_iter1_reg <= lshr_ln_reg_683;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln50_fu_593_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_679 <= empty_fu_610_p1;
        lshr_ln_reg_683 <= {{ap_sig_allocacmp_i_2[11:4]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataIn_ce0 = 1'b1;
    end else begin
        DataIn_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_10_ce0 = 1'b1;
    end else begin
        DataRAM_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd10) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_10_we0 = 1'b1;
    end else begin
        DataRAM_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_11_ce0 = 1'b1;
    end else begin
        DataRAM_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd11) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_11_we0 = 1'b1;
    end else begin
        DataRAM_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_12_ce0 = 1'b1;
    end else begin
        DataRAM_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd12) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_12_we0 = 1'b1;
    end else begin
        DataRAM_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_13_ce0 = 1'b1;
    end else begin
        DataRAM_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd13) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_13_we0 = 1'b1;
    end else begin
        DataRAM_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_14_ce0 = 1'b1;
    end else begin
        DataRAM_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd14) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_14_we0 = 1'b1;
    end else begin
        DataRAM_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_15_ce0 = 1'b1;
    end else begin
        DataRAM_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd15) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_15_we0 = 1'b1;
    end else begin
        DataRAM_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_16_ce0 = 1'b1;
    end else begin
        DataRAM_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_16_we0 = 1'b1;
    end else begin
        DataRAM_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_17_ce0 = 1'b1;
    end else begin
        DataRAM_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_17_we0 = 1'b1;
    end else begin
        DataRAM_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_18_ce0 = 1'b1;
    end else begin
        DataRAM_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_18_we0 = 1'b1;
    end else begin
        DataRAM_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_19_ce0 = 1'b1;
    end else begin
        DataRAM_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_19_we0 = 1'b1;
    end else begin
        DataRAM_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_1_ce0 = 1'b1;
    end else begin
        DataRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd1) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_1_we0 = 1'b1;
    end else begin
        DataRAM_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_20_ce0 = 1'b1;
    end else begin
        DataRAM_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_20_we0 = 1'b1;
    end else begin
        DataRAM_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_21_ce0 = 1'b1;
    end else begin
        DataRAM_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_21_we0 = 1'b1;
    end else begin
        DataRAM_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_22_ce0 = 1'b1;
    end else begin
        DataRAM_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd6) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_22_we0 = 1'b1;
    end else begin
        DataRAM_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_23_ce0 = 1'b1;
    end else begin
        DataRAM_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd7) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_23_we0 = 1'b1;
    end else begin
        DataRAM_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_24_ce0 = 1'b1;
    end else begin
        DataRAM_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_24_we0 = 1'b1;
    end else begin
        DataRAM_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_25_ce0 = 1'b1;
    end else begin
        DataRAM_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_25_we0 = 1'b1;
    end else begin
        DataRAM_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_26_ce0 = 1'b1;
    end else begin
        DataRAM_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd10) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_26_we0 = 1'b1;
    end else begin
        DataRAM_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_27_ce0 = 1'b1;
    end else begin
        DataRAM_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd11) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_27_we0 = 1'b1;
    end else begin
        DataRAM_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_28_ce0 = 1'b1;
    end else begin
        DataRAM_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_28_we0 = 1'b1;
    end else begin
        DataRAM_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_29_ce0 = 1'b1;
    end else begin
        DataRAM_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd13) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_29_we0 = 1'b1;
    end else begin
        DataRAM_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_2_ce0 = 1'b1;
    end else begin
        DataRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd2) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_2_we0 = 1'b1;
    end else begin
        DataRAM_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_30_ce0 = 1'b1;
    end else begin
        DataRAM_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd14) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_30_we0 = 1'b1;
    end else begin
        DataRAM_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_31_ce0 = 1'b1;
    end else begin
        DataRAM_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == RAMSel_cast_read_reg_671) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd15) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_31_we0 = 1'b1;
    end else begin
        DataRAM_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_3_ce0 = 1'b1;
    end else begin
        DataRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd3) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_3_we0 = 1'b1;
    end else begin
        DataRAM_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_4_ce0 = 1'b1;
    end else begin
        DataRAM_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd4) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_4_we0 = 1'b1;
    end else begin
        DataRAM_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_5_ce0 = 1'b1;
    end else begin
        DataRAM_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd5) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_5_we0 = 1'b1;
    end else begin
        DataRAM_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_6_ce0 = 1'b1;
    end else begin
        DataRAM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd6) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_6_we0 = 1'b1;
    end else begin
        DataRAM_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_7_ce0 = 1'b1;
    end else begin
        DataRAM_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd7) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_7_we0 = 1'b1;
    end else begin
        DataRAM_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_8_ce0 = 1'b1;
    end else begin
        DataRAM_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd8) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_8_we0 = 1'b1;
    end else begin
        DataRAM_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_9_ce0 = 1'b1;
    end else begin
        DataRAM_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd9) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_9_we0 = 1'b1;
    end else begin
        DataRAM_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_ce0 = 1'b1;
    end else begin
        DataRAM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_679_pp0_iter1_reg == 4'd0) & (1'd0 == RAMSel_cast_read_reg_671) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_we0 = 1'b1;
    end else begin
        DataRAM_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln50_fu_593_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_146;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DataIn_address0 = i_cast68_fu_605_p1;

assign DataRAM_10_address0 = zext_ln50_fu_629_p1;

assign DataRAM_10_d0 = DataIn_load_reg_693;

assign DataRAM_11_address0 = zext_ln50_fu_629_p1;

assign DataRAM_11_d0 = DataIn_load_reg_693;

assign DataRAM_12_address0 = zext_ln50_fu_629_p1;

assign DataRAM_12_d0 = DataIn_load_reg_693;

assign DataRAM_13_address0 = zext_ln50_fu_629_p1;

assign DataRAM_13_d0 = DataIn_load_reg_693;

assign DataRAM_14_address0 = zext_ln50_fu_629_p1;

assign DataRAM_14_d0 = DataIn_load_reg_693;

assign DataRAM_15_address0 = zext_ln50_fu_629_p1;

assign DataRAM_15_d0 = DataIn_load_reg_693;

assign DataRAM_16_address0 = zext_ln50_fu_629_p1;

assign DataRAM_16_d0 = DataIn_load_reg_693;

assign DataRAM_17_address0 = zext_ln50_fu_629_p1;

assign DataRAM_17_d0 = DataIn_load_reg_693;

assign DataRAM_18_address0 = zext_ln50_fu_629_p1;

assign DataRAM_18_d0 = DataIn_load_reg_693;

assign DataRAM_19_address0 = zext_ln50_fu_629_p1;

assign DataRAM_19_d0 = DataIn_load_reg_693;

assign DataRAM_1_address0 = zext_ln50_fu_629_p1;

assign DataRAM_1_d0 = DataIn_load_reg_693;

assign DataRAM_20_address0 = zext_ln50_fu_629_p1;

assign DataRAM_20_d0 = DataIn_load_reg_693;

assign DataRAM_21_address0 = zext_ln50_fu_629_p1;

assign DataRAM_21_d0 = DataIn_load_reg_693;

assign DataRAM_22_address0 = zext_ln50_fu_629_p1;

assign DataRAM_22_d0 = DataIn_load_reg_693;

assign DataRAM_23_address0 = zext_ln50_fu_629_p1;

assign DataRAM_23_d0 = DataIn_load_reg_693;

assign DataRAM_24_address0 = zext_ln50_fu_629_p1;

assign DataRAM_24_d0 = DataIn_load_reg_693;

assign DataRAM_25_address0 = zext_ln50_fu_629_p1;

assign DataRAM_25_d0 = DataIn_load_reg_693;

assign DataRAM_26_address0 = zext_ln50_fu_629_p1;

assign DataRAM_26_d0 = DataIn_load_reg_693;

assign DataRAM_27_address0 = zext_ln50_fu_629_p1;

assign DataRAM_27_d0 = DataIn_load_reg_693;

assign DataRAM_28_address0 = zext_ln50_fu_629_p1;

assign DataRAM_28_d0 = DataIn_load_reg_693;

assign DataRAM_29_address0 = zext_ln50_fu_629_p1;

assign DataRAM_29_d0 = DataIn_load_reg_693;

assign DataRAM_2_address0 = zext_ln50_fu_629_p1;

assign DataRAM_2_d0 = DataIn_load_reg_693;

assign DataRAM_30_address0 = zext_ln50_fu_629_p1;

assign DataRAM_30_d0 = DataIn_load_reg_693;

assign DataRAM_31_address0 = zext_ln50_fu_629_p1;

assign DataRAM_31_d0 = DataIn_load_reg_693;

assign DataRAM_3_address0 = zext_ln50_fu_629_p1;

assign DataRAM_3_d0 = DataIn_load_reg_693;

assign DataRAM_4_address0 = zext_ln50_fu_629_p1;

assign DataRAM_4_d0 = DataIn_load_reg_693;

assign DataRAM_5_address0 = zext_ln50_fu_629_p1;

assign DataRAM_5_d0 = DataIn_load_reg_693;

assign DataRAM_6_address0 = zext_ln50_fu_629_p1;

assign DataRAM_6_d0 = DataIn_load_reg_693;

assign DataRAM_7_address0 = zext_ln50_fu_629_p1;

assign DataRAM_7_d0 = DataIn_load_reg_693;

assign DataRAM_8_address0 = zext_ln50_fu_629_p1;

assign DataRAM_8_d0 = DataIn_load_reg_693;

assign DataRAM_9_address0 = zext_ln50_fu_629_p1;

assign DataRAM_9_d0 = DataIn_load_reg_693;

assign DataRAM_address0 = zext_ln50_fu_629_p1;

assign DataRAM_d0 = DataIn_load_reg_693;

assign RAMSel_cast_read_reg_671 = RAMSel_cast;

assign add_ln50_fu_599_p2 = (ap_sig_allocacmp_i_2 + 13'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_610_p1 = ap_sig_allocacmp_i_2[3:0];

assign i_cast68_fu_605_p1 = ap_sig_allocacmp_i_2;

assign icmp_ln50_fu_593_p2 = ((ap_sig_allocacmp_i_2 == 13'd4096) ? 1'b1 : 1'b0);

assign zext_ln50_fu_629_p1 = lshr_ln_reg_683_pp0_iter1_reg;

endmodule //Crypto_Crypto_Pipeline_WRITE_DATA_LOOP
