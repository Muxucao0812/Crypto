// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_Crypto1_Pipeline_READ_DATA_ROW_LOOP_READ_DATA_COL_LOOP4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        DataOutStream_TREADY,
        empty,
        DataRAM_address0,
        DataRAM_ce0,
        DataRAM_q0,
        DataRAM_1_address0,
        DataRAM_1_ce0,
        DataRAM_1_q0,
        DataRAM_2_address0,
        DataRAM_2_ce0,
        DataRAM_2_q0,
        DataRAM_3_address0,
        DataRAM_3_ce0,
        DataRAM_3_q0,
        DataRAM_4_address0,
        DataRAM_4_ce0,
        DataRAM_4_q0,
        DataRAM_5_address0,
        DataRAM_5_ce0,
        DataRAM_5_q0,
        DataRAM_6_address0,
        DataRAM_6_ce0,
        DataRAM_6_q0,
        DataRAM_7_address0,
        DataRAM_7_ce0,
        DataRAM_7_q0,
        DataOutStream_TDATA,
        DataOutStream_TVALID,
        DataOutStream_TKEEP,
        DataOutStream_TSTRB,
        DataOutStream_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   DataOutStream_TREADY;
input  [9:0] empty;
output  [12:0] DataRAM_address0;
output   DataRAM_ce0;
input  [31:0] DataRAM_q0;
output  [12:0] DataRAM_1_address0;
output   DataRAM_1_ce0;
input  [31:0] DataRAM_1_q0;
output  [12:0] DataRAM_2_address0;
output   DataRAM_2_ce0;
input  [31:0] DataRAM_2_q0;
output  [12:0] DataRAM_3_address0;
output   DataRAM_3_ce0;
input  [31:0] DataRAM_3_q0;
output  [12:0] DataRAM_4_address0;
output   DataRAM_4_ce0;
input  [31:0] DataRAM_4_q0;
output  [12:0] DataRAM_5_address0;
output   DataRAM_5_ce0;
input  [31:0] DataRAM_5_q0;
output  [12:0] DataRAM_6_address0;
output   DataRAM_6_ce0;
input  [31:0] DataRAM_6_q0;
output  [12:0] DataRAM_7_address0;
output   DataRAM_7_ce0;
input  [31:0] DataRAM_7_q0;
output  [31:0] DataOutStream_TDATA;
output   DataOutStream_TVALID;
output  [3:0] DataOutStream_TKEEP;
output  [3:0] DataOutStream_TSTRB;
output  [0:0] DataOutStream_TLAST;

reg ap_idle;
reg DataOutStream_TVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln96_fu_266_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    DataOutStream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] select_ln96_1_fu_309_p3;
reg   [6:0] select_ln96_1_reg_468;
wire   [2:0] trunc_ln98_fu_323_p1;
reg   [2:0] trunc_ln98_reg_473;
reg   [2:0] trunc_ln98_8_reg_478;
reg   [2:0] trunc_ln98_8_reg_478_pp0_iter2_reg;
wire   [0:0] DataStreamReg_last_fu_343_p2;
reg   [0:0] DataStreamReg_last_reg_483;
reg   [0:0] DataStreamReg_last_reg_483_pp0_iter2_reg;
wire   [63:0] zext_ln99_1_fu_386_p1;
reg   [6:0] k_fu_108;
wire   [6:0] add_ln98_fu_349_p2;
wire    ap_loop_init;
reg   [6:0] j_fu_112;
reg   [12:0] indvar_flatten54_fu_116;
wire   [12:0] add_ln96_fu_272_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten54_load;
wire   [31:0] DataStreamReg_data_fu_398_p19;
reg    ap_block_pp0_stage0_01001;
reg    DataRAM_ce0_local;
reg    DataRAM_1_ce0_local;
reg    DataRAM_2_ce0_local;
reg    DataRAM_3_ce0_local;
reg    DataRAM_4_ce0_local;
reg    DataRAM_5_ce0_local;
reg    DataRAM_6_ce0_local;
reg    DataRAM_7_ce0_local;
wire   [0:0] icmp_ln98_fu_295_p2;
wire   [6:0] add_ln96_1_fu_289_p2;
wire   [6:0] select_ln96_fu_301_p3;
wire   [0:0] cmp51_2_fu_317_p2;
wire   [0:0] icmp_ln102_fu_337_p2;
wire   [9:0] add_ln99_fu_365_p2;
wire   [9:0] zext_ln99_fu_370_p1;
wire   [9:0] add_ln99_1_fu_373_p2;
wire   [12:0] tmp_s_fu_379_p3;
wire   [31:0] DataStreamReg_data_fu_398_p17;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [2:0] DataStreamReg_data_fu_398_p1;
wire   [2:0] DataStreamReg_data_fu_398_p3;
wire   [2:0] DataStreamReg_data_fu_398_p5;
wire   [2:0] DataStreamReg_data_fu_398_p7;
wire  signed [2:0] DataStreamReg_data_fu_398_p9;
wire  signed [2:0] DataStreamReg_data_fu_398_p11;
wire  signed [2:0] DataStreamReg_data_fu_398_p13;
wire  signed [2:0] DataStreamReg_data_fu_398_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 k_fu_108 = 7'd0;
#0 j_fu_112 = 7'd0;
#0 indvar_flatten54_fu_116 = 13'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) Crypto1_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U2397(
    .din0(DataRAM_q0),
    .din1(DataRAM_1_q0),
    .din2(DataRAM_2_q0),
    .din3(DataRAM_3_q0),
    .din4(DataRAM_4_q0),
    .din5(DataRAM_5_q0),
    .din6(DataRAM_6_q0),
    .din7(DataRAM_7_q0),
    .def(DataStreamReg_data_fu_398_p17),
    .sel(trunc_ln98_8_reg_478_pp0_iter2_reg),
    .dout(DataStreamReg_data_fu_398_p19)
);

Crypto1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten54_fu_116 <= add_ln96_fu_272_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten54_fu_116 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_112 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_112 <= select_ln96_1_fu_309_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_108 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            k_fu_108 <= add_ln98_fu_349_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataStreamReg_last_reg_483 <= DataStreamReg_last_fu_343_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln96_1_reg_468 <= select_ln96_1_fu_309_p3;
        trunc_ln98_8_reg_478 <= {{select_ln96_fu_301_p3[5:3]}};
        trunc_ln98_reg_473 <= trunc_ln98_fu_323_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        DataStreamReg_last_reg_483_pp0_iter2_reg <= DataStreamReg_last_reg_483;
        trunc_ln98_8_reg_478_pp0_iter2_reg <= trunc_ln98_8_reg_478;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DataOutStream_TDATA_blk_n = DataOutStream_TREADY;
    end else begin
        DataOutStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DataOutStream_TVALID = 1'b1;
    end else begin
        DataOutStream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_1_ce0_local = 1'b1;
    end else begin
        DataRAM_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_2_ce0_local = 1'b1;
    end else begin
        DataRAM_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_3_ce0_local = 1'b1;
    end else begin
        DataRAM_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_4_ce0_local = 1'b1;
    end else begin
        DataRAM_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_5_ce0_local = 1'b1;
    end else begin
        DataRAM_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_6_ce0_local = 1'b1;
    end else begin
        DataRAM_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_7_ce0_local = 1'b1;
    end else begin
        DataRAM_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        DataRAM_ce0_local = 1'b1;
    end else begin
        DataRAM_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln96_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten54_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten54_load = indvar_flatten54_fu_116;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DataOutStream_TDATA = DataStreamReg_data_fu_398_p19;

assign DataOutStream_TKEEP = 4'd15;

assign DataOutStream_TLAST = DataStreamReg_last_reg_483_pp0_iter2_reg;

assign DataOutStream_TSTRB = 4'd15;

assign DataRAM_1_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_1_ce0 = DataRAM_1_ce0_local;

assign DataRAM_2_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_2_ce0 = DataRAM_2_ce0_local;

assign DataRAM_3_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_3_ce0 = DataRAM_3_ce0_local;

assign DataRAM_4_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_4_ce0 = DataRAM_4_ce0_local;

assign DataRAM_5_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_5_ce0 = DataRAM_5_ce0_local;

assign DataRAM_6_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_6_ce0 = DataRAM_6_ce0_local;

assign DataRAM_7_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_7_ce0 = DataRAM_7_ce0_local;

assign DataRAM_address0 = zext_ln99_1_fu_386_p1;

assign DataRAM_ce0 = DataRAM_ce0_local;

assign DataStreamReg_data_fu_398_p17 = 'bx;

assign DataStreamReg_last_fu_343_p2 = (icmp_ln102_fu_337_p2 & cmp51_2_fu_317_p2);

assign add_ln96_1_fu_289_p2 = (j_fu_112 + 7'd1);

assign add_ln96_fu_272_p2 = (ap_sig_allocacmp_indvar_flatten54_load + 13'd1);

assign add_ln98_fu_349_p2 = (select_ln96_fu_301_p3 + 7'd1);

assign add_ln99_1_fu_373_p2 = (add_ln99_fu_365_p2 + zext_ln99_fu_370_p1);

assign add_ln99_fu_365_p2 = (empty + 10'd128);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b0 == DataOutStream_TREADY) | (1'b1 == ap_block_state4_pp0_stage0_iter3)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b0 == DataOutStream_TREADY) | (1'b1 == ap_block_state4_pp0_stage0_iter3)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (1'b0 == DataOutStream_TREADY);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign cmp51_2_fu_317_p2 = ((select_ln96_1_fu_309_p3 == 7'd63) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_337_p2 = ((select_ln96_fu_301_p3 == 7'd63) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_266_p2 = ((ap_sig_allocacmp_indvar_flatten54_load == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_295_p2 = ((k_fu_108 == 7'd64) ? 1'b1 : 1'b0);

assign select_ln96_1_fu_309_p3 = ((icmp_ln98_fu_295_p2[0:0] == 1'b1) ? add_ln96_1_fu_289_p2 : j_fu_112);

assign select_ln96_fu_301_p3 = ((icmp_ln98_fu_295_p2[0:0] == 1'b1) ? 7'd0 : k_fu_108);

assign tmp_s_fu_379_p3 = {{add_ln99_1_fu_373_p2}, {trunc_ln98_reg_473}};

assign trunc_ln98_fu_323_p1 = select_ln96_fu_301_p3[2:0];

assign zext_ln99_1_fu_386_p1 = tmp_s_fu_379_p3;

assign zext_ln99_fu_370_p1 = select_ln96_1_reg_468;

endmodule //Crypto1_Crypto1_Pipeline_READ_DATA_ROW_LOOP_READ_DATA_COL_LOOP4
