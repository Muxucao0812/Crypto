// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto_Crypto_Pipeline_MUL_INV_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        DataRAM_9_address0,
        DataRAM_9_ce0,
        DataRAM_9_we0,
        DataRAM_9_d0,
        DataRAM_9_address1,
        DataRAM_9_ce1,
        DataRAM_9_q1,
        DataRAM_6_address0,
        DataRAM_6_ce0,
        DataRAM_6_we0,
        DataRAM_6_d0,
        DataRAM_6_address1,
        DataRAM_6_ce1,
        DataRAM_6_q1,
        DataRAM_3_address0,
        DataRAM_3_ce0,
        DataRAM_3_we0,
        DataRAM_3_d0,
        DataRAM_3_address1,
        DataRAM_3_ce1,
        DataRAM_3_q1,
        DataRAM_address0,
        DataRAM_ce0,
        DataRAM_we0,
        DataRAM_d0,
        DataRAM_address1,
        DataRAM_ce1,
        DataRAM_q1,
        RAMSel_cast
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] DataRAM_9_address0;
output   DataRAM_9_ce0;
output   DataRAM_9_we0;
output  [31:0] DataRAM_9_d0;
output  [11:0] DataRAM_9_address1;
output   DataRAM_9_ce1;
input  [31:0] DataRAM_9_q1;
output  [11:0] DataRAM_6_address0;
output   DataRAM_6_ce0;
output   DataRAM_6_we0;
output  [31:0] DataRAM_6_d0;
output  [11:0] DataRAM_6_address1;
output   DataRAM_6_ce1;
input  [31:0] DataRAM_6_q1;
output  [11:0] DataRAM_3_address0;
output   DataRAM_3_ce0;
output   DataRAM_3_we0;
output  [31:0] DataRAM_3_d0;
output  [11:0] DataRAM_3_address1;
output   DataRAM_3_ce1;
input  [31:0] DataRAM_3_q1;
output  [11:0] DataRAM_address0;
output   DataRAM_ce0;
output   DataRAM_we0;
output  [31:0] DataRAM_d0;
output  [11:0] DataRAM_address1;
output   DataRAM_ce1;
input  [31:0] DataRAM_q1;
input  [1:0] RAMSel_cast;

reg ap_idle;
reg DataRAM_9_ce0;
reg DataRAM_9_we0;
reg DataRAM_9_ce1;
reg DataRAM_6_ce0;
reg DataRAM_6_we0;
reg DataRAM_6_ce1;
reg DataRAM_3_ce0;
reg DataRAM_3_we0;
reg DataRAM_3_ce1;
reg DataRAM_ce0;
reg DataRAM_we0;
reg DataRAM_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln258_fu_145_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [1:0] RAMSel_cast_read_reg_190;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln258_reg_195;
reg   [0:0] icmp_ln258_reg_195_pp0_iter1_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter2_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter3_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter4_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter5_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter6_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter7_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter8_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter9_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter10_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter11_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter12_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter13_reg;
reg   [0:0] icmp_ln258_reg_195_pp0_iter14_reg;
reg   [11:0] DataRAM_addr_reg_199;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter1_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter2_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter3_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter4_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter5_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter6_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter7_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter8_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter9_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter10_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter11_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter12_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter13_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter14_reg;
reg   [11:0] DataRAM_addr_reg_199_pp0_iter15_reg;
reg   [11:0] DataRAM_3_addr_reg_205;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter1_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter2_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter3_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter4_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter5_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter6_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter7_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter8_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter9_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter10_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter11_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter12_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter13_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter14_reg;
reg   [11:0] DataRAM_3_addr_reg_205_pp0_iter15_reg;
reg   [11:0] DataRAM_6_addr_reg_211;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter1_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter2_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter3_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter4_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter5_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter6_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter7_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter8_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter9_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter10_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter11_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter12_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter13_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter14_reg;
reg   [11:0] DataRAM_6_addr_reg_211_pp0_iter15_reg;
reg   [11:0] DataRAM_9_addr_reg_217;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter1_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter2_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter3_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter4_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter5_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter6_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter7_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter8_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter9_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter10_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter11_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter12_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter13_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter14_reg;
reg   [11:0] DataRAM_9_addr_reg_217_pp0_iter15_reg;
wire   [31:0] MulInvInput_fu_170_p6;
reg   [31:0] MulInvInput_reg_223;
wire   [31:0] grp_MUL_MOD_fu_128_ap_return;
reg   [31:0] MulInvRes_reg_228;
reg    grp_MUL_MOD_fu_128_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call13;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call13;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call13;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call13;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call13;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call13;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call13;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call13;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call13;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call13;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call13;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call13;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call13;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call13;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call13;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call13;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call13;
wire    ap_block_pp0_stage0_11001_ignoreCallOp45;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln258_fu_157_p1;
reg   [12:0] j_fu_50;
wire   [12:0] add_ln258_fu_151_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_j_20;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Crypto_MUL_MOD grp_MUL_MOD_fu_128(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input1_val(MulInvInput_reg_223),
    .input2_val(32'd1073487871),
    .MOD_INDEX(2'd0),
    .ap_return(grp_MUL_MOD_fu_128_ap_return),
    .ap_ce(grp_MUL_MOD_fu_128_ap_ce)
);

Crypto_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U93(
    .din0(DataRAM_q1),
    .din1(DataRAM_3_q1),
    .din2(DataRAM_6_q1),
    .din3(DataRAM_9_q1),
    .din4(RAMSel_cast),
    .dout(MulInvInput_fu_170_p6)
);

Crypto_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln258_fu_145_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_50 <= add_ln258_fu_151_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_50 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_145_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_3_addr_reg_205 <= zext_ln258_fu_157_p1;
        DataRAM_6_addr_reg_211 <= zext_ln258_fu_157_p1;
        DataRAM_9_addr_reg_217 <= zext_ln258_fu_157_p1;
        DataRAM_addr_reg_199 <= zext_ln258_fu_157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        DataRAM_3_addr_reg_205_pp0_iter10_reg <= DataRAM_3_addr_reg_205_pp0_iter9_reg;
        DataRAM_3_addr_reg_205_pp0_iter11_reg <= DataRAM_3_addr_reg_205_pp0_iter10_reg;
        DataRAM_3_addr_reg_205_pp0_iter12_reg <= DataRAM_3_addr_reg_205_pp0_iter11_reg;
        DataRAM_3_addr_reg_205_pp0_iter13_reg <= DataRAM_3_addr_reg_205_pp0_iter12_reg;
        DataRAM_3_addr_reg_205_pp0_iter14_reg <= DataRAM_3_addr_reg_205_pp0_iter13_reg;
        DataRAM_3_addr_reg_205_pp0_iter15_reg <= DataRAM_3_addr_reg_205_pp0_iter14_reg;
        DataRAM_3_addr_reg_205_pp0_iter2_reg <= DataRAM_3_addr_reg_205_pp0_iter1_reg;
        DataRAM_3_addr_reg_205_pp0_iter3_reg <= DataRAM_3_addr_reg_205_pp0_iter2_reg;
        DataRAM_3_addr_reg_205_pp0_iter4_reg <= DataRAM_3_addr_reg_205_pp0_iter3_reg;
        DataRAM_3_addr_reg_205_pp0_iter5_reg <= DataRAM_3_addr_reg_205_pp0_iter4_reg;
        DataRAM_3_addr_reg_205_pp0_iter6_reg <= DataRAM_3_addr_reg_205_pp0_iter5_reg;
        DataRAM_3_addr_reg_205_pp0_iter7_reg <= DataRAM_3_addr_reg_205_pp0_iter6_reg;
        DataRAM_3_addr_reg_205_pp0_iter8_reg <= DataRAM_3_addr_reg_205_pp0_iter7_reg;
        DataRAM_3_addr_reg_205_pp0_iter9_reg <= DataRAM_3_addr_reg_205_pp0_iter8_reg;
        DataRAM_6_addr_reg_211_pp0_iter10_reg <= DataRAM_6_addr_reg_211_pp0_iter9_reg;
        DataRAM_6_addr_reg_211_pp0_iter11_reg <= DataRAM_6_addr_reg_211_pp0_iter10_reg;
        DataRAM_6_addr_reg_211_pp0_iter12_reg <= DataRAM_6_addr_reg_211_pp0_iter11_reg;
        DataRAM_6_addr_reg_211_pp0_iter13_reg <= DataRAM_6_addr_reg_211_pp0_iter12_reg;
        DataRAM_6_addr_reg_211_pp0_iter14_reg <= DataRAM_6_addr_reg_211_pp0_iter13_reg;
        DataRAM_6_addr_reg_211_pp0_iter15_reg <= DataRAM_6_addr_reg_211_pp0_iter14_reg;
        DataRAM_6_addr_reg_211_pp0_iter2_reg <= DataRAM_6_addr_reg_211_pp0_iter1_reg;
        DataRAM_6_addr_reg_211_pp0_iter3_reg <= DataRAM_6_addr_reg_211_pp0_iter2_reg;
        DataRAM_6_addr_reg_211_pp0_iter4_reg <= DataRAM_6_addr_reg_211_pp0_iter3_reg;
        DataRAM_6_addr_reg_211_pp0_iter5_reg <= DataRAM_6_addr_reg_211_pp0_iter4_reg;
        DataRAM_6_addr_reg_211_pp0_iter6_reg <= DataRAM_6_addr_reg_211_pp0_iter5_reg;
        DataRAM_6_addr_reg_211_pp0_iter7_reg <= DataRAM_6_addr_reg_211_pp0_iter6_reg;
        DataRAM_6_addr_reg_211_pp0_iter8_reg <= DataRAM_6_addr_reg_211_pp0_iter7_reg;
        DataRAM_6_addr_reg_211_pp0_iter9_reg <= DataRAM_6_addr_reg_211_pp0_iter8_reg;
        DataRAM_9_addr_reg_217_pp0_iter10_reg <= DataRAM_9_addr_reg_217_pp0_iter9_reg;
        DataRAM_9_addr_reg_217_pp0_iter11_reg <= DataRAM_9_addr_reg_217_pp0_iter10_reg;
        DataRAM_9_addr_reg_217_pp0_iter12_reg <= DataRAM_9_addr_reg_217_pp0_iter11_reg;
        DataRAM_9_addr_reg_217_pp0_iter13_reg <= DataRAM_9_addr_reg_217_pp0_iter12_reg;
        DataRAM_9_addr_reg_217_pp0_iter14_reg <= DataRAM_9_addr_reg_217_pp0_iter13_reg;
        DataRAM_9_addr_reg_217_pp0_iter15_reg <= DataRAM_9_addr_reg_217_pp0_iter14_reg;
        DataRAM_9_addr_reg_217_pp0_iter2_reg <= DataRAM_9_addr_reg_217_pp0_iter1_reg;
        DataRAM_9_addr_reg_217_pp0_iter3_reg <= DataRAM_9_addr_reg_217_pp0_iter2_reg;
        DataRAM_9_addr_reg_217_pp0_iter4_reg <= DataRAM_9_addr_reg_217_pp0_iter3_reg;
        DataRAM_9_addr_reg_217_pp0_iter5_reg <= DataRAM_9_addr_reg_217_pp0_iter4_reg;
        DataRAM_9_addr_reg_217_pp0_iter6_reg <= DataRAM_9_addr_reg_217_pp0_iter5_reg;
        DataRAM_9_addr_reg_217_pp0_iter7_reg <= DataRAM_9_addr_reg_217_pp0_iter6_reg;
        DataRAM_9_addr_reg_217_pp0_iter8_reg <= DataRAM_9_addr_reg_217_pp0_iter7_reg;
        DataRAM_9_addr_reg_217_pp0_iter9_reg <= DataRAM_9_addr_reg_217_pp0_iter8_reg;
        DataRAM_addr_reg_199_pp0_iter10_reg <= DataRAM_addr_reg_199_pp0_iter9_reg;
        DataRAM_addr_reg_199_pp0_iter11_reg <= DataRAM_addr_reg_199_pp0_iter10_reg;
        DataRAM_addr_reg_199_pp0_iter12_reg <= DataRAM_addr_reg_199_pp0_iter11_reg;
        DataRAM_addr_reg_199_pp0_iter13_reg <= DataRAM_addr_reg_199_pp0_iter12_reg;
        DataRAM_addr_reg_199_pp0_iter14_reg <= DataRAM_addr_reg_199_pp0_iter13_reg;
        DataRAM_addr_reg_199_pp0_iter15_reg <= DataRAM_addr_reg_199_pp0_iter14_reg;
        DataRAM_addr_reg_199_pp0_iter2_reg <= DataRAM_addr_reg_199_pp0_iter1_reg;
        DataRAM_addr_reg_199_pp0_iter3_reg <= DataRAM_addr_reg_199_pp0_iter2_reg;
        DataRAM_addr_reg_199_pp0_iter4_reg <= DataRAM_addr_reg_199_pp0_iter3_reg;
        DataRAM_addr_reg_199_pp0_iter5_reg <= DataRAM_addr_reg_199_pp0_iter4_reg;
        DataRAM_addr_reg_199_pp0_iter6_reg <= DataRAM_addr_reg_199_pp0_iter5_reg;
        DataRAM_addr_reg_199_pp0_iter7_reg <= DataRAM_addr_reg_199_pp0_iter6_reg;
        DataRAM_addr_reg_199_pp0_iter8_reg <= DataRAM_addr_reg_199_pp0_iter7_reg;
        DataRAM_addr_reg_199_pp0_iter9_reg <= DataRAM_addr_reg_199_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln258_reg_195_pp0_iter10_reg <= icmp_ln258_reg_195_pp0_iter9_reg;
        icmp_ln258_reg_195_pp0_iter11_reg <= icmp_ln258_reg_195_pp0_iter10_reg;
        icmp_ln258_reg_195_pp0_iter12_reg <= icmp_ln258_reg_195_pp0_iter11_reg;
        icmp_ln258_reg_195_pp0_iter13_reg <= icmp_ln258_reg_195_pp0_iter12_reg;
        icmp_ln258_reg_195_pp0_iter14_reg <= icmp_ln258_reg_195_pp0_iter13_reg;
        icmp_ln258_reg_195_pp0_iter2_reg <= icmp_ln258_reg_195_pp0_iter1_reg;
        icmp_ln258_reg_195_pp0_iter3_reg <= icmp_ln258_reg_195_pp0_iter2_reg;
        icmp_ln258_reg_195_pp0_iter4_reg <= icmp_ln258_reg_195_pp0_iter3_reg;
        icmp_ln258_reg_195_pp0_iter5_reg <= icmp_ln258_reg_195_pp0_iter4_reg;
        icmp_ln258_reg_195_pp0_iter6_reg <= icmp_ln258_reg_195_pp0_iter5_reg;
        icmp_ln258_reg_195_pp0_iter7_reg <= icmp_ln258_reg_195_pp0_iter6_reg;
        icmp_ln258_reg_195_pp0_iter8_reg <= icmp_ln258_reg_195_pp0_iter7_reg;
        icmp_ln258_reg_195_pp0_iter9_reg <= icmp_ln258_reg_195_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_3_addr_reg_205_pp0_iter1_reg <= DataRAM_3_addr_reg_205;
        DataRAM_6_addr_reg_211_pp0_iter1_reg <= DataRAM_6_addr_reg_211;
        DataRAM_9_addr_reg_217_pp0_iter1_reg <= DataRAM_9_addr_reg_217;
        DataRAM_addr_reg_199_pp0_iter1_reg <= DataRAM_addr_reg_199;
        MulInvInput_reg_223 <= MulInvInput_fu_170_p6;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln258_reg_195 <= icmp_ln258_fu_145_p2;
        icmp_ln258_reg_195_pp0_iter1_reg <= icmp_ln258_reg_195;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_195_pp0_iter14_reg == 1'd0))) begin
        MulInvRes_reg_228 <= grp_MUL_MOD_fu_128_ap_return;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        DataRAM_3_ce0 = 1'b1;
    end else begin
        DataRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_3_ce1 = 1'b1;
    end else begin
        DataRAM_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (2'd1 == RAMSel_cast_read_reg_190))) begin
        DataRAM_3_we0 = 1'b1;
    end else begin
        DataRAM_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        DataRAM_6_ce0 = 1'b1;
    end else begin
        DataRAM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_6_ce1 = 1'b1;
    end else begin
        DataRAM_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (2'd2 == RAMSel_cast_read_reg_190))) begin
        DataRAM_6_we0 = 1'b1;
    end else begin
        DataRAM_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        DataRAM_9_ce0 = 1'b1;
    end else begin
        DataRAM_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_9_ce1 = 1'b1;
    end else begin
        DataRAM_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (2'd3 == RAMSel_cast_read_reg_190))) begin
        DataRAM_9_we0 = 1'b1;
    end else begin
        DataRAM_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        DataRAM_ce0 = 1'b1;
    end else begin
        DataRAM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DataRAM_ce1 = 1'b1;
    end else begin
        DataRAM_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (2'd0 == RAMSel_cast_read_reg_190))) begin
        DataRAM_we0 = 1'b1;
    end else begin
        DataRAM_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln258_fu_145_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_20 = 13'd0;
    end else begin
        ap_sig_allocacmp_j_20 = j_fu_50;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp45) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_MUL_MOD_fu_128_ap_ce = 1'b1;
    end else begin
        grp_MUL_MOD_fu_128_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DataRAM_3_address0 = DataRAM_3_addr_reg_205_pp0_iter15_reg;

assign DataRAM_3_address1 = zext_ln258_fu_157_p1;

assign DataRAM_3_d0 = MulInvRes_reg_228;

assign DataRAM_6_address0 = DataRAM_6_addr_reg_211_pp0_iter15_reg;

assign DataRAM_6_address1 = zext_ln258_fu_157_p1;

assign DataRAM_6_d0 = MulInvRes_reg_228;

assign DataRAM_9_address0 = DataRAM_9_addr_reg_217_pp0_iter15_reg;

assign DataRAM_9_address1 = zext_ln258_fu_157_p1;

assign DataRAM_9_d0 = MulInvRes_reg_228;

assign DataRAM_address0 = DataRAM_addr_reg_199_pp0_iter15_reg;

assign DataRAM_address1 = zext_ln258_fu_157_p1;

assign DataRAM_d0 = MulInvRes_reg_228;

assign RAMSel_cast_read_reg_190 = RAMSel_cast;

assign add_ln258_fu_151_p2 = (ap_sig_allocacmp_j_20 + 13'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp45 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln258_fu_145_p2 = ((ap_sig_allocacmp_j_20 == 13'd4096) ? 1'b1 : 1'b0);

assign zext_ln258_fu_157_p1 = ap_sig_allocacmp_j_20;

endmodule //Crypto_Crypto_Pipeline_MUL_INV_LOOP
