// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto_MUL_MOD_1 (
        ap_clk,
        ap_rst,
        input1_val,
        input2_val,
        MOD_INDEX,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [31:0] input1_val;
input  [18:0] input2_val;
input  [1:0] MOD_INDEX;
output  [31:0] ap_return;

reg   [1:0] MOD_INDEX_read_reg_564;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] MOD_INDEX_read_reg_564_pp0_iter1_reg;
reg   [1:0] MOD_INDEX_read_reg_564_pp0_iter2_reg;
reg   [1:0] MOD_INDEX_read_reg_564_pp0_iter3_reg;
reg   [1:0] MOD_INDEX_read_reg_564_pp0_iter4_reg;
reg   [1:0] MOD_INDEX_read_reg_564_pp0_iter5_reg;
reg   [1:0] MOD_INDEX_read_reg_564_pp0_iter6_reg;
wire   [15:0] input2_low_fu_112_p1;
reg   [15:0] input2_low_reg_570;
wire   [15:0] input1_low_fu_116_p1;
reg   [15:0] input1_low_reg_575;
wire   [15:0] input1_high_fu_124_p4;
reg   [15:0] input1_high_reg_585;
wire   [29:0] zext_ln20_fu_152_p1;
wire   [29:0] temp4_fu_156_p2;
reg   [29:0] temp4_reg_595;
reg   [29:0] temp4_reg_595_pp0_iter1_reg;
reg   [29:0] temp4_reg_595_pp0_iter2_reg;
reg   [29:0] temp4_reg_595_pp0_iter3_reg;
wire   [31:0] temp1_fu_171_p2;
reg   [31:0] temp1_reg_600;
reg   [31:0] temp1_reg_600_pp0_iter2_reg;
reg   [31:0] temp1_reg_600_pp0_iter3_reg;
wire   [31:0] temp3_fu_177_p2;
reg   [31:0] temp3_reg_605;
wire   [32:0] grp_fu_548_p3;
reg   [32:0] add_ln30_reg_615;
wire   [15:0] input2_low_1_fu_197_p1;
reg   [15:0] input2_low_1_reg_620;
wire   [62:0] res_mult_fu_222_p2;
reg   [62:0] res_mult_reg_625;
reg   [62:0] res_mult_reg_625_pp0_iter5_reg;
reg   [62:0] res_mult_reg_625_pp0_iter6_reg;
reg   [62:0] res_mult_reg_625_pp0_iter7_reg;
reg   [62:0] res_mult_reg_625_pp0_iter8_reg;
reg   [62:0] res_mult_reg_625_pp0_iter9_reg;
reg   [62:0] res_mult_reg_625_pp0_iter10_reg;
reg   [15:0] input1_low_1_reg_630;
reg   [15:0] input1_high_1_reg_635;
reg   [3:0] input2_high_1_reg_640;
wire   [31:0] temp1_1_fu_274_p2;
reg   [31:0] temp1_1_reg_645;
reg   [31:0] temp1_1_reg_645_pp0_iter6_reg;
wire   [31:0] temp2_1_fu_280_p2;
reg   [31:0] temp2_1_reg_651;
wire   [31:0] temp3_1_fu_286_p2;
reg   [31:0] temp3_1_reg_657;
wire   [31:0] temp4_1_fu_292_p2;
reg   [31:0] temp4_1_reg_663;
reg   [31:0] temp4_1_reg_663_pp0_iter6_reg;
wire   [15:0] trunc_ln29_fu_298_p1;
reg   [15:0] trunc_ln29_reg_668;
wire   [32:0] add_ln30_1_fu_312_p2;
reg   [32:0] add_ln30_1_reg_673;
reg   [15:0] res_mult_shift_part_reg_678;
reg   [15:0] res_mult_shift_part_reg_678_pp0_iter7_reg;
wire   [30:0] mod_fu_348_p5;
reg   [30:0] mod_reg_684;
reg   [30:0] mod_reg_684_pp0_iter8_reg;
reg   [30:0] mod_reg_684_pp0_iter9_reg;
reg   [30:0] mod_reg_684_pp0_iter10_reg;
reg   [30:0] mod_reg_684_pp0_iter11_reg;
wire   [15:0] input2_low_2_fu_359_p1;
reg   [15:0] input2_low_2_reg_690;
wire   [30:0] zext_ln20_2_fu_399_p1;
reg   [30:0] zext_ln20_2_reg_700;
reg   [15:0] trunc_ln4_reg_706;
wire   [31:0] temp1_2_fu_419_p2;
reg   [31:0] temp1_2_reg_712;
reg   [31:0] temp1_2_reg_712_pp0_iter9_reg;
reg   [31:0] temp1_2_reg_712_pp0_iter10_reg;
wire   [31:0] temp3_2_fu_431_p2;
reg   [31:0] temp3_2_reg_717;
wire   [30:0] temp4_2_fu_437_p2;
reg   [30:0] temp4_2_reg_722;
reg   [30:0] temp4_2_reg_722_pp0_iter9_reg;
reg   [30:0] temp4_2_reg_722_pp0_iter10_reg;
wire   [32:0] grp_fu_556_p3;
reg   [32:0] add_ln30_2_reg_732;
wire   [63:0] sub_ln85_fu_475_p2;
reg   [63:0] sub_ln85_reg_737;
wire    ap_block_pp0_stage0;
wire   [2:0] input2_high_fu_138_p4;
wire  signed [13:0] sext_ln20_fu_148_p1;
wire   [13:0] temp4_fu_156_p0;
wire   [15:0] temp4_fu_156_p1;
wire   [15:0] temp1_fu_171_p0;
wire   [31:0] zext_ln19_fu_168_p1;
wire   [15:0] temp1_fu_171_p1;
wire   [15:0] temp3_fu_177_p0;
wire   [15:0] temp3_fu_177_p1;
wire   [19:0] m_fu_186_p5;
wire   [61:0] sum1_fu_201_p3;
wire   [48:0] sum2_fu_211_p3;
wire   [62:0] zext_ln28_fu_207_p1;
wire   [62:0] zext_ln28_1_fu_218_p1;
wire  signed [15:0] sext_ln20_1_fu_267_p1;
wire   [15:0] temp1_1_fu_274_p0;
wire   [31:0] zext_ln17_2_fu_258_p1;
wire   [15:0] temp1_1_fu_274_p1;
wire   [31:0] zext_ln19_1_fu_264_p1;
wire   [15:0] temp2_1_fu_280_p0;
wire   [15:0] temp2_1_fu_280_p1;
wire   [31:0] zext_ln20_1_fu_270_p1;
wire   [15:0] temp3_1_fu_286_p0;
wire   [31:0] zext_ln18_2_fu_261_p1;
wire   [15:0] temp3_1_fu_286_p1;
wire   [15:0] temp4_1_fu_292_p0;
wire   [15:0] temp4_1_fu_292_p1;
wire   [32:0] zext_ln30_2_fu_302_p1;
wire   [32:0] zext_ln30_3_fu_305_p1;
wire   [31:0] add_ln30_3_fu_308_p2;
wire   [47:0] trunc_ln3_fu_324_p3;
wire   [47:0] tmp_fu_318_p3;
wire   [47:0] add_ln74_fu_332_p2;
wire   [48:0] sum2_1_fu_369_p3;
wire   [63:0] zext_ln28_2_fu_376_p1;
wire   [63:0] sum1_1_fu_363_p3;
wire   [14:0] input2_high_2_fu_389_p4;
wire   [63:0] res_mult_shift_fu_380_p2;
wire   [15:0] temp1_2_fu_419_p0;
wire   [15:0] temp1_2_fu_419_p1;
wire   [31:0] zext_ln19_2_fu_416_p1;
wire   [15:0] temp3_2_fu_431_p0;
wire   [15:0] temp3_2_fu_431_p1;
wire   [14:0] temp4_2_fu_437_p0;
wire   [15:0] temp4_2_fu_437_p1;
wire   [62:0] sum1_2_fu_448_p3;
wire   [48:0] sum2_2_fu_458_p3;
wire   [63:0] zext_ln68_fu_445_p1;
wire   [63:0] zext_ln28_3_fu_454_p1;
wire   [63:0] res_shift_fu_469_p2;
wire   [63:0] zext_ln28_4_fu_465_p1;
wire   [63:0] zext_ln89_fu_481_p1;
wire   [31:0] zext_ln90_cast_fu_489_p3;
wire   [63:0] zext_ln90_fu_496_p1;
wire   [63:0] sub_ln89_fu_484_p2;
wire   [63:0] sub_ln90_fu_500_p2;
wire   [0:0] tmp_2_fu_513_p3;
wire   [31:0] trunc_ln92_1_fu_524_p1;
wire   [31:0] trunc_ln92_2_fu_528_p1;
wire   [0:0] tmp_1_fu_505_p3;
wire   [31:0] trunc_ln92_fu_521_p1;
wire   [31:0] select_ln92_fu_532_p3;
wire   [13:0] grp_fu_548_p0;
wire   [15:0] grp_fu_548_p1;
wire   [31:0] grp_fu_548_p2;
wire   [15:0] grp_fu_556_p0;
wire   [14:0] grp_fu_556_p1;
wire   [31:0] grp_fu_556_p2;
reg   [31:0] input1_val_int_reg;
reg   [18:0] input2_val_int_reg;
reg   [1:0] MOD_INDEX_int_reg;
wire   [29:0] grp_fu_548_p10;
wire   [32:0] grp_fu_548_p20;
wire   [30:0] grp_fu_556_p00;
wire   [30:0] grp_fu_556_p10;
wire   [32:0] grp_fu_556_p20;
wire   [31:0] temp1_2_fu_419_p00;
wire   [31:0] temp1_fu_171_p10;
wire   [31:0] temp3_2_fu_431_p10;
wire   [31:0] temp3_fu_177_p10;
wire   [30:0] temp4_2_fu_437_p10;
wire   [29:0] temp4_fu_156_p10;
wire    ap_ce_reg;

Crypto_mul_14ns_16ns_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_14ns_16ns_30_1_1_U36(
    .din0(temp4_fu_156_p0),
    .din1(temp4_fu_156_p1),
    .dout(temp4_fu_156_p2)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U37(
    .din0(temp1_fu_171_p0),
    .din1(temp1_fu_171_p1),
    .dout(temp1_fu_171_p2)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U38(
    .din0(temp3_fu_177_p0),
    .din1(temp3_fu_177_p1),
    .dout(temp3_fu_177_p2)
);

Crypto_mux_3_2_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
mux_3_2_20_1_1_U39(
    .din0(20'd1015804),
    .din1(20'd753680),
    .din2(20'd524347),
    .din3(MOD_INDEX_read_reg_564_pp0_iter3_reg),
    .dout(m_fu_186_p5)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U40(
    .din0(temp1_1_fu_274_p0),
    .din1(temp1_1_fu_274_p1),
    .dout(temp1_1_fu_274_p2)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U41(
    .din0(temp2_1_fu_280_p0),
    .din1(temp2_1_fu_280_p1),
    .dout(temp2_1_fu_280_p2)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U42(
    .din0(temp3_1_fu_286_p0),
    .din1(temp3_1_fu_286_p1),
    .dout(temp3_1_fu_286_p2)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U43(
    .din0(temp4_1_fu_292_p0),
    .din1(temp4_1_fu_292_p1),
    .dout(temp4_1_fu_292_p2)
);

Crypto_mux_3_2_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_3_2_31_1_1_U44(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .din3(MOD_INDEX_read_reg_564_pp0_iter6_reg),
    .dout(mod_fu_348_p5)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U45(
    .din0(temp1_2_fu_419_p0),
    .din1(temp1_2_fu_419_p1),
    .dout(temp1_2_fu_419_p2)
);

Crypto_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_1_U46(
    .din0(temp3_2_fu_431_p0),
    .din1(temp3_2_fu_431_p1),
    .dout(temp3_2_fu_431_p2)
);

Crypto_mul_15ns_16ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_15ns_16ns_31_1_1_U47(
    .din0(temp4_2_fu_437_p0),
    .din1(temp4_2_fu_437_p1),
    .dout(temp4_2_fu_437_p2)
);

Crypto_mac_muladd_14ns_16ns_32ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_14ns_16ns_32ns_33_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_548_p0),
    .din1(grp_fu_548_p1),
    .din2(grp_fu_548_p2),
    .ce(1'b1),
    .dout(grp_fu_548_p3)
);

Crypto_mac_muladd_16ns_15ns_32ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_16ns_15ns_32ns_33_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_556_p0),
    .din1(grp_fu_556_p1),
    .din2(grp_fu_556_p2),
    .ce(1'b1),
    .dout(grp_fu_556_p3)
);

always @ (posedge ap_clk) begin
    MOD_INDEX_int_reg <= MOD_INDEX;
end

always @ (posedge ap_clk) begin
    input1_val_int_reg <= input1_val;
end

always @ (posedge ap_clk) begin
    input2_val_int_reg <= input2_val;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        MOD_INDEX_read_reg_564 <= MOD_INDEX_int_reg;
        MOD_INDEX_read_reg_564_pp0_iter1_reg <= MOD_INDEX_read_reg_564;
        MOD_INDEX_read_reg_564_pp0_iter2_reg <= MOD_INDEX_read_reg_564_pp0_iter1_reg;
        MOD_INDEX_read_reg_564_pp0_iter3_reg <= MOD_INDEX_read_reg_564_pp0_iter2_reg;
        MOD_INDEX_read_reg_564_pp0_iter4_reg <= MOD_INDEX_read_reg_564_pp0_iter3_reg;
        MOD_INDEX_read_reg_564_pp0_iter5_reg <= MOD_INDEX_read_reg_564_pp0_iter4_reg;
        MOD_INDEX_read_reg_564_pp0_iter6_reg <= MOD_INDEX_read_reg_564_pp0_iter5_reg;
        add_ln30_1_reg_673 <= add_ln30_1_fu_312_p2;
        add_ln30_2_reg_732 <= grp_fu_556_p3;
        add_ln30_reg_615 <= grp_fu_548_p3;
        input1_high_1_reg_635 <= {{res_mult_fu_222_p2[61:46]}};
        input1_high_reg_585 <= {{input1_val_int_reg[31:16]}};
        input1_low_1_reg_630 <= {{res_mult_fu_222_p2[45:30]}};
        input1_low_reg_575 <= input1_low_fu_116_p1;
        input2_high_1_reg_640 <= {{m_fu_186_p5[19:16]}};
        input2_low_1_reg_620 <= input2_low_1_fu_197_p1;
        input2_low_2_reg_690 <= input2_low_2_fu_359_p1;
        input2_low_reg_570 <= input2_low_fu_112_p1;
        mod_reg_684 <= mod_fu_348_p5;
        mod_reg_684_pp0_iter10_reg <= mod_reg_684_pp0_iter9_reg;
        mod_reg_684_pp0_iter11_reg <= mod_reg_684_pp0_iter10_reg;
        mod_reg_684_pp0_iter8_reg <= mod_reg_684;
        mod_reg_684_pp0_iter9_reg <= mod_reg_684_pp0_iter8_reg;
        res_mult_reg_625 <= res_mult_fu_222_p2;
        res_mult_reg_625_pp0_iter10_reg <= res_mult_reg_625_pp0_iter9_reg;
        res_mult_reg_625_pp0_iter5_reg <= res_mult_reg_625;
        res_mult_reg_625_pp0_iter6_reg <= res_mult_reg_625_pp0_iter5_reg;
        res_mult_reg_625_pp0_iter7_reg <= res_mult_reg_625_pp0_iter6_reg;
        res_mult_reg_625_pp0_iter8_reg <= res_mult_reg_625_pp0_iter7_reg;
        res_mult_reg_625_pp0_iter9_reg <= res_mult_reg_625_pp0_iter8_reg;
        res_mult_shift_part_reg_678 <= {{add_ln74_fu_332_p2[47:32]}};
        res_mult_shift_part_reg_678_pp0_iter7_reg <= res_mult_shift_part_reg_678;
        sub_ln85_reg_737 <= sub_ln85_fu_475_p2;
        temp1_1_reg_645 <= temp1_1_fu_274_p2;
        temp1_1_reg_645_pp0_iter6_reg <= temp1_1_reg_645;
        temp1_2_reg_712 <= temp1_2_fu_419_p2;
        temp1_2_reg_712_pp0_iter10_reg <= temp1_2_reg_712_pp0_iter9_reg;
        temp1_2_reg_712_pp0_iter9_reg <= temp1_2_reg_712;
        temp1_reg_600 <= temp1_fu_171_p2;
        temp1_reg_600_pp0_iter2_reg <= temp1_reg_600;
        temp1_reg_600_pp0_iter3_reg <= temp1_reg_600_pp0_iter2_reg;
        temp2_1_reg_651 <= temp2_1_fu_280_p2;
        temp3_1_reg_657 <= temp3_1_fu_286_p2;
        temp3_2_reg_717 <= temp3_2_fu_431_p2;
        temp3_reg_605 <= temp3_fu_177_p2;
        temp4_1_reg_663 <= temp4_1_fu_292_p2;
        temp4_1_reg_663_pp0_iter6_reg <= temp4_1_reg_663;
        temp4_2_reg_722 <= temp4_2_fu_437_p2;
        temp4_2_reg_722_pp0_iter10_reg <= temp4_2_reg_722_pp0_iter9_reg;
        temp4_2_reg_722_pp0_iter9_reg <= temp4_2_reg_722;
        temp4_reg_595 <= temp4_fu_156_p2;
        temp4_reg_595_pp0_iter1_reg <= temp4_reg_595;
        temp4_reg_595_pp0_iter2_reg <= temp4_reg_595_pp0_iter1_reg;
        temp4_reg_595_pp0_iter3_reg <= temp4_reg_595_pp0_iter2_reg;
        trunc_ln29_reg_668 <= trunc_ln29_fu_298_p1;
        trunc_ln4_reg_706 <= {{res_mult_shift_fu_380_p2[63:48]}};
        zext_ln20_2_reg_700[14 : 0] <= zext_ln20_2_fu_399_p1[14 : 0];
    end
end

assign add_ln30_1_fu_312_p2 = (zext_ln30_2_fu_302_p1 + zext_ln30_3_fu_305_p1);

assign add_ln30_3_fu_308_p2 = (temp2_1_reg_651 + temp3_1_reg_657);

assign add_ln74_fu_332_p2 = (trunc_ln3_fu_324_p3 + tmp_fu_318_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_return = ((tmp_1_fu_505_p3[0:0] == 1'b1) ? trunc_ln92_fu_521_p1 : select_ln92_fu_532_p3);

assign grp_fu_548_p0 = zext_ln20_fu_152_p1;

assign grp_fu_548_p1 = grp_fu_548_p10;

assign grp_fu_548_p10 = input1_low_fu_116_p1;

assign grp_fu_548_p2 = grp_fu_548_p20;

assign grp_fu_548_p20 = temp3_reg_605;

assign grp_fu_556_p0 = grp_fu_556_p00;

assign grp_fu_556_p00 = res_mult_shift_part_reg_678;

assign grp_fu_556_p1 = grp_fu_556_p10;

assign grp_fu_556_p10 = input2_high_2_fu_389_p4;

assign grp_fu_556_p2 = grp_fu_556_p20;

assign grp_fu_556_p20 = temp3_2_reg_717;

assign input1_high_fu_124_p4 = {{input1_val_int_reg[31:16]}};

assign input1_low_fu_116_p1 = input1_val_int_reg[15:0];

assign input2_high_2_fu_389_p4 = {{mod_fu_348_p5[30:16]}};

assign input2_high_fu_138_p4 = {{input2_val_int_reg[18:16]}};

assign input2_low_1_fu_197_p1 = m_fu_186_p5[15:0];

assign input2_low_2_fu_359_p1 = mod_fu_348_p5[15:0];

assign input2_low_fu_112_p1 = input2_val_int_reg[15:0];

assign res_mult_fu_222_p2 = (zext_ln28_fu_207_p1 + zext_ln28_1_fu_218_p1);

assign res_mult_shift_fu_380_p2 = (zext_ln28_2_fu_376_p1 + sum1_1_fu_363_p3);

assign res_shift_fu_469_p2 = (zext_ln68_fu_445_p1 - zext_ln28_3_fu_454_p1);

assign select_ln92_fu_532_p3 = ((tmp_2_fu_513_p3[0:0] == 1'b1) ? trunc_ln92_1_fu_524_p1 : trunc_ln92_2_fu_528_p1);

assign sext_ln20_1_fu_267_p1 = $signed(input2_high_1_reg_640);

assign sext_ln20_fu_148_p1 = $signed(input2_high_fu_138_p4);

assign sub_ln85_fu_475_p2 = (res_shift_fu_469_p2 - zext_ln28_4_fu_465_p1);

assign sub_ln89_fu_484_p2 = (sub_ln85_reg_737 - zext_ln89_fu_481_p1);

assign sub_ln90_fu_500_p2 = (sub_ln85_reg_737 - zext_ln90_fu_496_p1);

assign sum1_1_fu_363_p3 = {{temp4_1_reg_663_pp0_iter6_reg}, {temp1_1_reg_645_pp0_iter6_reg}};

assign sum1_2_fu_448_p3 = {{temp4_2_reg_722_pp0_iter10_reg}, {temp1_2_reg_712_pp0_iter10_reg}};

assign sum1_fu_201_p3 = {{temp4_reg_595_pp0_iter3_reg}, {temp1_reg_600_pp0_iter3_reg}};

assign sum2_1_fu_369_p3 = {{add_ln30_1_reg_673}, {16'd0}};

assign sum2_2_fu_458_p3 = {{add_ln30_2_reg_732}, {16'd0}};

assign sum2_fu_211_p3 = {{add_ln30_reg_615}, {16'd0}};

assign temp1_1_fu_274_p0 = zext_ln17_2_fu_258_p1;

assign temp1_1_fu_274_p1 = zext_ln19_1_fu_264_p1;

assign temp1_2_fu_419_p0 = temp1_2_fu_419_p00;

assign temp1_2_fu_419_p00 = res_mult_shift_part_reg_678_pp0_iter7_reg;

assign temp1_2_fu_419_p1 = zext_ln19_2_fu_416_p1;

assign temp1_fu_171_p0 = zext_ln19_fu_168_p1;

assign temp1_fu_171_p1 = temp1_fu_171_p10;

assign temp1_fu_171_p10 = input1_low_reg_575;

assign temp2_1_fu_280_p0 = zext_ln17_2_fu_258_p1;

assign temp2_1_fu_280_p1 = zext_ln20_1_fu_270_p1;

assign temp3_1_fu_286_p0 = zext_ln18_2_fu_261_p1;

assign temp3_1_fu_286_p1 = zext_ln19_1_fu_264_p1;

assign temp3_2_fu_431_p0 = zext_ln19_2_fu_416_p1;

assign temp3_2_fu_431_p1 = temp3_2_fu_431_p10;

assign temp3_2_fu_431_p10 = trunc_ln4_reg_706;

assign temp3_fu_177_p0 = zext_ln19_fu_168_p1;

assign temp3_fu_177_p1 = temp3_fu_177_p10;

assign temp3_fu_177_p10 = input1_high_reg_585;

assign temp4_1_fu_292_p0 = zext_ln18_2_fu_261_p1;

assign temp4_1_fu_292_p1 = zext_ln20_1_fu_270_p1;

assign temp4_2_fu_437_p0 = zext_ln20_2_reg_700;

assign temp4_2_fu_437_p1 = temp4_2_fu_437_p10;

assign temp4_2_fu_437_p10 = trunc_ln4_reg_706;

assign temp4_fu_156_p0 = zext_ln20_fu_152_p1;

assign temp4_fu_156_p1 = temp4_fu_156_p10;

assign temp4_fu_156_p10 = input1_high_fu_124_p4;

assign tmp_1_fu_505_p3 = sub_ln89_fu_484_p2[32'd63];

assign tmp_2_fu_513_p3 = sub_ln90_fu_500_p2[32'd63];

assign tmp_fu_318_p3 = {{trunc_ln29_reg_668}, {temp1_1_reg_645}};

assign trunc_ln29_fu_298_p1 = temp4_1_fu_292_p2[15:0];

assign trunc_ln3_fu_324_p3 = {{add_ln30_3_fu_308_p2}, {16'd0}};

assign trunc_ln92_1_fu_524_p1 = sub_ln89_fu_484_p2[31:0];

assign trunc_ln92_2_fu_528_p1 = sub_ln90_fu_500_p2[31:0];

assign trunc_ln92_fu_521_p1 = sub_ln85_reg_737[31:0];

assign zext_ln17_2_fu_258_p1 = input1_low_1_reg_630;

assign zext_ln18_2_fu_261_p1 = input1_high_1_reg_635;

assign zext_ln19_1_fu_264_p1 = input2_low_1_reg_620;

assign zext_ln19_2_fu_416_p1 = input2_low_2_reg_690;

assign zext_ln19_fu_168_p1 = input2_low_reg_570;

assign zext_ln20_1_fu_270_p1 = $unsigned(sext_ln20_1_fu_267_p1);

assign zext_ln20_2_fu_399_p1 = input2_high_2_fu_389_p4;

assign zext_ln20_fu_152_p1 = $unsigned(sext_ln20_fu_148_p1);

assign zext_ln28_1_fu_218_p1 = sum2_fu_211_p3;

assign zext_ln28_2_fu_376_p1 = sum2_1_fu_369_p3;

assign zext_ln28_3_fu_454_p1 = sum1_2_fu_448_p3;

assign zext_ln28_4_fu_465_p1 = sum2_2_fu_458_p3;

assign zext_ln28_fu_207_p1 = sum1_fu_201_p3;

assign zext_ln30_2_fu_302_p1 = temp2_1_reg_651;

assign zext_ln30_3_fu_305_p1 = temp3_1_reg_657;

assign zext_ln68_fu_445_p1 = res_mult_reg_625_pp0_iter10_reg;

assign zext_ln89_fu_481_p1 = mod_reg_684_pp0_iter11_reg;

assign zext_ln90_cast_fu_489_p3 = {{mod_reg_684_pp0_iter11_reg}, {1'd0}};

assign zext_ln90_fu_496_p1 = zext_ln90_cast_fu_489_p3;

always @ (posedge ap_clk) begin
    zext_ln20_2_reg_700[30:15] <= 16'b0000000000000000;
end

endmodule //Crypto_MUL_MOD_1
