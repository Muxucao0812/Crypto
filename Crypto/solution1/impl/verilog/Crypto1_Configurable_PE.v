// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_Configurable_PE (
        ap_clk,
        ap_rst,
        input1_val,
        input2_val,
        MOD_INDEX,
        op,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] input1_val;
input  [31:0] input2_val;
input  [1:0] MOD_INDEX;
input  [1:0] op;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

wire   [1:0] op_read_read_fu_34_p2;
reg   [1:0] op_read_reg_166;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] op_read_reg_166_pp0_iter1_reg;
reg   [1:0] op_read_reg_166_pp0_iter2_reg;
reg   [1:0] op_read_reg_166_pp0_iter3_reg;
reg   [1:0] op_read_reg_166_pp0_iter4_reg;
reg   [1:0] op_read_reg_166_pp0_iter5_reg;
reg   [1:0] op_read_reg_166_pp0_iter6_reg;
reg   [1:0] op_read_reg_166_pp0_iter7_reg;
reg   [1:0] op_read_reg_166_pp0_iter8_reg;
reg   [1:0] op_read_reg_166_pp0_iter9_reg;
reg   [1:0] op_read_reg_166_pp0_iter10_reg;
reg   [1:0] op_read_reg_166_pp0_iter11_reg;
reg   [1:0] op_read_reg_166_pp0_iter12_reg;
reg   [1:0] MOD_INDEX_read_reg_170;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter1_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter2_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter3_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter4_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter5_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter6_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter7_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter8_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter9_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter10_reg;
reg   [1:0] MOD_INDEX_read_reg_170_pp0_iter11_reg;
reg   [31:0] input2_val_read_reg_177;
reg   [31:0] input2_val_read_reg_177_pp0_iter1_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter2_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter3_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter4_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter5_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter6_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter7_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter8_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter9_reg;
reg   [31:0] input2_val_read_reg_177_pp0_iter10_reg;
reg   [31:0] input1_val_read_reg_184;
reg   [31:0] input1_val_read_reg_184_pp0_iter1_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter2_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter3_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter4_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter5_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter6_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter7_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter8_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter9_reg;
reg   [31:0] input1_val_read_reg_184_pp0_iter10_reg;
wire   [31:0] res1_temp_6_fu_82_p2;
reg   [31:0] res1_temp_6_reg_191;
wire   [0:0] tmp_fu_86_p3;
reg   [0:0] tmp_reg_197;
wire   [31:0] res1_temp_fu_94_p2;
reg   [31:0] res1_temp_reg_201;
wire   [31:0] res1_temp_7_fu_121_p2;
wire   [31:0] res1_temp_4_fu_159_p3;
wire   [31:0] grp_MUL_MOD_3_fu_71_ap_return;
reg    grp_MUL_MOD_3_fu_71_ap_ce;
wire    ap_block_pp0_stage0_11001_ignoreCallOp20;
reg   [31:0] ap_phi_mux_res1_2_phi_fu_61_p8;
wire   [31:0] ap_phi_reg_pp0_iter0_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter1_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter2_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter3_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter4_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter5_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter6_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter7_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter8_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter9_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter10_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter11_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter12_res1_2_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter13_res1_2_reg_58;
wire    ap_block_pp0_stage0_ignoreCallOp20;
wire    ap_block_pp0_stage0;
wire   [30:0] zext_ln89_cast_fu_98_p7;
wire   [30:0] zext_ln89_cast_fu_98_p9;
wire   [31:0] zext_ln89_fu_117_p1;
wire   [30:0] zext_ln76_cast_fu_126_p7;
wire   [30:0] zext_ln76_cast_fu_126_p9;
wire   [31:0] zext_ln76_fu_145_p1;
wire   [0:0] icmp_ln76_fu_149_p2;
wire   [31:0] res1_temp_3_fu_154_p2;
reg    ap_ce_reg;
reg   [31:0] input1_val_int_reg;
reg   [31:0] input2_val_int_reg;
reg   [1:0] MOD_INDEX_int_reg;
reg   [1:0] op_int_reg;
reg   [31:0] ap_return_int_reg;
wire   [1:0] zext_ln89_cast_fu_98_p1;
wire   [1:0] zext_ln89_cast_fu_98_p3;
wire  signed [1:0] zext_ln89_cast_fu_98_p5;
wire   [1:0] zext_ln76_cast_fu_126_p1;
wire   [1:0] zext_ln76_cast_fu_126_p3;
wire  signed [1:0] zext_ln76_cast_fu_126_p5;

Crypto1_MUL_MOD_3 grp_MUL_MOD_3_fu_71(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input1_val(input1_val_int_reg),
    .input2_val(input2_val_int_reg),
    .MOD_INDEX(MOD_INDEX_int_reg),
    .ap_return(grp_MUL_MOD_3_fu_71_ap_return),
    .ap_ce(grp_MUL_MOD_3_fu_71_ap_ce)
);

(* dissolve_hierarchy = "yes" *) Crypto1_sparsemux_7_2_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 31 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 31 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 31 ),
    .def_WIDTH( 31 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
sparsemux_7_2_31_1_0_U2262(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .def(zext_ln89_cast_fu_98_p7),
    .sel(MOD_INDEX_read_reg_170_pp0_iter11_reg),
    .dout(zext_ln89_cast_fu_98_p9)
);

(* dissolve_hierarchy = "yes" *) Crypto1_sparsemux_7_2_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 31 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 31 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 31 ),
    .def_WIDTH( 31 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
sparsemux_7_2_31_1_0_U2263(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .def(zext_ln76_cast_fu_126_p7),
    .sel(MOD_INDEX_read_reg_170_pp0_iter11_reg),
    .dout(zext_ln76_cast_fu_126_p9)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if (((tmp_fu_86_p3 == 1'd0) & (op_read_reg_166_pp0_iter10_reg == 2'd1))) begin
            ap_phi_reg_pp0_iter12_res1_2_reg_58 <= res1_temp_6_fu_82_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter12_res1_2_reg_58 <= ap_phi_reg_pp0_iter11_res1_2_reg_58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if (((tmp_reg_197 == 1'd1) & (op_read_reg_166_pp0_iter11_reg == 2'd1))) begin
            ap_phi_reg_pp0_iter13_res1_2_reg_58 <= res1_temp_7_fu_121_p2;
        end else if ((~(op_read_reg_166_pp0_iter11_reg == 2'd1) & ~(op_read_reg_166_pp0_iter11_reg == 2'd2))) begin
            ap_phi_reg_pp0_iter13_res1_2_reg_58 <= res1_temp_4_fu_159_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter13_res1_2_reg_58 <= ap_phi_reg_pp0_iter12_res1_2_reg_58;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        MOD_INDEX_int_reg <= MOD_INDEX;
        input1_val_int_reg <= input1_val;
        input2_val_int_reg <= input2_val;
        op_int_reg <= op;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        MOD_INDEX_read_reg_170 <= MOD_INDEX_int_reg;
        MOD_INDEX_read_reg_170_pp0_iter10_reg <= MOD_INDEX_read_reg_170_pp0_iter9_reg;
        MOD_INDEX_read_reg_170_pp0_iter11_reg <= MOD_INDEX_read_reg_170_pp0_iter10_reg;
        MOD_INDEX_read_reg_170_pp0_iter1_reg <= MOD_INDEX_read_reg_170;
        MOD_INDEX_read_reg_170_pp0_iter2_reg <= MOD_INDEX_read_reg_170_pp0_iter1_reg;
        MOD_INDEX_read_reg_170_pp0_iter3_reg <= MOD_INDEX_read_reg_170_pp0_iter2_reg;
        MOD_INDEX_read_reg_170_pp0_iter4_reg <= MOD_INDEX_read_reg_170_pp0_iter3_reg;
        MOD_INDEX_read_reg_170_pp0_iter5_reg <= MOD_INDEX_read_reg_170_pp0_iter4_reg;
        MOD_INDEX_read_reg_170_pp0_iter6_reg <= MOD_INDEX_read_reg_170_pp0_iter5_reg;
        MOD_INDEX_read_reg_170_pp0_iter7_reg <= MOD_INDEX_read_reg_170_pp0_iter6_reg;
        MOD_INDEX_read_reg_170_pp0_iter8_reg <= MOD_INDEX_read_reg_170_pp0_iter7_reg;
        MOD_INDEX_read_reg_170_pp0_iter9_reg <= MOD_INDEX_read_reg_170_pp0_iter8_reg;
        ap_phi_reg_pp0_iter10_res1_2_reg_58 <= ap_phi_reg_pp0_iter9_res1_2_reg_58;
        ap_phi_reg_pp0_iter11_res1_2_reg_58 <= ap_phi_reg_pp0_iter10_res1_2_reg_58;
        ap_phi_reg_pp0_iter1_res1_2_reg_58 <= ap_phi_reg_pp0_iter0_res1_2_reg_58;
        ap_phi_reg_pp0_iter2_res1_2_reg_58 <= ap_phi_reg_pp0_iter1_res1_2_reg_58;
        ap_phi_reg_pp0_iter3_res1_2_reg_58 <= ap_phi_reg_pp0_iter2_res1_2_reg_58;
        ap_phi_reg_pp0_iter4_res1_2_reg_58 <= ap_phi_reg_pp0_iter3_res1_2_reg_58;
        ap_phi_reg_pp0_iter5_res1_2_reg_58 <= ap_phi_reg_pp0_iter4_res1_2_reg_58;
        ap_phi_reg_pp0_iter6_res1_2_reg_58 <= ap_phi_reg_pp0_iter5_res1_2_reg_58;
        ap_phi_reg_pp0_iter7_res1_2_reg_58 <= ap_phi_reg_pp0_iter6_res1_2_reg_58;
        ap_phi_reg_pp0_iter8_res1_2_reg_58 <= ap_phi_reg_pp0_iter7_res1_2_reg_58;
        ap_phi_reg_pp0_iter9_res1_2_reg_58 <= ap_phi_reg_pp0_iter8_res1_2_reg_58;
        input1_val_read_reg_184 <= input1_val_int_reg;
        input1_val_read_reg_184_pp0_iter10_reg <= input1_val_read_reg_184_pp0_iter9_reg;
        input1_val_read_reg_184_pp0_iter1_reg <= input1_val_read_reg_184;
        input1_val_read_reg_184_pp0_iter2_reg <= input1_val_read_reg_184_pp0_iter1_reg;
        input1_val_read_reg_184_pp0_iter3_reg <= input1_val_read_reg_184_pp0_iter2_reg;
        input1_val_read_reg_184_pp0_iter4_reg <= input1_val_read_reg_184_pp0_iter3_reg;
        input1_val_read_reg_184_pp0_iter5_reg <= input1_val_read_reg_184_pp0_iter4_reg;
        input1_val_read_reg_184_pp0_iter6_reg <= input1_val_read_reg_184_pp0_iter5_reg;
        input1_val_read_reg_184_pp0_iter7_reg <= input1_val_read_reg_184_pp0_iter6_reg;
        input1_val_read_reg_184_pp0_iter8_reg <= input1_val_read_reg_184_pp0_iter7_reg;
        input1_val_read_reg_184_pp0_iter9_reg <= input1_val_read_reg_184_pp0_iter8_reg;
        input2_val_read_reg_177 <= input2_val_int_reg;
        input2_val_read_reg_177_pp0_iter10_reg <= input2_val_read_reg_177_pp0_iter9_reg;
        input2_val_read_reg_177_pp0_iter1_reg <= input2_val_read_reg_177;
        input2_val_read_reg_177_pp0_iter2_reg <= input2_val_read_reg_177_pp0_iter1_reg;
        input2_val_read_reg_177_pp0_iter3_reg <= input2_val_read_reg_177_pp0_iter2_reg;
        input2_val_read_reg_177_pp0_iter4_reg <= input2_val_read_reg_177_pp0_iter3_reg;
        input2_val_read_reg_177_pp0_iter5_reg <= input2_val_read_reg_177_pp0_iter4_reg;
        input2_val_read_reg_177_pp0_iter6_reg <= input2_val_read_reg_177_pp0_iter5_reg;
        input2_val_read_reg_177_pp0_iter7_reg <= input2_val_read_reg_177_pp0_iter6_reg;
        input2_val_read_reg_177_pp0_iter8_reg <= input2_val_read_reg_177_pp0_iter7_reg;
        input2_val_read_reg_177_pp0_iter9_reg <= input2_val_read_reg_177_pp0_iter8_reg;
        op_read_reg_166 <= op_int_reg;
        op_read_reg_166_pp0_iter10_reg <= op_read_reg_166_pp0_iter9_reg;
        op_read_reg_166_pp0_iter11_reg <= op_read_reg_166_pp0_iter10_reg;
        op_read_reg_166_pp0_iter12_reg <= op_read_reg_166_pp0_iter11_reg;
        op_read_reg_166_pp0_iter1_reg <= op_read_reg_166;
        op_read_reg_166_pp0_iter2_reg <= op_read_reg_166_pp0_iter1_reg;
        op_read_reg_166_pp0_iter3_reg <= op_read_reg_166_pp0_iter2_reg;
        op_read_reg_166_pp0_iter4_reg <= op_read_reg_166_pp0_iter3_reg;
        op_read_reg_166_pp0_iter5_reg <= op_read_reg_166_pp0_iter4_reg;
        op_read_reg_166_pp0_iter6_reg <= op_read_reg_166_pp0_iter5_reg;
        op_read_reg_166_pp0_iter7_reg <= op_read_reg_166_pp0_iter6_reg;
        op_read_reg_166_pp0_iter8_reg <= op_read_reg_166_pp0_iter7_reg;
        op_read_reg_166_pp0_iter9_reg <= op_read_reg_166_pp0_iter8_reg;
        res1_temp_6_reg_191 <= res1_temp_6_fu_82_p2;
        res1_temp_reg_201 <= res1_temp_fu_94_p2;
        tmp_reg_197 <= res1_temp_6_fu_82_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= ap_phi_mux_res1_2_phi_fu_61_p8;
    end
end

always @ (*) begin
    if ((op_read_reg_166_pp0_iter12_reg == 2'd2)) begin
        ap_phi_mux_res1_2_phi_fu_61_p8 = grp_MUL_MOD_3_fu_71_ap_return;
    end else begin
        ap_phi_mux_res1_2_phi_fu_61_p8 = ap_phi_reg_pp0_iter13_res1_2_reg_58;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = ap_phi_mux_res1_2_phi_fu_61_p8;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp20) & (1'b1 == ap_ce_reg))) begin
        grp_MUL_MOD_3_fu_71_ap_ce = 1'b1;
    end else begin
        grp_MUL_MOD_3_fu_71_ap_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp20 = ~(1'b1 == 1'b1);

assign ap_phi_reg_pp0_iter0_res1_2_reg_58 = 'bx;

assign icmp_ln76_fu_149_p2 = (($signed(res1_temp_reg_201) < $signed(zext_ln76_fu_145_p1)) ? 1'b1 : 1'b0);

assign op_read_read_fu_34_p2 = op_int_reg;

assign res1_temp_3_fu_154_p2 = (res1_temp_reg_201 - zext_ln76_fu_145_p1);

assign res1_temp_4_fu_159_p3 = ((icmp_ln76_fu_149_p2[0:0] == 1'b1) ? res1_temp_reg_201 : res1_temp_3_fu_154_p2);

assign res1_temp_6_fu_82_p2 = (input1_val_read_reg_184_pp0_iter10_reg - input2_val_read_reg_177_pp0_iter10_reg);

assign res1_temp_7_fu_121_p2 = (zext_ln89_fu_117_p1 + res1_temp_6_reg_191);

assign res1_temp_fu_94_p2 = (input2_val_read_reg_177_pp0_iter10_reg + input1_val_read_reg_184_pp0_iter10_reg);

assign tmp_fu_86_p3 = res1_temp_6_fu_82_p2[32'd31];

assign zext_ln76_cast_fu_126_p7 = 'bx;

assign zext_ln76_fu_145_p1 = zext_ln76_cast_fu_126_p9;

assign zext_ln89_cast_fu_98_p7 = 'bx;

assign zext_ln89_fu_117_p1 = zext_ln89_cast_fu_98_p9;

endmodule //Crypto1_Configurable_PE
