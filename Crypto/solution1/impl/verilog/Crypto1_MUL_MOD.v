// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto1_MUL_MOD (
        ap_clk,
        ap_rst,
        input1_val,
        input2_val,
        MOD_INDEX,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] input1_val;
input  [31:0] input2_val;
input  [1:0] MOD_INDEX;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [1:0] MOD_INDEX_read_reg_616;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter1_reg;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter2_reg;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter3_reg;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter4_reg;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter5_reg;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter6_reg;
reg   [1:0] MOD_INDEX_read_reg_616_pp0_iter7_reg;
wire   [15:0] input2_low_fu_106_p1;
reg   [15:0] input2_low_reg_622;
wire   [15:0] input1_low_fu_110_p1;
reg   [15:0] input1_low_reg_627;
wire   [15:0] input1_high_fu_118_p4;
reg   [15:0] input1_high_reg_632;
wire   [15:0] input2_high_fu_136_p4;
reg   [15:0] input2_high_reg_637;
wire   [31:0] ac_fu_172_p2;
reg   [31:0] ac_reg_647;
reg   [31:0] ac_reg_647_pp0_iter2_reg;
wire   [31:0] bd_fu_178_p2;
reg   [31:0] bd_reg_653;
reg   [31:0] bd_reg_653_pp0_iter2_reg;
wire   [63:0] res_mult_fu_217_p2;
reg   [63:0] res_mult_reg_664;
reg   [63:0] res_mult_reg_664_pp0_iter4_reg;
reg   [63:0] res_mult_reg_664_pp0_iter5_reg;
reg   [63:0] res_mult_reg_664_pp0_iter6_reg;
reg   [63:0] res_mult_reg_664_pp0_iter7_reg;
reg   [63:0] res_mult_reg_664_pp0_iter8_reg;
reg   [63:0] res_mult_reg_664_pp0_iter9_reg;
reg   [63:0] res_mult_reg_664_pp0_iter10_reg;
reg   [15:0] input1_low_3_reg_669;
reg   [15:0] input1_low_3_reg_669_pp0_iter4_reg;
reg   [15:0] input1_high_2_reg_675;
reg   [15:0] input1_high_2_reg_675_pp0_iter4_reg;
wire   [15:0] input2_low_3_fu_262_p1;
reg   [15:0] input2_low_3_reg_681;
wire  signed [15:0] sext_ln47_fu_286_p1;
reg  signed [15:0] sext_ln47_reg_686;
wire   [31:0] ac_3_fu_316_p2;
reg   [31:0] ac_3_reg_696;
reg   [31:0] ac_3_reg_696_pp0_iter6_reg;
wire   [31:0] bd_3_fu_322_p2;
reg   [31:0] bd_3_reg_702;
reg   [31:0] bd_3_reg_702_pp0_iter6_reg;
reg   [15:0] res_mult_shift_part_reg_713;
reg   [15:0] res_mult_shift_part_reg_713_pp0_iter8_reg;
reg   [15:0] tmp_s_reg_719;
reg   [15:0] tmp_s_reg_719_pp0_iter8_reg;
wire   [30:0] mod_fu_387_p9;
reg   [30:0] mod_reg_725;
reg   [30:0] mod_reg_725_pp0_iter9_reg;
reg   [30:0] mod_reg_725_pp0_iter10_reg;
reg   [30:0] mod_reg_725_pp0_iter11_reg;
wire   [15:0] input2_low_4_fu_406_p1;
reg   [15:0] input2_low_4_reg_731;
wire   [14:0] input2_high_4_fu_420_p4;
reg   [14:0] input2_high_4_reg_736;
wire   [30:0] ac_4_fu_456_p2;
reg   [30:0] ac_4_reg_746;
reg   [30:0] ac_4_reg_746_pp0_iter10_reg;
wire   [31:0] bd_4_fu_462_p2;
reg   [31:0] bd_4_reg_752;
reg   [31:0] bd_4_reg_752_pp0_iter10_reg;
wire   [63:0] sub_ln142_fu_510_p2;
reg   [63:0] sub_ln142_reg_763;
wire    ap_block_pp0_stage0;
wire   [16:0] zext_ln45_4_fu_128_p1;
wire   [16:0] zext_ln44_6_fu_114_p1;
wire   [16:0] a_plus_b_fu_150_p2;
wire   [15:0] ac_fu_172_p0;
wire   [15:0] ac_fu_172_p1;
wire   [15:0] bd_fu_178_p0;
wire   [15:0] bd_fu_178_p1;
wire   [32:0] zext_ln63_21_fu_187_p1;
wire   [32:0] zext_ln63_20_fu_184_p1;
wire   [32:0] add_ln63_fu_190_p2;
wire   [34:0] grp_fu_583_p4;
wire   [50:0] sum2_fu_206_p3;
wire   [63:0] sum1_fu_200_p3;
wire  signed [63:0] sext_ln63_fu_213_p1;
wire   [19:0] m_fu_243_p7;
wire   [19:0] m_fu_243_p9;
wire   [3:0] input2_high_3_fu_276_p4;
wire   [16:0] zext_ln47_7_fu_290_p1;
wire   [16:0] zext_ln46_8_fu_272_p1;
wire   [16:0] c_plus_d_3_fu_294_p2;
wire   [15:0] ac_3_fu_316_p0;
wire   [15:0] ac_3_fu_316_p1;
wire   [15:0] bd_3_fu_322_p0;
wire   [15:0] bd_3_fu_322_p1;
wire   [32:0] zext_ln63_27_fu_331_p1;
wire   [32:0] zext_ln63_26_fu_328_p1;
wire   [32:0] add_ln63_3_fu_334_p2;
wire   [34:0] grp_fu_594_p4;
wire   [50:0] sum2_3_fu_350_p3;
wire  signed [63:0] sext_ln63_3_fu_357_p1;
wire   [63:0] sum1_3_fu_344_p3;
wire   [63:0] res_mult_shift_fu_361_p2;
wire   [30:0] mod_fu_387_p7;
wire   [16:0] zext_ln47_5_fu_430_p1;
wire   [16:0] zext_ln46_10_fu_416_p1;
wire   [16:0] c_plus_d_4_fu_434_p2;
wire   [15:0] ac_4_fu_456_p0;
wire   [14:0] ac_4_fu_456_p1;
wire   [15:0] bd_4_fu_462_p0;
wire   [15:0] bd_4_fu_462_p1;
wire   [32:0] zext_ln63_33_fu_471_p1;
wire   [32:0] zext_ln63_32_fu_468_p1;
wire   [32:0] add_ln63_4_fu_474_p2;
wire   [62:0] sum1_4_fu_484_p3;
wire   [34:0] grp_fu_605_p4;
wire   [50:0] sum2_4_fu_494_p3;
wire   [63:0] zext_ln62_fu_490_p1;
wire   [63:0] res_shift_fu_505_p2;
wire  signed [63:0] sext_ln63_4_fu_501_p1;
wire   [63:0] zext_ln146_fu_516_p1;
wire   [31:0] zext_ln147_cast_fu_524_p3;
wire   [63:0] zext_ln147_fu_531_p1;
wire   [63:0] sub_ln146_fu_519_p2;
wire   [63:0] sub_ln147_fu_535_p2;
wire   [0:0] tmp_44_fu_548_p3;
wire   [31:0] trunc_ln149_3_fu_559_p1;
wire   [31:0] trunc_ln149_4_fu_563_p1;
wire   [0:0] tmp_fu_540_p3;
wire   [31:0] trunc_ln149_fu_556_p1;
wire   [31:0] select_ln149_fu_567_p3;
wire   [15:0] grp_fu_583_p0;
wire   [15:0] grp_fu_583_p1;
wire   [16:0] grp_fu_583_p2;
wire   [32:0] grp_fu_583_p3;
wire   [15:0] grp_fu_594_p0;
wire   [15:0] grp_fu_594_p1;
wire   [16:0] grp_fu_594_p2;
wire   [32:0] grp_fu_594_p3;
wire   [15:0] grp_fu_605_p0;
wire   [15:0] grp_fu_605_p1;
wire   [16:0] grp_fu_605_p2;
wire   [32:0] grp_fu_605_p3;
wire   [31:0] select_ln149_2_fu_575_p3;
reg    grp_fu_583_ce;
reg    grp_fu_594_ce;
reg    grp_fu_605_ce;
reg    ap_ce_reg;
reg   [31:0] input1_val_int_reg;
reg   [31:0] input2_val_int_reg;
reg   [1:0] MOD_INDEX_int_reg;
reg   [31:0] ap_return_int_reg;
wire   [31:0] ac_3_fu_316_p00;
wire   [31:0] ac_3_fu_316_p10;
wire   [30:0] ac_4_fu_456_p00;
wire   [30:0] ac_4_fu_456_p10;
wire   [31:0] ac_fu_172_p00;
wire   [31:0] ac_fu_172_p10;
wire   [31:0] bd_3_fu_322_p00;
wire   [31:0] bd_3_fu_322_p10;
wire   [31:0] bd_4_fu_462_p00;
wire   [31:0] bd_4_fu_462_p10;
wire   [31:0] bd_fu_178_p00;
wire   [31:0] bd_fu_178_p10;
wire   [16:0] grp_fu_583_p00;
wire   [16:0] grp_fu_583_p10;
wire   [33:0] grp_fu_583_p20;
wire   [34:0] grp_fu_583_p30;
wire   [16:0] grp_fu_594_p00;
wire   [16:0] grp_fu_594_p10;
wire   [33:0] grp_fu_594_p20;
wire   [34:0] grp_fu_594_p30;
wire   [16:0] grp_fu_605_p00;
wire   [16:0] grp_fu_605_p10;
wire   [33:0] grp_fu_605_p20;
wire   [34:0] grp_fu_605_p30;
wire   [1:0] m_fu_243_p1;
wire   [1:0] m_fu_243_p3;
wire  signed [1:0] m_fu_243_p5;
wire   [1:0] mod_fu_387_p1;
wire   [1:0] mod_fu_387_p3;
wire  signed [1:0] mod_fu_387_p5;

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U258(
    .din0(ac_fu_172_p0),
    .din1(ac_fu_172_p1),
    .dout(ac_fu_172_p2)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U259(
    .din0(bd_fu_178_p0),
    .din1(bd_fu_178_p1),
    .dout(bd_fu_178_p2)
);

(* dissolve_hierarchy = "yes" *) Crypto1_sparsemux_7_2_20_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 20 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 20 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 20 ),
    .def_WIDTH( 20 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
sparsemux_7_2_20_1_0_U260(
    .din0(20'd1015804),
    .din1(20'd753680),
    .din2(20'd524347),
    .def(m_fu_243_p7),
    .sel(MOD_INDEX_read_reg_616_pp0_iter3_reg),
    .dout(m_fu_243_p9)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U261(
    .din0(ac_3_fu_316_p0),
    .din1(ac_3_fu_316_p1),
    .dout(ac_3_fu_316_p2)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U262(
    .din0(bd_3_fu_322_p0),
    .din1(bd_3_fu_322_p1),
    .dout(bd_3_fu_322_p2)
);

(* dissolve_hierarchy = "yes" *) Crypto1_sparsemux_7_2_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 31 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 31 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 31 ),
    .def_WIDTH( 31 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
sparsemux_7_2_31_1_0_U263(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .def(mod_fu_387_p7),
    .sel(MOD_INDEX_read_reg_616_pp0_iter7_reg),
    .dout(mod_fu_387_p9)
);

Crypto1_mul_16ns_15ns_31_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16ns_15ns_31_1_0_U264(
    .din0(ac_4_fu_456_p0),
    .din1(ac_4_fu_456_p1),
    .dout(ac_4_fu_456_p2)
);

Crypto1_mul_16ns_16ns_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_1_0_U265(
    .din0(bd_4_fu_462_p0),
    .din1(bd_4_fu_462_p1),
    .dout(bd_4_fu_462_p2)
);

Crypto1_ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .din3_WIDTH( 33 ),
    .dout_WIDTH( 35 ))
ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0_U266(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_583_p0),
    .din1(grp_fu_583_p1),
    .din2(grp_fu_583_p2),
    .din3(grp_fu_583_p3),
    .ce(grp_fu_583_ce),
    .dout(grp_fu_583_p4)
);

Crypto1_ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .din3_WIDTH( 33 ),
    .dout_WIDTH( 35 ))
ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0_U267(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_594_p0),
    .din1(grp_fu_594_p1),
    .din2(grp_fu_594_p2),
    .din3(grp_fu_594_p3),
    .ce(grp_fu_594_ce),
    .dout(grp_fu_594_p4)
);

Crypto1_ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .din3_WIDTH( 33 ),
    .dout_WIDTH( 35 ))
ama_addmul_sub_16ns_16ns_17ns_33ns_35_4_0_U268(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_605_p0),
    .din1(grp_fu_605_p1),
    .din2(grp_fu_605_p2),
    .din3(grp_fu_605_p3),
    .ce(grp_fu_605_ce),
    .dout(grp_fu_605_p4)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        MOD_INDEX_int_reg <= MOD_INDEX;
        input1_val_int_reg <= input1_val;
        input2_val_int_reg <= input2_val;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MOD_INDEX_read_reg_616 <= MOD_INDEX_int_reg;
        MOD_INDEX_read_reg_616_pp0_iter1_reg <= MOD_INDEX_read_reg_616;
        MOD_INDEX_read_reg_616_pp0_iter2_reg <= MOD_INDEX_read_reg_616_pp0_iter1_reg;
        MOD_INDEX_read_reg_616_pp0_iter3_reg <= MOD_INDEX_read_reg_616_pp0_iter2_reg;
        MOD_INDEX_read_reg_616_pp0_iter4_reg <= MOD_INDEX_read_reg_616_pp0_iter3_reg;
        MOD_INDEX_read_reg_616_pp0_iter5_reg <= MOD_INDEX_read_reg_616_pp0_iter4_reg;
        MOD_INDEX_read_reg_616_pp0_iter6_reg <= MOD_INDEX_read_reg_616_pp0_iter5_reg;
        MOD_INDEX_read_reg_616_pp0_iter7_reg <= MOD_INDEX_read_reg_616_pp0_iter6_reg;
        ac_3_reg_696 <= ac_3_fu_316_p2;
        ac_3_reg_696_pp0_iter6_reg <= ac_3_reg_696;
        ac_4_reg_746 <= ac_4_fu_456_p2;
        ac_4_reg_746_pp0_iter10_reg <= ac_4_reg_746;
        ac_reg_647 <= ac_fu_172_p2;
        ac_reg_647_pp0_iter2_reg <= ac_reg_647;
        bd_3_reg_702 <= bd_3_fu_322_p2;
        bd_3_reg_702_pp0_iter6_reg <= bd_3_reg_702;
        bd_4_reg_752 <= bd_4_fu_462_p2;
        bd_4_reg_752_pp0_iter10_reg <= bd_4_reg_752;
        bd_reg_653 <= bd_fu_178_p2;
        bd_reg_653_pp0_iter2_reg <= bd_reg_653;
        input1_high_2_reg_675 <= {{res_mult_fu_217_p2[61:46]}};
        input1_high_2_reg_675_pp0_iter4_reg <= input1_high_2_reg_675;
        input1_high_reg_632 <= {{input1_val_int_reg[31:16]}};
        input1_low_3_reg_669 <= {{res_mult_fu_217_p2[45:30]}};
        input1_low_3_reg_669_pp0_iter4_reg <= input1_low_3_reg_669;
        input1_low_reg_627 <= input1_low_fu_110_p1;
        input2_high_4_reg_736 <= {{mod_fu_387_p9[30:16]}};
        input2_high_reg_637 <= {{input2_val_int_reg[31:16]}};
        input2_low_3_reg_681 <= input2_low_3_fu_262_p1;
        input2_low_4_reg_731 <= input2_low_4_fu_406_p1;
        input2_low_reg_622 <= input2_low_fu_106_p1;
        mod_reg_725 <= mod_fu_387_p9;
        mod_reg_725_pp0_iter10_reg <= mod_reg_725_pp0_iter9_reg;
        mod_reg_725_pp0_iter11_reg <= mod_reg_725_pp0_iter10_reg;
        mod_reg_725_pp0_iter9_reg <= mod_reg_725;
        res_mult_reg_664 <= res_mult_fu_217_p2;
        res_mult_reg_664_pp0_iter10_reg <= res_mult_reg_664_pp0_iter9_reg;
        res_mult_reg_664_pp0_iter4_reg <= res_mult_reg_664;
        res_mult_reg_664_pp0_iter5_reg <= res_mult_reg_664_pp0_iter4_reg;
        res_mult_reg_664_pp0_iter6_reg <= res_mult_reg_664_pp0_iter5_reg;
        res_mult_reg_664_pp0_iter7_reg <= res_mult_reg_664_pp0_iter6_reg;
        res_mult_reg_664_pp0_iter8_reg <= res_mult_reg_664_pp0_iter7_reg;
        res_mult_reg_664_pp0_iter9_reg <= res_mult_reg_664_pp0_iter8_reg;
        res_mult_shift_part_reg_713 <= {{res_mult_shift_fu_361_p2[47:32]}};
        res_mult_shift_part_reg_713_pp0_iter8_reg <= res_mult_shift_part_reg_713;
        sext_ln47_reg_686 <= sext_ln47_fu_286_p1;
        sub_ln142_reg_763 <= sub_ln142_fu_510_p2;
        tmp_s_reg_719 <= {{res_mult_shift_fu_361_p2[63:48]}};
        tmp_s_reg_719_pp0_iter8_reg <= tmp_s_reg_719;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln149_2_fu_575_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln149_2_fu_575_p3;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_583_ce = 1'b1;
    end else begin
        grp_fu_583_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_594_ce = 1'b1;
    end else begin
        grp_fu_594_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_605_ce = 1'b1;
    end else begin
        grp_fu_605_ce = 1'b0;
    end
end

assign a_plus_b_fu_150_p2 = (zext_ln45_4_fu_128_p1 + zext_ln44_6_fu_114_p1);

assign ac_3_fu_316_p0 = ac_3_fu_316_p00;

assign ac_3_fu_316_p00 = input1_high_2_reg_675_pp0_iter4_reg;

assign ac_3_fu_316_p1 = ac_3_fu_316_p10;

assign ac_3_fu_316_p10 = $unsigned(sext_ln47_reg_686);

assign ac_4_fu_456_p0 = ac_4_fu_456_p00;

assign ac_4_fu_456_p00 = tmp_s_reg_719_pp0_iter8_reg;

assign ac_4_fu_456_p1 = ac_4_fu_456_p10;

assign ac_4_fu_456_p10 = input2_high_4_reg_736;

assign ac_fu_172_p0 = ac_fu_172_p00;

assign ac_fu_172_p00 = input2_high_reg_637;

assign ac_fu_172_p1 = ac_fu_172_p10;

assign ac_fu_172_p10 = input1_high_reg_632;

assign add_ln63_3_fu_334_p2 = (zext_ln63_27_fu_331_p1 + zext_ln63_26_fu_328_p1);

assign add_ln63_4_fu_474_p2 = (zext_ln63_33_fu_471_p1 + zext_ln63_32_fu_468_p1);

assign add_ln63_fu_190_p2 = (zext_ln63_21_fu_187_p1 + zext_ln63_20_fu_184_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign bd_3_fu_322_p0 = bd_3_fu_322_p00;

assign bd_3_fu_322_p00 = input1_low_3_reg_669_pp0_iter4_reg;

assign bd_3_fu_322_p1 = bd_3_fu_322_p10;

assign bd_3_fu_322_p10 = input2_low_3_reg_681;

assign bd_4_fu_462_p0 = bd_4_fu_462_p00;

assign bd_4_fu_462_p00 = res_mult_shift_part_reg_713_pp0_iter8_reg;

assign bd_4_fu_462_p1 = bd_4_fu_462_p10;

assign bd_4_fu_462_p10 = input2_low_4_reg_731;

assign bd_fu_178_p0 = bd_fu_178_p00;

assign bd_fu_178_p00 = input2_low_reg_622;

assign bd_fu_178_p1 = bd_fu_178_p10;

assign bd_fu_178_p10 = input1_low_reg_627;

assign c_plus_d_3_fu_294_p2 = (zext_ln47_7_fu_290_p1 + zext_ln46_8_fu_272_p1);

assign c_plus_d_4_fu_434_p2 = (zext_ln47_5_fu_430_p1 + zext_ln46_10_fu_416_p1);

assign grp_fu_583_p0 = grp_fu_583_p00;

assign grp_fu_583_p00 = input2_high_fu_136_p4;

assign grp_fu_583_p1 = grp_fu_583_p10;

assign grp_fu_583_p10 = input2_low_fu_106_p1;

assign grp_fu_583_p2 = grp_fu_583_p20;

assign grp_fu_583_p20 = a_plus_b_fu_150_p2;

assign grp_fu_583_p3 = grp_fu_583_p30;

assign grp_fu_583_p30 = add_ln63_fu_190_p2;

assign grp_fu_594_p0 = grp_fu_594_p00;

assign grp_fu_594_p00 = input1_high_2_reg_675;

assign grp_fu_594_p1 = grp_fu_594_p10;

assign grp_fu_594_p10 = input1_low_3_reg_669;

assign grp_fu_594_p2 = grp_fu_594_p20;

assign grp_fu_594_p20 = c_plus_d_3_fu_294_p2;

assign grp_fu_594_p3 = grp_fu_594_p30;

assign grp_fu_594_p30 = add_ln63_3_fu_334_p2;

assign grp_fu_605_p0 = grp_fu_605_p00;

assign grp_fu_605_p00 = res_mult_shift_part_reg_713;

assign grp_fu_605_p1 = grp_fu_605_p10;

assign grp_fu_605_p10 = tmp_s_reg_719;

assign grp_fu_605_p2 = grp_fu_605_p20;

assign grp_fu_605_p20 = c_plus_d_4_fu_434_p2;

assign grp_fu_605_p3 = grp_fu_605_p30;

assign grp_fu_605_p30 = add_ln63_4_fu_474_p2;

assign input1_high_fu_118_p4 = {{input1_val_int_reg[31:16]}};

assign input1_low_fu_110_p1 = input1_val_int_reg[15:0];

assign input2_high_3_fu_276_p4 = {{m_fu_243_p9[19:16]}};

assign input2_high_4_fu_420_p4 = {{mod_fu_387_p9[30:16]}};

assign input2_high_fu_136_p4 = {{input2_val_int_reg[31:16]}};

assign input2_low_3_fu_262_p1 = m_fu_243_p9[15:0];

assign input2_low_4_fu_406_p1 = mod_fu_387_p9[15:0];

assign input2_low_fu_106_p1 = input2_val_int_reg[15:0];

assign m_fu_243_p7 = 'bx;

assign mod_fu_387_p7 = 'bx;

assign res_mult_fu_217_p2 = ($signed(sum1_fu_200_p3) + $signed(sext_ln63_fu_213_p1));

assign res_mult_shift_fu_361_p2 = ($signed(sext_ln63_3_fu_357_p1) + $signed(sum1_3_fu_344_p3));

assign res_shift_fu_505_p2 = (res_mult_reg_664_pp0_iter10_reg - zext_ln62_fu_490_p1);

assign select_ln149_2_fu_575_p3 = ((tmp_fu_540_p3[0:0] == 1'b1) ? trunc_ln149_fu_556_p1 : select_ln149_fu_567_p3);

assign select_ln149_fu_567_p3 = ((tmp_44_fu_548_p3[0:0] == 1'b1) ? trunc_ln149_3_fu_559_p1 : trunc_ln149_4_fu_563_p1);

assign sext_ln47_fu_286_p1 = $signed(input2_high_3_fu_276_p4);

assign sext_ln63_3_fu_357_p1 = $signed(sum2_3_fu_350_p3);

assign sext_ln63_4_fu_501_p1 = $signed(sum2_4_fu_494_p3);

assign sext_ln63_fu_213_p1 = $signed(sum2_fu_206_p3);

assign sub_ln142_fu_510_p2 = ($signed(res_shift_fu_505_p2) - $signed(sext_ln63_4_fu_501_p1));

assign sub_ln146_fu_519_p2 = (sub_ln142_reg_763 - zext_ln146_fu_516_p1);

assign sub_ln147_fu_535_p2 = (sub_ln142_reg_763 - zext_ln147_fu_531_p1);

assign sum1_3_fu_344_p3 = {{ac_3_reg_696_pp0_iter6_reg}, {bd_3_reg_702_pp0_iter6_reg}};

assign sum1_4_fu_484_p3 = {{ac_4_reg_746_pp0_iter10_reg}, {bd_4_reg_752_pp0_iter10_reg}};

assign sum1_fu_200_p3 = {{ac_reg_647_pp0_iter2_reg}, {bd_reg_653_pp0_iter2_reg}};

assign sum2_3_fu_350_p3 = {{grp_fu_594_p4}, {16'd0}};

assign sum2_4_fu_494_p3 = {{grp_fu_605_p4}, {16'd0}};

assign sum2_fu_206_p3 = {{grp_fu_583_p4}, {16'd0}};

assign tmp_44_fu_548_p3 = sub_ln147_fu_535_p2[32'd63];

assign tmp_fu_540_p3 = sub_ln146_fu_519_p2[32'd63];

assign trunc_ln149_3_fu_559_p1 = sub_ln146_fu_519_p2[31:0];

assign trunc_ln149_4_fu_563_p1 = sub_ln147_fu_535_p2[31:0];

assign trunc_ln149_fu_556_p1 = sub_ln142_reg_763[31:0];

assign zext_ln146_fu_516_p1 = mod_reg_725_pp0_iter11_reg;

assign zext_ln147_cast_fu_524_p3 = {{mod_reg_725_pp0_iter11_reg}, {1'd0}};

assign zext_ln147_fu_531_p1 = zext_ln147_cast_fu_524_p3;

assign zext_ln44_6_fu_114_p1 = input1_low_fu_110_p1;

assign zext_ln45_4_fu_128_p1 = input1_high_fu_118_p4;

assign zext_ln46_10_fu_416_p1 = input2_low_4_fu_406_p1;

assign zext_ln46_8_fu_272_p1 = input2_low_3_fu_262_p1;

assign zext_ln47_5_fu_430_p1 = input2_high_4_fu_420_p4;

assign zext_ln47_7_fu_290_p1 = $unsigned(sext_ln47_fu_286_p1);

assign zext_ln62_fu_490_p1 = sum1_4_fu_484_p3;

assign zext_ln63_20_fu_184_p1 = ac_reg_647;

assign zext_ln63_21_fu_187_p1 = bd_reg_653;

assign zext_ln63_26_fu_328_p1 = ac_3_reg_696;

assign zext_ln63_27_fu_331_p1 = bd_3_reg_702;

assign zext_ln63_32_fu_468_p1 = ac_4_reg_746;

assign zext_ln63_33_fu_471_p1 = bd_4_reg_752;

endmodule //Crypto1_MUL_MOD
