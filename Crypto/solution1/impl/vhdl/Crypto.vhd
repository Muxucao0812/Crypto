-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    TwiddleAddress : IN STD_LOGIC_VECTOR (31 downto 0);
    TwiddleOutput : OUT STD_LOGIC_VECTOR (31 downto 0);
    TwiddleOutput_ap_vld : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of Crypto is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Crypto_Crypto,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=54.207000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=48,HLS_SYN_DSP=0,HLS_SYN_FF=6242,HLS_SYN_LUT=7866,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (75 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (75 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (75 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (75 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (75 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (75 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (75 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (75 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (75 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (75 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv31_40002001 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000010000000000001";
    constant ap_const_lv31_40012001 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000010010000000000001";
    constant ap_const_lv31_40020001 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000100000000000000001";
    constant ap_const_lv20_F7FFC : STD_LOGIC_VECTOR (19 downto 0) := "11110111111111111100";
    constant ap_const_lv20_B8010 : STD_LOGIC_VECTOR (19 downto 0) := "10111000000000010000";
    constant ap_const_lv20_8003B : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000111011";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_1001 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000001";
    constant ap_const_lv32_1000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_const_lv19_41FFF : STD_LOGIC_VECTOR (18 downto 0) := "1000001111111111111";
    constant ap_const_lv19_51FEF : STD_LOGIC_VECTOR (18 downto 0) := "1010001111111101111";
    constant ap_const_lv19_5FFE1 : STD_LOGIC_VECTOR (18 downto 0) := "1011111111111100001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv52_1 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal DataIn : STD_LOGIC_VECTOR (31 downto 0);
    signal Address : STD_LOGIC_VECTOR (31 downto 0);
    signal DataOutput_ap_vld : STD_LOGIC;
    signal RAMSel : STD_LOGIC_VECTOR (31 downto 0);
    signal TwiddleIn_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal TwiddleIn_ce0 : STD_LOGIC;
    signal TwiddleIn_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP : STD_LOGIC_VECTOR (31 downto 0);
    signal ModIndex : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal data_ram_0_ce0 : STD_LOGIC;
    signal data_ram_0_we0 : STD_LOGIC;
    signal data_ram_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_0_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal data_ram_0_ce1 : STD_LOGIC;
    signal data_ram_0_we1 : STD_LOGIC;
    signal data_ram_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal twiddle_ram_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal twiddle_ram_ce0 : STD_LOGIC;
    signal twiddle_ram_we0 : STD_LOGIC;
    signal twiddle_ram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal reg_535 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal OP_read_reg_1049 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_524_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal reg_545 : STD_LOGIC_VECTOR (19 downto 0);
    signal OP_read_read_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln11_fu_551_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln11_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln11_1_fu_555_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln11_1_reg_1061 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_ram_0_addr_6_reg_1077 : STD_LOGIC_VECTOR (12 downto 0);
    signal data_ram_0_addr_4_reg_1088 : STD_LOGIC_VECTOR (12 downto 0);
    signal data_ram_0_addr_2_reg_1098 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln14_fu_639_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln14_reg_1123 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln8_fu_643_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln8_reg_1128 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_647_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_reg_1140 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_9_fu_660_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_9_reg_1153 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln64_1_fu_673_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln64_1_reg_1159 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln89_1_fu_677_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln89_1_reg_1164 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln64_fu_681_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln64_reg_1169 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln89_fu_685_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln89_reg_1174 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_inv_fu_704_p5 : STD_LOGIC_VECTOR (18 downto 0);
    signal n_inv_reg_1185 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln154_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hf_1_fu_761_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hf_1_reg_1190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal trunc_ln158_fu_769_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln158_reg_1195 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln158_1_fu_773_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln158_1_reg_1200 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln158_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln158_reg_1205 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln158_2_fu_796_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln158_2_reg_1213 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln158_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln158_fu_801_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln158_reg_1218 : STD_LOGIC_VECTOR (63 downto 0);
    signal hf_fu_876_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hf_reg_1229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal trunc_ln108_fu_884_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln108_reg_1234 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln108_1_fu_888_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln108_1_reg_1239 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln108_fu_892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln108_reg_1244 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln108_2_fu_911_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln108_2_reg_1252 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal icmp_ln108_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln108_fu_916_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln108_reg_1257 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_MUL_MOD_fu_504_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_4_reg_1272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal temp3_0_3_fu_931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_3_reg_1277 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp3_0_fu_945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_reg_1288 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_6_fu_971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_6_reg_1295 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal temp3_0_2_fu_991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_2_reg_1300 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln8_1_fu_1002_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln8_1_reg_1305 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataTemp_ce0 : STD_LOGIC;
    signal DataTemp_we0 : STD_LOGIC;
    signal DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataTemp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataTemp_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal DataTemp_ce1 : STD_LOGIC;
    signal DataTemp_we1 : STD_LOGIC;
    signal DataTemp_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataTemp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_reversed_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal bit_reversed_input_ce0 : STD_LOGIC;
    signal bit_reversed_input_we0 : STD_LOGIC;
    signal bit_reversed_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_reversed_input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce1 : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce1 : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we1 : STD_LOGIC;
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_idle : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_ready : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we0 : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce1 : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we1 : STD_LOGIC;
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_ce0 : STD_LOGIC;
    signal i_reg_385 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal i_6_reg_396 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start_reg : STD_LOGIC := '0';
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start_reg : STD_LOGIC := '0';
    signal grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start_reg : STD_LOGIC := '0';
    signal grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start_reg : STD_LOGIC := '0';
    signal grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal icmp_ln104_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln14_3_fu_559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_6_fu_574_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_2_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_5_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_1_fu_599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_4_fu_614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln8_1_fu_998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln12_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal zext_ln8_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal h_1_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_5_fu_806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_4_fu_921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal trunc_ln14_3_fu_564_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln14_2_fu_568_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln14_2_fu_584_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln14_1_fu_588_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln14_1_fu_604_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln14_fu_608_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln28_fu_619_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln28_fu_623_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln154_fu_692_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_698_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_11_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln155_fu_723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln155_fu_723_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln155_1_fu_728_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln155_fu_738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln155_2_fu_748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln155_2_fu_748_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_11_fu_716_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln155_1_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln155_1_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_698_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln158_fu_777_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_780_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal h_5_fu_806_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln104_fu_819_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_825_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_10_fu_831_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln105_fu_838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln105_fu_838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln105_1_fu_843_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln105_fu_853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln105_2_fu_863_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln105_2_fu_863_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_fu_831_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln105_1_fu_857_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln105_1_fu_872_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_825_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln108_fu_892_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_895_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal h_4_fu_921_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln56_cast_fu_951_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln56_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp3_0_5_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln43_fu_977_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln43_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp3_0_1_fu_986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1005_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln14_fu_1012_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln12_fu_1022_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_fu_1032_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln8_fu_1039_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_698_ap_start : STD_LOGIC;
    signal grp_fu_698_ap_done : STD_LOGIC;
    signal grp_fu_825_ap_start : STD_LOGIC;
    signal grp_fu_825_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (75 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Crypto_Crypto_Pipeline_VITIS_LOOP_138_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln14_6 : IN STD_LOGIC_VECTOR (12 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_ram_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        data_ram_0_ce0 : OUT STD_LOGIC;
        data_ram_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_89_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln14_5 : IN STD_LOGIC_VECTOR (12 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_ram_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        data_ram_0_ce0 : OUT STD_LOGIC;
        data_ram_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_22_21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bit_reversed_input_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        bit_reversed_input_ce0 : OUT STD_LOGIC;
        bit_reversed_input_we0 : OUT STD_LOGIC;
        bit_reversed_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_22_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bit_reversed_input_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        bit_reversed_input_ce0 : OUT STD_LOGIC;
        bit_reversed_input_we0 : OUT STD_LOGIC;
        bit_reversed_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_149_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bit_reversed_input_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        bit_reversed_input_ce0 : OUT STD_LOGIC;
        bit_reversed_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_99_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bit_reversed_input_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        bit_reversed_input_ce0 : OUT STD_LOGIC;
        bit_reversed_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_176_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce1 : OUT STD_LOGIC;
        DataTemp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        n_inv : IN STD_LOGIC_VECTOR (18 downto 0);
        trunc_ln11_2 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_INTT_PE_LOOP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hf_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln158_2 : IN STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce1 : OUT STD_LOGIC;
        DataTemp_we1 : OUT STD_LOGIC;
        DataTemp_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln158_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        trunc_ln10 : IN STD_LOGIC_VECTOR (12 downto 0);
        m_1 : IN STD_LOGIC_VECTOR (19 downto 0);
        zext_ln19_8 : IN STD_LOGIC_VECTOR (15 downto 0);
        mod_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln19_9 : IN STD_LOGIC_VECTOR (15 downto 0);
        zext_ln89_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln64_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        twiddle_ram_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        twiddle_ram_ce0 : OUT STD_LOGIC;
        twiddle_ram_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_180_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln14_6 : IN STD_LOGIC_VECTOR (12 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_ram_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        data_ram_0_ce0 : OUT STD_LOGIC;
        data_ram_0_we0 : OUT STD_LOGIC;
        data_ram_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_VITIS_LOOP_126_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln14_5 : IN STD_LOGIC_VECTOR (12 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_ram_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        data_ram_0_ce0 : OUT STD_LOGIC;
        data_ram_0_we0 : OUT STD_LOGIC;
        data_ram_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_Crypto_Pipeline_NTT_PE_LOOP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hf : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln108_2 : IN STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce0 : OUT STD_LOGIC;
        DataTemp_we0 : OUT STD_LOGIC;
        DataTemp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        DataTemp_ce1 : OUT STD_LOGIC;
        DataTemp_we1 : OUT STD_LOGIC;
        DataTemp_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        DataTemp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln108_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        trunc_ln8 : IN STD_LOGIC_VECTOR (12 downto 0);
        m : IN STD_LOGIC_VECTOR (19 downto 0);
        zext_ln19_5 : IN STD_LOGIC_VECTOR (15 downto 0);
        mod_r : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln19_6 : IN STD_LOGIC_VECTOR (15 downto 0);
        zext_ln89 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln64 : IN STD_LOGIC_VECTOR (30 downto 0);
        twiddle_ram_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        twiddle_ram_ce0 : OUT STD_LOGIC;
        twiddle_ram_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_MUL_MOD IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        MOD_INDEX : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_mux_3_2_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component Crypto_mux_3_2_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component Crypto_sdiv_15ns_32s_13_19_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component Crypto_mux_3_2_19_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component Crypto_data_ram_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_twiddle_ram_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_DataTemp_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_bit_reversed_input_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        DataIn : OUT STD_LOGIC_VECTOR (31 downto 0);
        Address : OUT STD_LOGIC_VECTOR (31 downto 0);
        DataOutput : IN STD_LOGIC_VECTOR (31 downto 0);
        DataOutput_ap_vld : IN STD_LOGIC;
        RAMSel : OUT STD_LOGIC_VECTOR (31 downto 0);
        TwiddleIn_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        TwiddleIn_ce0 : IN STD_LOGIC;
        TwiddleIn_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OP : OUT STD_LOGIC_VECTOR (31 downto 0);
        ModIndex : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    data_ram_0_U : component Crypto_data_ram_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8192,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_ram_0_address0,
        ce0 => data_ram_0_ce0,
        we0 => data_ram_0_we0,
        d0 => data_ram_0_d0,
        q0 => data_ram_0_q0,
        address1 => data_ram_0_address1,
        ce1 => data_ram_0_ce1,
        we1 => data_ram_0_we1,
        d1 => data_ram_0_d1,
        q1 => data_ram_0_q1);

    twiddle_ram_U : component Crypto_twiddle_ram_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8192,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => twiddle_ram_address0,
        ce0 => twiddle_ram_ce0,
        we0 => twiddle_ram_we0,
        d0 => TwiddleIn_q0,
        q0 => twiddle_ram_q0);

    DataTemp_U : component Crypto_DataTemp_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => DataTemp_address0,
        ce0 => DataTemp_ce0,
        we0 => DataTemp_we0,
        d0 => DataTemp_d0,
        q0 => DataTemp_q0,
        address1 => DataTemp_address1,
        ce1 => DataTemp_ce1,
        we1 => DataTemp_we1,
        d1 => DataTemp_d1,
        q1 => DataTemp_q1);

    bit_reversed_input_U : component Crypto_bit_reversed_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bit_reversed_input_address0,
        ce0 => bit_reversed_input_ce0,
        we0 => bit_reversed_input_we0,
        d0 => bit_reversed_input_d0,
        q0 => bit_reversed_input_q0);

    grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407 : component Crypto_Crypto_Pipeline_VITIS_LOOP_138_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_ready,
        zext_ln14_6 => tmp_s_reg_1140,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_d0,
        data_ram_0_address0 => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_address0,
        data_ram_0_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_ce0,
        data_ram_0_q0 => data_ram_0_q0);

    grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415 : component Crypto_Crypto_Pipeline_VITIS_LOOP_89_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_ready,
        zext_ln14_5 => tmp_9_reg_1153,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_d0,
        data_ram_0_address0 => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_address0,
        data_ram_0_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_ce0,
        data_ram_0_q0 => data_ram_0_q0);

    grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423 : component Crypto_Crypto_Pipeline_VITIS_LOOP_22_21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_ready,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_ce0,
        DataTemp_q0 => DataTemp_q0,
        bit_reversed_input_address0 => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_address0,
        bit_reversed_input_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_ce0,
        bit_reversed_input_we0 => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_we0,
        bit_reversed_input_d0 => grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_d0);

    grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429 : component Crypto_Crypto_Pipeline_VITIS_LOOP_22_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_ready,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_ce0,
        DataTemp_q0 => DataTemp_q0,
        bit_reversed_input_address0 => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_address0,
        bit_reversed_input_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_ce0,
        bit_reversed_input_we0 => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_we0,
        bit_reversed_input_d0 => grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_d0);

    grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435 : component Crypto_Crypto_Pipeline_VITIS_LOOP_149_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_ready,
        bit_reversed_input_address0 => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_address0,
        bit_reversed_input_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_ce0,
        bit_reversed_input_q0 => bit_reversed_input_q0,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_d0);

    grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441 : component Crypto_Crypto_Pipeline_VITIS_LOOP_99_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_ready,
        bit_reversed_input_address0 => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_address0,
        bit_reversed_input_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_ce0,
        bit_reversed_input_q0 => bit_reversed_input_q0,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_d0);

    grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447 : component Crypto_Crypto_Pipeline_VITIS_LOOP_176_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_ready,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_d0,
        DataTemp_address1 => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address1,
        DataTemp_ce1 => grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce1,
        DataTemp_q1 => DataTemp_q1,
        n_inv => n_inv_reg_1185,
        trunc_ln11_2 => trunc_ln11_1_reg_1061);

    grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454 : component Crypto_Crypto_Pipeline_INTT_PE_LOOP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start,
        ap_done => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done,
        ap_idle => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_idle,
        ap_ready => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_ready,
        hf_1 => hf_1_reg_1190,
        trunc_ln158_2 => trunc_ln158_2_reg_1213,
        DataTemp_address0 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d0,
        DataTemp_q0 => DataTemp_q0,
        DataTemp_address1 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address1,
        DataTemp_ce1 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce1,
        DataTemp_we1 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we1,
        DataTemp_d1 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d1,
        DataTemp_q1 => DataTemp_q1,
        trunc_ln158_1 => trunc_ln158_1_reg_1200,
        trunc_ln10 => trunc_ln158_reg_1195,
        m_1 => reg_545,
        zext_ln19_8 => trunc_ln89_1_reg_1164,
        mod_1 => reg_535,
        zext_ln19_9 => trunc_ln64_1_reg_1159,
        zext_ln89_1 => reg_535,
        zext_ln64_1 => reg_535,
        twiddle_ram_address0 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_address0,
        twiddle_ram_ce0 => grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_ce0,
        twiddle_ram_q0 => twiddle_ram_q0);

    grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471 : component Crypto_Crypto_Pipeline_VITIS_LOOP_180_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_ready,
        zext_ln14_6 => tmp_s_reg_1140,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_ce0,
        DataTemp_q0 => DataTemp_q0,
        data_ram_0_address0 => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_address0,
        data_ram_0_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_ce0,
        data_ram_0_we0 => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_we0,
        data_ram_0_d0 => grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_d0);

    grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479 : component Crypto_Crypto_Pipeline_VITIS_LOOP_126_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start,
        ap_done => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_done,
        ap_idle => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_idle,
        ap_ready => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_ready,
        zext_ln14_5 => tmp_9_reg_1153,
        DataTemp_address0 => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_ce0,
        DataTemp_q0 => DataTemp_q0,
        data_ram_0_address0 => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_address0,
        data_ram_0_ce0 => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_ce0,
        data_ram_0_we0 => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_we0,
        data_ram_0_d0 => grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_d0);

    grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487 : component Crypto_Crypto_Pipeline_NTT_PE_LOOP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start,
        ap_done => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done,
        ap_idle => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_idle,
        ap_ready => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_ready,
        hf => hf_reg_1229,
        trunc_ln108_2 => trunc_ln108_2_reg_1252,
        DataTemp_address0 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address0,
        DataTemp_ce0 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce0,
        DataTemp_we0 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we0,
        DataTemp_d0 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d0,
        DataTemp_q0 => DataTemp_q0,
        DataTemp_address1 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address1,
        DataTemp_ce1 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce1,
        DataTemp_we1 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we1,
        DataTemp_d1 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d1,
        DataTemp_q1 => DataTemp_q1,
        trunc_ln108_1 => trunc_ln108_1_reg_1239,
        trunc_ln8 => trunc_ln108_reg_1234,
        m => reg_545,
        zext_ln19_5 => trunc_ln89_reg_1174,
        mod_r => reg_535,
        zext_ln19_6 => trunc_ln64_reg_1169,
        zext_ln89 => reg_535,
        zext_ln64 => reg_535,
        twiddle_ram_address0 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_address0,
        twiddle_ram_ce0 => grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_ce0,
        twiddle_ram_q0 => twiddle_ram_q0);

    grp_MUL_MOD_fu_504 : component Crypto_MUL_MOD
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        input1_val => data_ram_0_q1,
        input2_val => data_ram_0_q0,
        MOD_INDEX => trunc_ln11_1_reg_1061,
        ap_return => grp_MUL_MOD_fu_504_ap_return);

    control_s_axi_U : component Crypto_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        DataIn => DataIn,
        Address => Address,
        DataOutput => data_ram_0_q0,
        DataOutput_ap_vld => DataOutput_ap_vld,
        RAMSel => RAMSel,
        TwiddleIn_address0 => TwiddleIn_address0,
        TwiddleIn_ce0 => TwiddleIn_ce0,
        TwiddleIn_q0 => TwiddleIn_q0,
        OP => OP,
        ModIndex => ModIndex,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mux_3_2_31_1_1_U116 : component Crypto_mux_3_2_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        din2_WIDTH => 31,
        din3_WIDTH => 2,
        dout_WIDTH => 31)
    port map (
        din0 => ap_const_lv31_40002001,
        din1 => ap_const_lv31_40012001,
        din2 => ap_const_lv31_40020001,
        din3 => trunc_ln11_1_reg_1061,
        dout => grp_fu_513_p5);

    mux_3_2_20_1_1_U117 : component Crypto_mux_3_2_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 2,
        dout_WIDTH => 20)
    port map (
        din0 => ap_const_lv20_F7FFC,
        din1 => ap_const_lv20_B8010,
        din2 => ap_const_lv20_8003B,
        din3 => trunc_ln11_1_reg_1061,
        dout => grp_fu_524_p5);

    sdiv_15ns_32s_13_19_seq_1_U118 : component Crypto_sdiv_15ns_32s_13_19_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 19,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        start => grp_fu_698_ap_start,
        done => grp_fu_698_ap_done,
        din0 => grp_fu_698_p0,
        din1 => h_1_fu_190,
        ce => ap_const_logic_1,
        dout => grp_fu_698_p2);

    mux_3_2_19_1_1_U119 : component Crypto_mux_3_2_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 19,
        din2_WIDTH => 19,
        din3_WIDTH => 2,
        dout_WIDTH => 19)
    port map (
        din0 => ap_const_lv19_41FFF,
        din1 => ap_const_lv19_51FEF,
        din2 => ap_const_lv19_5FFE1,
        din3 => trunc_ln11_1_reg_1061,
        dout => n_inv_fu_704_p5);

    sdiv_15ns_32s_13_19_seq_1_U120 : component Crypto_sdiv_15ns_32s_13_19_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 19,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        start => grp_fu_825_ap_start,
        done => grp_fu_825_ap_done,
        din0 => grp_fu_825_p0,
        din1 => h_fu_194,
        ce => ap_const_logic_1,
        dout => grp_fu_825_p2);

    mux_3_2_31_1_1_U121 : component Crypto_mux_3_2_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        din2_WIDTH => 31,
        din3_WIDTH => 2,
        dout_WIDTH => 31)
    port map (
        din0 => ap_const_lv31_40002001,
        din1 => ap_const_lv31_40012001,
        din2 => ap_const_lv31_40020001,
        din3 => trunc_ln11_1_reg_1061,
        dout => zext_ln56_cast_fu_951_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln158_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln108_fu_905_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                    grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln104_fu_819_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln154_fu_692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_ready = ap_const_logic_1)) then 
                    grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    h_1_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
                h_1_fu_190(1) <= '1';
                h_1_fu_190(2) <= '0';
                h_1_fu_190(3) <= '0';
                h_1_fu_190(4) <= '0';
                h_1_fu_190(5) <= '0';
                h_1_fu_190(6) <= '0';
                h_1_fu_190(7) <= '0';
                h_1_fu_190(8) <= '0';
                h_1_fu_190(9) <= '0';
                h_1_fu_190(10) <= '0';
                h_1_fu_190(11) <= '0';
                h_1_fu_190(12) <= '0';
                h_1_fu_190(13) <= '0';
                h_1_fu_190(14) <= '0';
                h_1_fu_190(15) <= '0';
                h_1_fu_190(16) <= '0';
                h_1_fu_190(17) <= '0';
                h_1_fu_190(18) <= '0';
                h_1_fu_190(19) <= '0';
                h_1_fu_190(20) <= '0';
                h_1_fu_190(21) <= '0';
                h_1_fu_190(22) <= '0';
                h_1_fu_190(23) <= '0';
                h_1_fu_190(24) <= '0';
                h_1_fu_190(25) <= '0';
                h_1_fu_190(26) <= '0';
                h_1_fu_190(27) <= '0';
                h_1_fu_190(28) <= '0';
                h_1_fu_190(29) <= '0';
                h_1_fu_190(30) <= '0';
                h_1_fu_190(31) <= '0';
            elsif (((icmp_ln158_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                                h_1_fu_190(31 downto 1) <= h_5_fu_806_p2(31 downto 1);
            end if; 
        end if;
    end process;

    h_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
                h_fu_194(1) <= '1';
                h_fu_194(2) <= '0';
                h_fu_194(3) <= '0';
                h_fu_194(4) <= '0';
                h_fu_194(5) <= '0';
                h_fu_194(6) <= '0';
                h_fu_194(7) <= '0';
                h_fu_194(8) <= '0';
                h_fu_194(9) <= '0';
                h_fu_194(10) <= '0';
                h_fu_194(11) <= '0';
                h_fu_194(12) <= '0';
                h_fu_194(13) <= '0';
                h_fu_194(14) <= '0';
                h_fu_194(15) <= '0';
                h_fu_194(16) <= '0';
                h_fu_194(17) <= '0';
                h_fu_194(18) <= '0';
                h_fu_194(19) <= '0';
                h_fu_194(20) <= '0';
                h_fu_194(21) <= '0';
                h_fu_194(22) <= '0';
                h_fu_194(23) <= '0';
                h_fu_194(24) <= '0';
                h_fu_194(25) <= '0';
                h_fu_194(26) <= '0';
                h_fu_194(27) <= '0';
                h_fu_194(28) <= '0';
                h_fu_194(29) <= '0';
                h_fu_194(30) <= '0';
                h_fu_194(31) <= '0';
            elsif (((icmp_ln108_fu_905_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                                h_fu_194(31 downto 1) <= h_4_fu_921_p2(31 downto 1);
            end if; 
        end if;
    end process;

    i_6_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
                i_6_reg_396 <= ap_const_lv64_0;
            elsif (((grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                i_6_reg_396 <= add_ln108_reg_1257;
            end if; 
        end if;
    end process;

    i_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                i_reg_385 <= ap_const_lv64_0;
            elsif (((grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                i_reg_385 <= add_ln158_reg_1218;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                OP_read_reg_1049 <= OP;
                trunc_ln11_1_reg_1061 <= trunc_ln11_1_fu_555_p1;
                trunc_ln11_reg_1053 <= trunc_ln11_fu_551_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_905_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                add_ln108_reg_1257 <= add_ln108_fu_916_p2;
                trunc_ln108_2_reg_1252 <= trunc_ln108_2_fu_911_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln158_fu_790_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                add_ln158_reg_1218 <= add_ln158_fu_801_p2;
                trunc_ln158_2_reg_1213 <= trunc_ln158_2_fu_796_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv32_0 = OP_read_read_fu_204_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                data_ram_0_addr_2_reg_1098 <= zext_ln14_1_fu_599_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_1 = OP_read_read_fu_204_p2))) then
                data_ram_0_addr_4_reg_1088 <= zext_ln14_2_fu_579_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_2 = OP_read_read_fu_204_p2))) then
                data_ram_0_addr_6_reg_1077 <= zext_ln14_3_fu_559_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                hf_1_reg_1190 <= hf_1_fu_761_p3;
                    sext_ln158_reg_1205(63 downto 1) <= sext_ln158_fu_777_p1(63 downto 1);
                trunc_ln158_1_reg_1200 <= trunc_ln158_1_fu_773_p1;
                trunc_ln158_reg_1195 <= trunc_ln158_fu_769_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                hf_reg_1229 <= hf_fu_876_p3;
                    sext_ln108_reg_1244(63 downto 1) <= sext_ln108_fu_892_p1(63 downto 1);
                trunc_ln108_1_reg_1239 <= trunc_ln108_1_fu_888_p1;
                trunc_ln108_reg_1234 <= trunc_ln108_fu_884_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln154_fu_692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                n_inv_reg_1185 <= n_inv_fu_704_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049)))) then
                reg_535 <= grp_fu_513_p5;
                reg_545 <= grp_fu_524_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv32_0 = OP_read_reg_1049) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                temp3_0_2_reg_1300 <= temp3_0_2_fu_991_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_const_lv32_1 = OP_read_reg_1049))) then
                temp3_0_3_reg_1277 <= temp3_0_3_fu_931_p2;
                tmp_reg_1283 <= temp3_0_3_fu_931_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                temp3_0_4_reg_1272 <= grp_MUL_MOD_fu_504_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state70) and (ap_const_lv32_1 = OP_read_reg_1049))) then
                temp3_0_6_reg_1295 <= temp3_0_6_fu_971_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv32_0 = OP_read_reg_1049) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                temp3_0_reg_1288 <= temp3_0_fu_945_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_3 = OP_read_reg_1049))) then
                    tmp_9_reg_1153(12) <= tmp_9_fu_660_p3(12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_4 = OP_read_reg_1049))) then
                    tmp_s_reg_1140(12) <= tmp_s_fu_647_p3(12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_6 = OP_read_read_fu_204_p2))) then
                trunc_ln14_reg_1123 <= trunc_ln14_fu_639_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then
                trunc_ln64_1_reg_1159 <= trunc_ln64_1_fu_673_p1;
                trunc_ln89_1_reg_1164 <= trunc_ln89_1_fu_677_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then
                trunc_ln64_reg_1169 <= trunc_ln64_fu_681_p1;
                trunc_ln89_reg_1174 <= trunc_ln89_fu_685_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) and (ap_const_lv32_7 = OP_read_reg_1049))) then
                trunc_ln8_1_reg_1305 <= trunc_ln8_1_fu_1002_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv32_5 = OP_read_read_fu_204_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln8_reg_1128 <= trunc_ln8_fu_643_p1;
            end if;
        end if;
    end process;
    tmp_s_reg_1140(11 downto 0) <= "000000000000";
    tmp_9_reg_1153(11 downto 0) <= "000000000000";
    sext_ln158_reg_1205(0) <= '0';
    sext_ln108_reg_1244(0) <= '0';
    h_1_fu_190(0) <= '0';
    h_fu_194(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, OP_read_reg_1049, OP_read_read_fu_204_p2, ap_CS_fsm_state8, icmp_ln154_fu_692_p2, ap_CS_fsm_state27, icmp_ln158_fu_790_p2, ap_CS_fsm_state51, icmp_ln108_fu_905_p2, grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_done, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done, grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_done, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_done, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state32, icmp_ln104_fu_819_p2, ap_CS_fsm_state53, ap_block_state3_on_subcall_done, ap_block_state5_on_subcall_done, ap_block_state7_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((ap_const_lv32_5 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_6 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_7 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_8 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_9 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_0 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_1 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_2 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_3 = OP_read_read_fu_204_p2)) and not((ap_const_lv32_4 = OP_read_read_fu_204_p2)) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_lv32_5 = OP_read_read_fu_204_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv32_7 = OP_read_read_fu_204_p2) or (ap_const_lv32_6 = OP_read_read_fu_204_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv32_8 = OP_read_read_fu_204_p2) or (ap_const_lv32_9 = OP_read_read_fu_204_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv32_0 = OP_read_read_fu_204_p2) or (ap_const_lv32_1 = OP_read_read_fu_204_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_2 = OP_read_read_fu_204_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv32_3 = OP_read_read_fu_204_p2) or (ap_const_lv32_4 = OP_read_read_fu_204_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done) and ((ap_const_lv32_3 = OP_read_reg_1049) or (ap_const_lv32_4 = OP_read_reg_1049)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done) and ((ap_const_lv32_3 = OP_read_reg_1049) or (ap_const_lv32_4 = OP_read_reg_1049)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln154_fu_692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln158_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((icmp_ln104_fu_819_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if (((icmp_ln108_fu_905_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                if (((grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (((grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    DataOutput_ap_vld_assign_proc : process(OP_read_reg_1049, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) and (ap_const_lv32_6 = OP_read_reg_1049))) then 
            DataOutput_ap_vld <= ap_const_logic_1;
        else 
            DataOutput_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DataTemp_address0_assign_proc : process(ap_CS_fsm_state7, OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address0, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_address0, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_address0, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address0, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_address0;
        else 
            DataTemp_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataTemp_address1_assign_proc : process(grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address1, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address1, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address1, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_address1 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_address1 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DataTemp_address1 <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_address1;
        else 
            DataTemp_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    DataTemp_ce0_assign_proc : process(ap_CS_fsm_state7, OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce0, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_ce0, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_ce0, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce0, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_DataTemp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_DataTemp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_DataTemp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_DataTemp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_ce0;
        else 
            DataTemp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataTemp_ce1_assign_proc : process(grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce1, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce1, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce1, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_ce1 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_ce1 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DataTemp_ce1 <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_ce1;
        else 
            DataTemp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    DataTemp_d0_assign_proc : process(ap_CS_fsm_state7, OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_d0, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_d0, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_d0, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_d0, grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_d0, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d0, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d0, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state3, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_d0;
        else 
            DataTemp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    DataTemp_d1_assign_proc : process(grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d1, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d1, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_d1 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_d1 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_d1;
        else 
            DataTemp_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    DataTemp_we0_assign_proc : process(ap_CS_fsm_state7, OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_we0, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_we0, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_we0, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_we0, grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_we0, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we0, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we0, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state3, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_DataTemp_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_DataTemp_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_DataTemp_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_DataTemp_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            DataTemp_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_DataTemp_we0;
        else 
            DataTemp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataTemp_we1_assign_proc : process(grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we1, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we1, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DataTemp_we1 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_DataTemp_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DataTemp_we1 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_DataTemp_we1;
        else 
            DataTemp_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OP_read_read_fu_204_p2 <= OP;

    TwiddleIn_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            TwiddleIn_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            TwiddleIn_address0 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            TwiddleIn_address0 <= "X";
        end if; 
    end process;


    TwiddleIn_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            TwiddleIn_ce0 <= ap_const_logic_1;
        else 
            TwiddleIn_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    TwiddleOutput <= twiddle_ram_q0;

    TwiddleOutput_ap_vld_assign_proc : process(OP_read_reg_1049, ap_CS_fsm_state72)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_lv32_8 = OP_read_reg_1049)) or ((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_lv32_9 = OP_read_reg_1049)))) then 
            TwiddleOutput_ap_vld <= ap_const_logic_1;
        else 
            TwiddleOutput_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln108_fu_916_p2 <= std_logic_vector(signed(sext_ln108_reg_1244) + signed(i_6_reg_396));
    add_ln14_fu_1012_p2 <= std_logic_vector(unsigned(tmp_8_fu_1005_p3) + unsigned(trunc_ln14_reg_1123));
    add_ln158_fu_801_p2 <= std_logic_vector(signed(sext_ln158_reg_1205) + signed(i_reg_385));
    add_ln8_fu_1039_p2 <= std_logic_vector(unsigned(tmp_7_fu_1032_p3) + unsigned(trunc_ln8_reg_1128));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done)
    begin
        if ((grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state29_blk_assign_proc : process(grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_done)
    begin
        if ((grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_done)
    begin
        if ((grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done)
    begin
        if ((grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state53_blk_assign_proc : process(grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_done)
    begin
        if ((grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state53_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state53_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state7_on_subcall_done)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state3_on_subcall_done_assign_proc : process(OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_done, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_done)
    begin
                ap_block_state3_on_subcall_done <= (((grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_done = ap_const_logic_0) and (ap_const_lv32_3 = OP_read_reg_1049)) or ((grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_done = ap_const_logic_0) and (ap_const_lv32_4 = OP_read_reg_1049)));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_done, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_done)
    begin
                ap_block_state5_on_subcall_done <= (((grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_done = ap_const_logic_0) and (ap_const_lv32_3 = OP_read_reg_1049)) or ((grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_done = ap_const_logic_0) and (ap_const_lv32_4 = OP_read_reg_1049)));
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_done, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_done)
    begin
                ap_block_state7_on_subcall_done <= (((grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_done = ap_const_logic_0) and (ap_const_lv32_3 = OP_read_reg_1049)) or ((grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_done = ap_const_logic_0) and (ap_const_lv32_4 = OP_read_reg_1049)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    bit_reversed_input_address0_assign_proc : process(ap_CS_fsm_state7, OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_address0, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_address0, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_address0, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_address0, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            bit_reversed_input_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            bit_reversed_input_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            bit_reversed_input_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            bit_reversed_input_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_address0;
        else 
            bit_reversed_input_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    bit_reversed_input_ce0_assign_proc : process(ap_CS_fsm_state7, OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_ce0, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_ce0, grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_ce0, grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            bit_reversed_input_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_bit_reversed_input_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            bit_reversed_input_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_bit_reversed_input_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            bit_reversed_input_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            bit_reversed_input_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_ce0;
        else 
            bit_reversed_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bit_reversed_input_d0_assign_proc : process(OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_d0, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_d0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
            if ((ap_const_lv32_3 = OP_read_reg_1049)) then 
                bit_reversed_input_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_d0;
            elsif ((ap_const_lv32_4 = OP_read_reg_1049)) then 
                bit_reversed_input_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_d0;
            else 
                bit_reversed_input_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bit_reversed_input_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bit_reversed_input_we0_assign_proc : process(OP_read_reg_1049, grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_we0, grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
            if ((ap_const_lv32_3 = OP_read_reg_1049)) then 
                bit_reversed_input_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_bit_reversed_input_we0;
            elsif ((ap_const_lv32_4 = OP_read_reg_1049)) then 
                bit_reversed_input_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_bit_reversed_input_we0;
            else 
                bit_reversed_input_we0 <= ap_const_logic_0;
            end if;
        else 
            bit_reversed_input_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_0_address0_assign_proc : process(ap_CS_fsm_state1, OP_read_reg_1049, OP_read_read_fu_204_p2, data_ram_0_addr_6_reg_1077, ap_CS_fsm_state73, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_address0, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_address0, grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_address0, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state31, ap_CS_fsm_state53, zext_ln14_6_fu_574_p1, zext_ln14_5_fu_594_p1, zext_ln14_4_fu_614_p1, zext_ln14_fu_1017_p1, zext_ln8_fu_1044_p1, ap_CS_fsm_state75, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            data_ram_0_address0 <= zext_ln8_fu_1044_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            data_ram_0_address0 <= zext_ln14_fu_1017_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            data_ram_0_address0 <= data_ram_0_addr_6_reg_1077;
        elsif (((ap_const_lv32_0 = OP_read_read_fu_204_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_ram_0_address0 <= zext_ln14_4_fu_614_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_1 = OP_read_read_fu_204_p2))) then 
            data_ram_0_address0 <= zext_ln14_5_fu_594_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_2 = OP_read_read_fu_204_p2))) then 
            data_ram_0_address0 <= zext_ln14_6_fu_574_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            data_ram_0_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            data_ram_0_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            data_ram_0_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            data_ram_0_address0 <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_address0;
        else 
            data_ram_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_0_address1_assign_proc : process(ap_CS_fsm_state1, OP_read_reg_1049, OP_read_read_fu_204_p2, data_ram_0_addr_4_reg_1088, data_ram_0_addr_2_reg_1098, zext_ln14_3_fu_559_p1, zext_ln14_2_fu_579_p1, zext_ln14_1_fu_599_p1, ap_CS_fsm_state71)
    begin
        if (((ap_const_lv32_0 = OP_read_reg_1049) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            data_ram_0_address1 <= data_ram_0_addr_2_reg_1098;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) and (ap_const_lv32_1 = OP_read_reg_1049))) then 
            data_ram_0_address1 <= data_ram_0_addr_4_reg_1088;
        elsif (((ap_const_lv32_0 = OP_read_read_fu_204_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_ram_0_address1 <= zext_ln14_1_fu_599_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_1 = OP_read_read_fu_204_p2))) then 
            data_ram_0_address1 <= zext_ln14_2_fu_579_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_2 = OP_read_read_fu_204_p2))) then 
            data_ram_0_address1 <= zext_ln14_3_fu_559_p1(13 - 1 downto 0);
        else 
            data_ram_0_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, OP_read_reg_1049, OP_read_read_fu_204_p2, ap_CS_fsm_state73, grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_ce0, grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_ce0, grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_ce0, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state31, ap_CS_fsm_state53, ap_CS_fsm_state75, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state73) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_1 = OP_read_read_fu_204_p2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_2 = OP_read_read_fu_204_p2)) or ((ap_const_lv32_0 = OP_read_read_fu_204_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_ram_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            data_ram_0_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            data_ram_0_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_3 = OP_read_reg_1049))) then 
            data_ram_0_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_data_ram_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv32_4 = OP_read_reg_1049))) then 
            data_ram_0_ce0 <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_data_ram_0_ce0;
        else 
            data_ram_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_0_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, OP_read_reg_1049, OP_read_read_fu_204_p2, ap_CS_fsm_state71)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state71) and (ap_const_lv32_1 = OP_read_reg_1049)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_1 = OP_read_read_fu_204_p2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_2 = OP_read_read_fu_204_p2)) or ((ap_const_lv32_0 = OP_read_reg_1049) and (ap_const_logic_1 = ap_CS_fsm_state71)) or ((ap_const_lv32_0 = OP_read_read_fu_204_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_ram_0_ce1 <= ap_const_logic_1;
        else 
            data_ram_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_0_d0_assign_proc : process(DataIn, temp3_0_4_reg_1272, grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_d0, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_d0, ap_CS_fsm_state31, ap_CS_fsm_state53, ap_CS_fsm_state75, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            data_ram_0_d0 <= DataIn;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            data_ram_0_d0 <= temp3_0_4_reg_1272;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            data_ram_0_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            data_ram_0_d0 <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_d0;
        else 
            data_ram_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_0_d1_assign_proc : process(OP_read_reg_1049, temp3_0_6_reg_1295, temp3_0_2_reg_1300, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
            if ((ap_const_lv32_0 = OP_read_reg_1049)) then 
                data_ram_0_d1 <= temp3_0_2_reg_1300;
            elsif ((ap_const_lv32_1 = OP_read_reg_1049)) then 
                data_ram_0_d1 <= temp3_0_6_reg_1295;
            else 
                data_ram_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            data_ram_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_0_we0_assign_proc : process(grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_we0, grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_we0, ap_CS_fsm_state31, ap_CS_fsm_state53, ap_CS_fsm_state75, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            data_ram_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            data_ram_0_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_data_ram_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            data_ram_0_we0 <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_data_ram_0_we0;
        else 
            data_ram_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_0_we1_assign_proc : process(OP_read_reg_1049, ap_CS_fsm_state71)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state71) and (ap_const_lv32_1 = OP_read_reg_1049)) or ((ap_const_lv32_0 = OP_read_reg_1049) and (ap_const_logic_1 = ap_CS_fsm_state71)))) then 
            data_ram_0_we1 <= ap_const_logic_1;
        else 
            data_ram_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_ap_start_reg;
    grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_126_5_fu_479_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_138_7_fu_407_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_149_10_fu_435_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_176_11_fu_447_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_180_12_fu_471_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_22_21_fu_423_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_22_2_fu_429_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_89_1_fu_415_ap_start_reg;
    grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start <= grp_Crypto_Pipeline_VITIS_LOOP_99_4_fu_441_ap_start_reg;

    grp_fu_698_ap_start_assign_proc : process(ap_CS_fsm_state8, icmp_ln154_fu_692_p2)
    begin
        if (((icmp_ln154_fu_692_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_fu_698_ap_start <= ap_const_logic_1;
        else 
            grp_fu_698_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_698_p0 <= ap_const_lv32_1000(15 - 1 downto 0);

    grp_fu_825_ap_start_assign_proc : process(ap_CS_fsm_state32, icmp_ln104_fu_819_p2)
    begin
        if (((icmp_ln104_fu_819_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            grp_fu_825_ap_start <= ap_const_logic_1;
        else 
            grp_fu_825_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_825_p0 <= ap_const_lv32_1000(15 - 1 downto 0);
    h_4_fu_921_p0 <= h_fu_194;
    h_4_fu_921_p2 <= std_logic_vector(shift_left(unsigned(h_4_fu_921_p0),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    h_5_fu_806_p0 <= h_1_fu_190;
    h_5_fu_806_p2 <= std_logic_vector(shift_left(unsigned(h_5_fu_806_p0),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    hf_1_fu_761_p3 <= 
        sub_ln155_1_fu_742_p2 when (tmp_11_fu_716_p3(0) = '1') else 
        zext_ln155_1_fu_757_p1;
    hf_fu_876_p3 <= 
        sub_ln105_1_fu_857_p2 when (tmp_10_fu_831_p3(0) = '1') else 
        zext_ln105_1_fu_872_p1;
    icmp_ln104_fu_819_p0 <= h_fu_194;
    icmp_ln104_fu_819_p2 <= "1" when (signed(icmp_ln104_fu_819_p0) < signed(ap_const_lv32_1001)) else "0";
    icmp_ln108_fu_905_p2 <= "1" when (signed(tmp_12_fu_895_p4) < signed(ap_const_lv52_1)) else "0";
    icmp_ln154_fu_692_p0 <= h_1_fu_190;
    icmp_ln154_fu_692_p2 <= "1" when (signed(icmp_ln154_fu_692_p0) < signed(ap_const_lv32_1001)) else "0";
    icmp_ln158_fu_790_p2 <= "1" when (signed(tmp_13_fu_780_p4) < signed(ap_const_lv52_1)) else "0";
    icmp_ln43_fu_981_p2 <= "1" when (signed(temp3_0_reg_1288) < signed(zext_ln43_fu_977_p1)) else "0";
    lshr_ln105_1_fu_843_p4 <= sub_ln105_fu_838_p2(31 downto 1);
    lshr_ln105_2_fu_863_p1 <= h_fu_194;
    lshr_ln105_2_fu_863_p4 <= lshr_ln105_2_fu_863_p1(31 downto 1);
    lshr_ln155_1_fu_728_p4 <= sub_ln155_fu_723_p2(31 downto 1);
    lshr_ln155_2_fu_748_p1 <= h_1_fu_190;
    lshr_ln155_2_fu_748_p4 <= lshr_ln155_2_fu_748_p1(31 downto 1);
    sext_ln108_fu_892_p0 <= h_fu_194;
        sext_ln108_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln108_fu_892_p0),64));

    sext_ln158_fu_777_p0 <= h_1_fu_190;
        sext_ln158_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln158_fu_777_p0),64));

    sub_ln105_1_fu_857_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln105_fu_853_p1));
    sub_ln105_fu_838_p1 <= h_fu_194;
    sub_ln105_fu_838_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln105_fu_838_p1));
    sub_ln155_1_fu_742_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln155_fu_738_p1));
    sub_ln155_fu_723_p1 <= h_1_fu_190;
    sub_ln155_fu_723_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln155_fu_723_p1));
    temp3_0_1_fu_986_p2 <= std_logic_vector(unsigned(temp3_0_reg_1288) - unsigned(zext_ln43_fu_977_p1));
    temp3_0_2_fu_991_p3 <= 
        temp3_0_reg_1288 when (icmp_ln43_fu_981_p2(0) = '1') else 
        temp3_0_1_fu_986_p2;
    temp3_0_3_fu_931_p2 <= std_logic_vector(unsigned(data_ram_0_q1) - unsigned(data_ram_0_q0));
    temp3_0_5_fu_966_p2 <= std_logic_vector(unsigned(zext_ln56_fu_962_p1) + unsigned(temp3_0_3_reg_1277));
    temp3_0_6_fu_971_p3 <= 
        temp3_0_5_fu_966_p2 when (tmp_reg_1283(0) = '1') else 
        temp3_0_3_reg_1277;
    temp3_0_fu_945_p2 <= std_logic_vector(unsigned(data_ram_0_q0) + unsigned(data_ram_0_q1));
    tmp_10_fu_831_p1 <= h_fu_194;
    tmp_10_fu_831_p3 <= tmp_10_fu_831_p1(31 downto 31);
    tmp_11_fu_716_p1 <= h_1_fu_190;
    tmp_11_fu_716_p3 <= tmp_11_fu_716_p1(31 downto 31);
    tmp_12_fu_895_p4 <= i_6_reg_396(63 downto 12);
    tmp_13_fu_780_p4 <= i_reg_385(63 downto 12);
    tmp_7_fu_1032_p3 <= (trunc_ln11_reg_1053 & ap_const_lv12_0);
    tmp_8_fu_1005_p3 <= (trunc_ln11_reg_1053 & ap_const_lv12_0);
    tmp_9_fu_660_p3 <= (trunc_ln11_reg_1053 & ap_const_lv12_0);
    tmp_s_fu_647_p3 <= (trunc_ln11_reg_1053 & ap_const_lv12_0);
    trunc_ln108_1_fu_888_p1 <= hf_fu_876_p3(12 - 1 downto 0);
    trunc_ln108_2_fu_911_p1 <= i_6_reg_396(12 - 1 downto 0);
    trunc_ln108_fu_884_p1 <= grp_fu_825_p2(13 - 1 downto 0);
    trunc_ln11_1_fu_555_p1 <= ModIndex(2 - 1 downto 0);
    trunc_ln11_fu_551_p1 <= RAMSel(1 - 1 downto 0);
    trunc_ln14_1_fu_604_p1 <= Address(13 - 1 downto 0);
    trunc_ln14_2_fu_584_p1 <= Address(13 - 1 downto 0);
    trunc_ln14_3_fu_564_p1 <= Address(13 - 1 downto 0);
    trunc_ln14_fu_639_p1 <= Address(13 - 1 downto 0);
    trunc_ln158_1_fu_773_p1 <= hf_1_fu_761_p3(12 - 1 downto 0);
    trunc_ln158_2_fu_796_p1 <= i_reg_385(12 - 1 downto 0);
    trunc_ln158_fu_769_p1 <= grp_fu_698_p2(13 - 1 downto 0);
    trunc_ln28_fu_619_p1 <= TwiddleAddress(13 - 1 downto 0);
    trunc_ln64_1_fu_673_p1 <= grp_fu_513_p5(16 - 1 downto 0);
    trunc_ln64_fu_681_p1 <= grp_fu_513_p5(16 - 1 downto 0);
    trunc_ln89_1_fu_677_p1 <= grp_fu_524_p5(16 - 1 downto 0);
    trunc_ln89_fu_685_p1 <= grp_fu_524_p5(16 - 1 downto 0);
    trunc_ln8_1_fu_1002_p1 <= TwiddleAddress(13 - 1 downto 0);
    trunc_ln8_fu_643_p1 <= Address(13 - 1 downto 0);

    twiddle_ram_address0_assign_proc : process(ap_CS_fsm_state1, OP_read_read_fu_204_p2, ap_CS_fsm_state73, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_address0, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_address0, ap_CS_fsm_state28, ap_CS_fsm_state52, zext_ln28_fu_629_p1, zext_ln22_fu_634_p1, zext_ln8_1_fu_998_p1, zext_ln12_fu_1027_p1, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            twiddle_ram_address0 <= zext_ln12_fu_1027_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            twiddle_ram_address0 <= zext_ln8_1_fu_998_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_8 = OP_read_read_fu_204_p2))) then 
            twiddle_ram_address0 <= zext_ln22_fu_634_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_9 = OP_read_read_fu_204_p2))) then 
            twiddle_ram_address0 <= zext_ln28_fu_629_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            twiddle_ram_address0 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            twiddle_ram_address0 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_address0;
        else 
            twiddle_ram_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    twiddle_ram_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, OP_read_read_fu_204_p2, ap_CS_fsm_state73, grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_ce0, grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_ce0, ap_CS_fsm_state28, ap_CS_fsm_state52, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_8 = OP_read_read_fu_204_p2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv32_9 = OP_read_read_fu_204_p2)))) then 
            twiddle_ram_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            twiddle_ram_ce0 <= grp_Crypto_Pipeline_NTT_PE_LOOP_fu_487_twiddle_ram_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            twiddle_ram_ce0 <= grp_Crypto_Pipeline_INTT_PE_LOOP_fu_454_twiddle_ram_ce0;
        else 
            twiddle_ram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    twiddle_ram_we0_assign_proc : process(OP_read_reg_1049, ap_CS_fsm_state73, ap_CS_fsm_state74)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state74) and (ap_const_lv32_7 = OP_read_reg_1049)) or ((ap_const_logic_1 = ap_CS_fsm_state73) and (ap_const_lv32_7 = OP_read_reg_1049)))) then 
            twiddle_ram_we0 <= ap_const_logic_1;
        else 
            twiddle_ram_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln12_fu_1022_p2 <= (trunc_ln8_1_reg_1305 xor ap_const_lv13_1000);
    xor_ln14_1_fu_588_p2 <= (trunc_ln14_2_fu_584_p1 xor ap_const_lv13_1000);
    xor_ln14_2_fu_568_p2 <= (trunc_ln14_3_fu_564_p1 xor ap_const_lv13_1000);
    xor_ln14_fu_608_p2 <= (trunc_ln14_1_fu_604_p1 xor ap_const_lv13_1000);
    xor_ln28_fu_623_p2 <= (trunc_ln28_fu_619_p1 xor ap_const_lv13_1000);
    zext_ln105_1_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln105_2_fu_863_p4),32));
    zext_ln105_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln105_1_fu_843_p4),32));
    zext_ln12_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln12_fu_1022_p2),64));
    zext_ln14_1_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Address),64));
    zext_ln14_2_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Address),64));
    zext_ln14_3_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Address),64));
    zext_ln14_4_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln14_fu_608_p2),64));
    zext_ln14_5_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln14_1_fu_588_p2),64));
    zext_ln14_6_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln14_2_fu_568_p2),64));
    zext_ln14_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_fu_1012_p2),64));
    zext_ln155_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln155_2_fu_748_p4),32));
    zext_ln155_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln155_1_fu_728_p4),32));
    zext_ln22_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(TwiddleAddress),64));
    zext_ln28_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln28_fu_623_p2),64));
    zext_ln43_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_513_p5),32));
    zext_ln56_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln56_cast_fu_951_p5),32));
    zext_ln8_1_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(TwiddleAddress),64));
    zext_ln8_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln8_fu_1039_p2),64));
end behav;
