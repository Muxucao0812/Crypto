-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto1_Crypto1_Pipeline_POLY_SUB_ROW_LOOP_POLY_SUB_COL_LOOP7 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    add_ln230 : IN STD_LOGIC_VECTOR (41 downto 0);
    add_ln231 : IN STD_LOGIC_VECTOR (41 downto 0);
    DataRAM_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_ce0 : OUT STD_LOGIC;
    DataRAM_we0 : OUT STD_LOGIC;
    DataRAM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_ce1 : OUT STD_LOGIC;
    DataRAM_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_1_ce0 : OUT STD_LOGIC;
    DataRAM_1_we0 : OUT STD_LOGIC;
    DataRAM_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_1_ce1 : OUT STD_LOGIC;
    DataRAM_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_2_ce0 : OUT STD_LOGIC;
    DataRAM_2_we0 : OUT STD_LOGIC;
    DataRAM_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_2_ce1 : OUT STD_LOGIC;
    DataRAM_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_3_ce0 : OUT STD_LOGIC;
    DataRAM_3_we0 : OUT STD_LOGIC;
    DataRAM_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_3_ce1 : OUT STD_LOGIC;
    DataRAM_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_4_ce0 : OUT STD_LOGIC;
    DataRAM_4_we0 : OUT STD_LOGIC;
    DataRAM_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_4_ce1 : OUT STD_LOGIC;
    DataRAM_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_5_ce0 : OUT STD_LOGIC;
    DataRAM_5_we0 : OUT STD_LOGIC;
    DataRAM_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_5_ce1 : OUT STD_LOGIC;
    DataRAM_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_6_ce0 : OUT STD_LOGIC;
    DataRAM_6_we0 : OUT STD_LOGIC;
    DataRAM_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_6_ce1 : OUT STD_LOGIC;
    DataRAM_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_7_ce0 : OUT STD_LOGIC;
    DataRAM_7_we0 : OUT STD_LOGIC;
    DataRAM_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    DataRAM_7_ce1 : OUT STD_LOGIC;
    DataRAM_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_Configurable_PE_fu_4766_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_Configurable_PE_fu_4766_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_Configurable_PE_fu_4766_p_din3 : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_Configurable_PE_fu_4766_p_din4 : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_Configurable_PE_fu_4766_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Crypto1_Crypto1_Pipeline_POLY_SUB_ROW_LOOP_POLY_SUB_COL_LOOP7 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal icmp_ln220_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln220_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_557_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_557_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_557_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_557_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_557_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln220_fu_350_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln220_reg_561 : STD_LOGIC_VECTOR (12 downto 0);
    signal k_load_reg_566 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln226_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln226_reg_571 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln220_2_fu_374_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln220_2_reg_576 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln220_fu_382_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln220_reg_583 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal DataRAM_addr_reg_588 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_addr_reg_588_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_addr_reg_588_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_addr_reg_588_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_addr_reg_588_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_addr_reg_588_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_addr_reg_588_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_1_addr_reg_599_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_2_addr_reg_610_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_3_addr_reg_621_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_4_addr_reg_632_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_5_addr_reg_643_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_6_addr_reg_654_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665 : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal DataRAM_7_addr_reg_665_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln226_1_reg_676 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln226_1_reg_676_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln226_1_reg_676_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln226_1_reg_676_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln226_1_reg_676_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln226_1_reg_676_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln226_1_reg_676_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal SubInput1_fu_466_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal SubInput1_reg_682 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal SubInput2_fu_487_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal SubInput2_reg_687 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln230_2_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln231_2_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_84 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln226_fu_508_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_load : STD_LOGIC_VECTOR (6 downto 0);
    signal j_fu_88 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten97_fu_92 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten97_load : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln220_1_fu_362_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln230_fu_388_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln230_fu_391_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln231_fu_400_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln231_fu_403_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln231_3_fu_394_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_412_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_416_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln231_4_fu_406_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_57_fu_436_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter6_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Crypto1_Configurable_PE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        MOD_INDEX : IN STD_LOGIC_VECTOR (1 downto 0);
        op : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto1_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Crypto1_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_8_3_32_1_1_U445 : component Crypto1_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q1,
        din1 => DataRAM_1_q1,
        din2 => DataRAM_2_q1,
        din3 => DataRAM_3_q1,
        din4 => DataRAM_4_q1,
        din5 => DataRAM_5_q1,
        din6 => DataRAM_6_q1,
        din7 => DataRAM_7_q1,
        din8 => trunc_ln226_1_reg_676,
        dout => SubInput1_fu_466_p10);

    mux_8_3_32_1_1_U446 : component Crypto1_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => DataRAM_q0,
        din1 => DataRAM_1_q0,
        din2 => DataRAM_2_q0,
        din3 => DataRAM_3_q0,
        din4 => DataRAM_4_q0,
        din5 => DataRAM_5_q0,
        din6 => DataRAM_6_q0,
        din7 => DataRAM_7_q0,
        din8 => trunc_ln226_1_reg_676,
        dout => SubInput2_fu_487_p10);

    flow_control_loop_pipe_sequential_init_U : component Crypto1_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    indvar_flatten97_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten97_fu_92 <= ap_const_lv13_0;
            elsif (((icmp_ln220_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                indvar_flatten97_fu_92 <= add_ln220_reg_561;
            end if; 
        end if;
    end process;

    j_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_88 <= ap_const_lv7_0;
            elsif (((icmp_ln220_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                j_fu_88 <= select_ln220_2_reg_576;
            end if; 
        end if;
    end process;

    k_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k_fu_84 <= ap_const_lv7_0;
            elsif (((icmp_ln220_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                k_fu_84 <= add_ln226_fu_508_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln220_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                DataRAM_1_addr_reg_599 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_2_addr_reg_610 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_3_addr_reg_621 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_4_addr_reg_632 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_5_addr_reg_643 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_6_addr_reg_654 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_7_addr_reg_665 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                DataRAM_addr_reg_588 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);
                select_ln220_reg_583 <= select_ln220_fu_382_p3;
                trunc_ln226_1_reg_676 <= select_ln220_fu_382_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                DataRAM_1_addr_reg_599_pp0_iter1_reg <= DataRAM_1_addr_reg_599;
                DataRAM_1_addr_reg_599_pp0_iter2_reg <= DataRAM_1_addr_reg_599_pp0_iter1_reg;
                DataRAM_1_addr_reg_599_pp0_iter3_reg <= DataRAM_1_addr_reg_599_pp0_iter2_reg;
                DataRAM_1_addr_reg_599_pp0_iter4_reg <= DataRAM_1_addr_reg_599_pp0_iter3_reg;
                DataRAM_1_addr_reg_599_pp0_iter5_reg <= DataRAM_1_addr_reg_599_pp0_iter4_reg;
                DataRAM_1_addr_reg_599_pp0_iter6_reg <= DataRAM_1_addr_reg_599_pp0_iter5_reg;
                DataRAM_2_addr_reg_610_pp0_iter1_reg <= DataRAM_2_addr_reg_610;
                DataRAM_2_addr_reg_610_pp0_iter2_reg <= DataRAM_2_addr_reg_610_pp0_iter1_reg;
                DataRAM_2_addr_reg_610_pp0_iter3_reg <= DataRAM_2_addr_reg_610_pp0_iter2_reg;
                DataRAM_2_addr_reg_610_pp0_iter4_reg <= DataRAM_2_addr_reg_610_pp0_iter3_reg;
                DataRAM_2_addr_reg_610_pp0_iter5_reg <= DataRAM_2_addr_reg_610_pp0_iter4_reg;
                DataRAM_2_addr_reg_610_pp0_iter6_reg <= DataRAM_2_addr_reg_610_pp0_iter5_reg;
                DataRAM_3_addr_reg_621_pp0_iter1_reg <= DataRAM_3_addr_reg_621;
                DataRAM_3_addr_reg_621_pp0_iter2_reg <= DataRAM_3_addr_reg_621_pp0_iter1_reg;
                DataRAM_3_addr_reg_621_pp0_iter3_reg <= DataRAM_3_addr_reg_621_pp0_iter2_reg;
                DataRAM_3_addr_reg_621_pp0_iter4_reg <= DataRAM_3_addr_reg_621_pp0_iter3_reg;
                DataRAM_3_addr_reg_621_pp0_iter5_reg <= DataRAM_3_addr_reg_621_pp0_iter4_reg;
                DataRAM_3_addr_reg_621_pp0_iter6_reg <= DataRAM_3_addr_reg_621_pp0_iter5_reg;
                DataRAM_4_addr_reg_632_pp0_iter1_reg <= DataRAM_4_addr_reg_632;
                DataRAM_4_addr_reg_632_pp0_iter2_reg <= DataRAM_4_addr_reg_632_pp0_iter1_reg;
                DataRAM_4_addr_reg_632_pp0_iter3_reg <= DataRAM_4_addr_reg_632_pp0_iter2_reg;
                DataRAM_4_addr_reg_632_pp0_iter4_reg <= DataRAM_4_addr_reg_632_pp0_iter3_reg;
                DataRAM_4_addr_reg_632_pp0_iter5_reg <= DataRAM_4_addr_reg_632_pp0_iter4_reg;
                DataRAM_4_addr_reg_632_pp0_iter6_reg <= DataRAM_4_addr_reg_632_pp0_iter5_reg;
                DataRAM_5_addr_reg_643_pp0_iter1_reg <= DataRAM_5_addr_reg_643;
                DataRAM_5_addr_reg_643_pp0_iter2_reg <= DataRAM_5_addr_reg_643_pp0_iter1_reg;
                DataRAM_5_addr_reg_643_pp0_iter3_reg <= DataRAM_5_addr_reg_643_pp0_iter2_reg;
                DataRAM_5_addr_reg_643_pp0_iter4_reg <= DataRAM_5_addr_reg_643_pp0_iter3_reg;
                DataRAM_5_addr_reg_643_pp0_iter5_reg <= DataRAM_5_addr_reg_643_pp0_iter4_reg;
                DataRAM_5_addr_reg_643_pp0_iter6_reg <= DataRAM_5_addr_reg_643_pp0_iter5_reg;
                DataRAM_6_addr_reg_654_pp0_iter1_reg <= DataRAM_6_addr_reg_654;
                DataRAM_6_addr_reg_654_pp0_iter2_reg <= DataRAM_6_addr_reg_654_pp0_iter1_reg;
                DataRAM_6_addr_reg_654_pp0_iter3_reg <= DataRAM_6_addr_reg_654_pp0_iter2_reg;
                DataRAM_6_addr_reg_654_pp0_iter4_reg <= DataRAM_6_addr_reg_654_pp0_iter3_reg;
                DataRAM_6_addr_reg_654_pp0_iter5_reg <= DataRAM_6_addr_reg_654_pp0_iter4_reg;
                DataRAM_6_addr_reg_654_pp0_iter6_reg <= DataRAM_6_addr_reg_654_pp0_iter5_reg;
                DataRAM_7_addr_reg_665_pp0_iter1_reg <= DataRAM_7_addr_reg_665;
                DataRAM_7_addr_reg_665_pp0_iter2_reg <= DataRAM_7_addr_reg_665_pp0_iter1_reg;
                DataRAM_7_addr_reg_665_pp0_iter3_reg <= DataRAM_7_addr_reg_665_pp0_iter2_reg;
                DataRAM_7_addr_reg_665_pp0_iter4_reg <= DataRAM_7_addr_reg_665_pp0_iter3_reg;
                DataRAM_7_addr_reg_665_pp0_iter5_reg <= DataRAM_7_addr_reg_665_pp0_iter4_reg;
                DataRAM_7_addr_reg_665_pp0_iter6_reg <= DataRAM_7_addr_reg_665_pp0_iter5_reg;
                DataRAM_addr_reg_588_pp0_iter1_reg <= DataRAM_addr_reg_588;
                DataRAM_addr_reg_588_pp0_iter2_reg <= DataRAM_addr_reg_588_pp0_iter1_reg;
                DataRAM_addr_reg_588_pp0_iter3_reg <= DataRAM_addr_reg_588_pp0_iter2_reg;
                DataRAM_addr_reg_588_pp0_iter4_reg <= DataRAM_addr_reg_588_pp0_iter3_reg;
                DataRAM_addr_reg_588_pp0_iter5_reg <= DataRAM_addr_reg_588_pp0_iter4_reg;
                DataRAM_addr_reg_588_pp0_iter6_reg <= DataRAM_addr_reg_588_pp0_iter5_reg;
                trunc_ln226_1_reg_676_pp0_iter1_reg <= trunc_ln226_1_reg_676;
                trunc_ln226_1_reg_676_pp0_iter2_reg <= trunc_ln226_1_reg_676_pp0_iter1_reg;
                trunc_ln226_1_reg_676_pp0_iter3_reg <= trunc_ln226_1_reg_676_pp0_iter2_reg;
                trunc_ln226_1_reg_676_pp0_iter4_reg <= trunc_ln226_1_reg_676_pp0_iter3_reg;
                trunc_ln226_1_reg_676_pp0_iter5_reg <= trunc_ln226_1_reg_676_pp0_iter4_reg;
                trunc_ln226_1_reg_676_pp0_iter6_reg <= trunc_ln226_1_reg_676_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln220_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                SubInput1_reg_682 <= SubInput1_fu_466_p10;
                SubInput2_reg_687 <= SubInput2_fu_487_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln220_reg_561 <= add_ln220_fu_350_p2;
                icmp_ln220_reg_557 <= icmp_ln220_fu_344_p2;
                icmp_ln220_reg_557_pp0_iter1_reg <= icmp_ln220_reg_557;
                icmp_ln220_reg_557_pp0_iter2_reg <= icmp_ln220_reg_557_pp0_iter1_reg;
                icmp_ln220_reg_557_pp0_iter3_reg <= icmp_ln220_reg_557_pp0_iter2_reg;
                icmp_ln220_reg_557_pp0_iter4_reg <= icmp_ln220_reg_557_pp0_iter3_reg;
                icmp_ln220_reg_557_pp0_iter5_reg <= icmp_ln220_reg_557_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln220_fu_344_p2 = ap_const_lv1_0))) then
                icmp_ln226_reg_571 <= icmp_ln226_fu_368_p2;
                k_load_reg_566 <= ap_sig_allocacmp_k_load;
                select_ln220_2_reg_576 <= select_ln220_2_fu_374_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter6_stage0, ap_idle_pp0_0to5, ap_idle_pp0_1to7, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    DataRAM_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_1_addr_reg_599_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_1_address0 <= DataRAM_1_addr_reg_599_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_1_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_1_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_1_ce0 <= ap_const_logic_1;
        else 
            DataRAM_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_1_ce1 <= ap_const_logic_1;
        else 
            DataRAM_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_1_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_1_we0 <= ap_const_logic_1;
        else 
            DataRAM_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_2_addr_reg_610_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_2_address0 <= DataRAM_2_addr_reg_610_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_2_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_2_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_2_ce0 <= ap_const_logic_1;
        else 
            DataRAM_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_2_ce1 <= ap_const_logic_1;
        else 
            DataRAM_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_2_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_2_we0 <= ap_const_logic_1;
        else 
            DataRAM_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_3_addr_reg_621_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_3_address0 <= DataRAM_3_addr_reg_621_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_3_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_3_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_3_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_3_ce0 <= ap_const_logic_1;
        else 
            DataRAM_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_3_ce1 <= ap_const_logic_1;
        else 
            DataRAM_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_3_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_3_we0 <= ap_const_logic_1;
        else 
            DataRAM_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_4_addr_reg_632_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_4_address0 <= DataRAM_4_addr_reg_632_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_4_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_4_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_4_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_4_ce0 <= ap_const_logic_1;
        else 
            DataRAM_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_4_ce1 <= ap_const_logic_1;
        else 
            DataRAM_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_4_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_4_we0 <= ap_const_logic_1;
        else 
            DataRAM_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_5_addr_reg_643_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_5_address0 <= DataRAM_5_addr_reg_643_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_5_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_5_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_5_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_5_ce0 <= ap_const_logic_1;
        else 
            DataRAM_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_5_ce1 <= ap_const_logic_1;
        else 
            DataRAM_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_5_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_5_we0 <= ap_const_logic_1;
        else 
            DataRAM_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_6_addr_reg_654_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_6_address0 <= DataRAM_6_addr_reg_654_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_6_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_6_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_6_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_6_ce0 <= ap_const_logic_1;
        else 
            DataRAM_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_6_ce1 <= ap_const_logic_1;
        else 
            DataRAM_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_6_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_6_we0 <= ap_const_logic_1;
        else 
            DataRAM_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_7_addr_reg_665_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_7_address0 <= DataRAM_7_addr_reg_665_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_7_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_7_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_7_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_7_ce0 <= ap_const_logic_1;
        else 
            DataRAM_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_7_ce1 <= ap_const_logic_1;
        else 
            DataRAM_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_7_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_7_we0 <= ap_const_logic_1;
        else 
            DataRAM_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, DataRAM_addr_reg_588_pp0_iter6_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln231_2_fu_444_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_address0 <= DataRAM_addr_reg_588_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_address0 <= zext_ln231_2_fu_444_p1(13 - 1 downto 0);
        else 
            DataRAM_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    DataRAM_address1 <= zext_ln230_2_fu_424_p1(13 - 1 downto 0);

    DataRAM_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            DataRAM_ce0 <= ap_const_logic_1;
        else 
            DataRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            DataRAM_ce1 <= ap_const_logic_1;
        else 
            DataRAM_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_d0 <= grp_Configurable_PE_fu_4766_p_dout0;

    DataRAM_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, trunc_ln226_1_reg_676_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (trunc_ln226_1_reg_676_pp0_iter6_reg = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DataRAM_we0 <= ap_const_logic_1;
        else 
            DataRAM_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln220_1_fu_362_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_load) + unsigned(ap_const_lv7_1));
    add_ln220_fu_350_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten97_load) + unsigned(ap_const_lv13_1));
    add_ln226_fu_508_p2 <= std_logic_vector(unsigned(select_ln220_reg_583) + unsigned(ap_const_lv7_1));
    add_ln231_3_fu_394_p2 <= std_logic_vector(unsigned(trunc_ln230_fu_388_p1) + unsigned(zext_ln230_fu_391_p1));
    add_ln231_4_fu_406_p2 <= std_logic_vector(unsigned(trunc_ln231_fu_400_p1) + unsigned(zext_ln231_fu_403_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, icmp_ln220_reg_557)
    begin
        if (((icmp_ln220_reg_557 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter6_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, icmp_ln220_reg_557_pp0_iter5_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln220_reg_557_pp0_iter5_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter6_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter6_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten97_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten97_fu_92)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten97_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten97_load <= indvar_flatten97_fu_92;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_88)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_88;
        end if; 
    end process;


    ap_sig_allocacmp_k_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_84, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_k_load <= k_fu_84;
        end if; 
    end process;

    empty_fu_412_p1 <= select_ln220_fu_382_p3(3 - 1 downto 0);
    grp_Configurable_PE_fu_4766_p_din1 <= SubInput1_reg_682;
    grp_Configurable_PE_fu_4766_p_din2 <= SubInput2_reg_687;
    grp_Configurable_PE_fu_4766_p_din3 <= ap_const_lv2_1;
    grp_Configurable_PE_fu_4766_p_din4 <= ap_const_lv2_1;
    icmp_ln220_fu_344_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten97_load = ap_const_lv13_1000) else "0";
    icmp_ln226_fu_368_p2 <= "1" when (ap_sig_allocacmp_k_load = ap_const_lv7_40) else "0";
    select_ln220_2_fu_374_p3 <= 
        add_ln220_1_fu_362_p2 when (icmp_ln226_fu_368_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    select_ln220_fu_382_p3 <= 
        ap_const_lv7_0 when (icmp_ln226_reg_571(0) = '1') else 
        k_load_reg_566;
    tmp_57_fu_436_p3 <= (add_ln231_4_fu_406_p2 & empty_fu_412_p1);
    tmp_s_fu_416_p3 <= (add_ln231_3_fu_394_p2 & empty_fu_412_p1);
    trunc_ln230_fu_388_p1 <= add_ln230(10 - 1 downto 0);
    trunc_ln231_fu_400_p1 <= add_ln231(10 - 1 downto 0);
    zext_ln230_2_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_416_p3),64));
    zext_ln230_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln220_2_reg_576),10));
    zext_ln231_2_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_436_p3),64));
    zext_ln231_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln220_2_reg_576),10));
end behav;
