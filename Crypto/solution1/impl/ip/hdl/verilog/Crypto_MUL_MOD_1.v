// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Crypto_MUL_MOD_1 (
        ap_clk,
        ap_rst,
        input1_val,
        input2_val,
        MOD_INDEX,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] input1_val;
input  [31:0] input2_val;
input  [1:0] MOD_INDEX;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [1:0] MOD_INDEX_read_reg_539;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter1_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter2_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter3_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter4_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter5_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter6_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter7_reg;
reg   [1:0] MOD_INDEX_read_reg_539_pp0_iter8_reg;
wire   [31:0] zext_ln17_fu_110_p1;
wire   [31:0] zext_ln18_fu_124_p1;
wire   [31:0] zext_ln19_fu_128_p1;
wire   [31:0] zext_ln20_fu_142_p1;
wire   [31:0] grp_fu_146_p2;
reg   [31:0] temp1_reg_569;
reg   [31:0] temp1_reg_569_pp0_iter2_reg;
reg   [31:0] temp1_reg_569_pp0_iter3_reg;
wire   [31:0] grp_fu_152_p2;
reg   [31:0] temp2_reg_574;
wire   [31:0] grp_fu_158_p2;
reg   [31:0] temp4_reg_579;
reg   [31:0] temp4_reg_579_pp0_iter2_reg;
reg   [31:0] temp4_reg_579_pp0_iter3_reg;
wire   [32:0] grp_fu_523_p3;
reg   [32:0] add_ln30_reg_589;
wire   [63:0] res_mult_fu_184_p2;
reg   [63:0] res_mult_reg_594;
reg   [63:0] res_mult_reg_594_pp0_iter5_reg;
reg   [63:0] res_mult_reg_594_pp0_iter6_reg;
reg   [63:0] res_mult_reg_594_pp0_iter7_reg;
reg   [63:0] res_mult_reg_594_pp0_iter8_reg;
reg   [63:0] res_mult_reg_594_pp0_iter9_reg;
reg   [63:0] res_mult_reg_594_pp0_iter10_reg;
reg   [15:0] input1_low_3_reg_599;
reg   [15:0] input1_high_2_reg_604;
wire   [31:0] zext_ln17_4_fu_225_p1;
wire   [31:0] zext_ln18_2_fu_228_p1;
wire   [31:0] zext_ln19_3_fu_231_p1;
wire   [31:0] zext_ln20_3_fu_249_p1;
wire   [31:0] grp_fu_253_p2;
reg   [31:0] temp1_3_reg_633;
reg   [31:0] temp1_3_reg_633_pp0_iter7_reg;
wire   [31:0] grp_fu_259_p2;
reg   [31:0] temp2_3_reg_639;
wire   [31:0] grp_fu_265_p2;
reg   [31:0] temp3_3_reg_645;
wire   [31:0] grp_fu_271_p2;
reg   [31:0] temp4_3_reg_651;
reg   [31:0] temp4_3_reg_651_pp0_iter7_reg;
wire   [15:0] trunc_ln29_fu_277_p1;
reg   [15:0] trunc_ln29_reg_656;
reg   [15:0] trunc_ln29_reg_656_pp0_iter7_reg;
wire   [31:0] add_ln30_5_fu_287_p2;
reg   [31:0] add_ln30_5_reg_661;
wire   [32:0] add_ln30_3_fu_291_p2;
reg   [32:0] add_ln30_3_reg_666;
reg   [15:0] res_mult_shift_part_reg_671;
reg   [15:0] trunc_ln6_reg_677;
wire   [30:0] mod_fu_359_p5;
reg   [30:0] mod_reg_683;
reg   [30:0] mod_reg_683_pp0_iter10_reg;
reg   [30:0] mod_reg_683_pp0_iter11_reg;
reg   [30:0] mod_reg_683_pp0_iter12_reg;
reg   [30:0] mod_reg_683_pp0_iter13_reg;
wire   [31:0] zext_ln19_4_fu_380_p1;
wire   [30:0] zext_ln20_4_fu_394_p1;
wire   [31:0] grp_fu_398_p2;
reg   [31:0] temp1_4_reg_721;
wire   [31:0] grp_fu_410_p2;
reg   [31:0] temp3_4_reg_726;
wire   [30:0] grp_fu_416_p2;
reg   [30:0] temp4_4_reg_731;
wire   [63:0] res_shift_fu_435_p2;
reg   [63:0] res_shift_reg_741;
reg   [63:0] res_shift_reg_741_pp0_iter12_reg;
wire   [32:0] grp_fu_531_p3;
reg   [32:0] add_ln30_4_reg_746;
wire   [63:0] sub_ln85_fu_451_p2;
reg   [63:0] sub_ln85_reg_751;
wire    ap_block_pp0_stage0;
wire   [15:0] input1_low_fu_106_p1;
wire   [15:0] input1_high_fu_114_p4;
wire   [15:0] input2_low_fu_102_p1;
wire   [15:0] input2_high_fu_132_p4;
wire   [15:0] grp_fu_146_p0;
wire   [15:0] grp_fu_146_p1;
wire   [15:0] grp_fu_152_p0;
wire   [15:0] grp_fu_152_p1;
wire   [15:0] grp_fu_158_p0;
wire   [15:0] grp_fu_158_p1;
wire   [48:0] sum2_fu_173_p3;
wire   [63:0] sum1_fu_167_p3;
wire   [63:0] zext_ln28_fu_180_p1;
wire   [19:0] m_fu_210_p5;
wire   [15:0] input2_low_3_fu_221_p1;
wire   [3:0] input2_high_3_fu_235_p4;
wire  signed [15:0] sext_ln20_fu_245_p1;
wire   [15:0] grp_fu_253_p0;
wire   [15:0] grp_fu_253_p1;
wire   [15:0] grp_fu_259_p0;
wire   [15:0] grp_fu_259_p1;
wire   [15:0] grp_fu_265_p0;
wire   [15:0] grp_fu_265_p1;
wire   [15:0] grp_fu_271_p0;
wire   [15:0] grp_fu_271_p1;
wire   [32:0] zext_ln30_7_fu_281_p1;
wire   [32:0] zext_ln30_8_fu_284_p1;
wire   [48:0] sum2_3_fu_303_p3;
wire   [63:0] zext_ln28_4_fu_310_p1;
wire   [63:0] sum1_3_fu_297_p3;
wire   [47:0] trunc_ln5_fu_320_p3;
wire   [47:0] tmp_fu_314_p3;
wire   [47:0] add_ln74_fu_333_p2;
wire   [63:0] res_mult_shift_fu_327_p2;
wire   [15:0] input2_low_4_fu_370_p1;
wire   [14:0] input2_high_4_fu_384_p4;
wire   [15:0] grp_fu_398_p0;
wire   [15:0] grp_fu_398_p1;
wire   [15:0] grp_fu_410_p0;
wire   [15:0] grp_fu_410_p1;
wire   [14:0] grp_fu_416_p0;
wire   [15:0] grp_fu_416_p1;
wire   [62:0] sum1_4_fu_422_p3;
wire   [63:0] zext_ln28_5_fu_428_p1;
wire   [48:0] sum2_4_fu_440_p3;
wire   [63:0] zext_ln28_6_fu_447_p1;
wire   [63:0] zext_ln89_fu_456_p1;
wire   [31:0] zext_ln90_cast_fu_464_p3;
wire   [63:0] zext_ln90_fu_471_p1;
wire   [63:0] sub_ln89_fu_459_p2;
wire   [63:0] sub_ln90_fu_475_p2;
wire   [0:0] tmp_4_fu_488_p3;
wire   [31:0] trunc_ln92_3_fu_499_p1;
wire   [31:0] trunc_ln92_4_fu_503_p1;
wire   [0:0] tmp_3_fu_480_p3;
wire   [31:0] trunc_ln92_fu_496_p1;
wire   [31:0] select_ln92_fu_507_p3;
wire   [15:0] grp_fu_523_p0;
wire   [15:0] grp_fu_523_p1;
wire   [31:0] grp_fu_523_p2;
wire   [15:0] grp_fu_531_p0;
wire   [14:0] grp_fu_531_p1;
wire   [31:0] grp_fu_531_p2;
reg    grp_fu_146_ce;
reg    grp_fu_152_ce;
reg    grp_fu_158_ce;
reg    grp_fu_253_ce;
reg    grp_fu_259_ce;
reg    grp_fu_265_ce;
reg    grp_fu_271_ce;
reg    grp_fu_398_ce;
reg    grp_fu_410_ce;
reg    grp_fu_416_ce;
wire   [31:0] select_ln92_2_fu_515_p3;
reg    grp_fu_523_ce;
reg    grp_fu_531_ce;
reg    ap_ce_reg;
reg   [31:0] input1_val_int_reg;
reg   [31:0] input2_val_int_reg;
reg   [1:0] MOD_INDEX_int_reg;
reg   [31:0] ap_return_int_reg;
wire   [31:0] grp_fu_398_p00;
wire   [31:0] grp_fu_410_p10;
wire   [30:0] grp_fu_416_p10;
wire   [32:0] grp_fu_523_p20;
wire   [30:0] grp_fu_531_p00;
wire   [32:0] grp_fu_531_p20;

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U412(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_146_p0),
    .din1(grp_fu_146_p1),
    .ce(grp_fu_146_ce),
    .dout(grp_fu_146_p2)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U413(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_152_p0),
    .din1(grp_fu_152_p1),
    .ce(grp_fu_152_ce),
    .dout(grp_fu_152_p2)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U414(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_158_p0),
    .din1(grp_fu_158_p1),
    .ce(grp_fu_158_ce),
    .dout(grp_fu_158_p2)
);

Crypto_mux_3_2_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
mux_3_2_20_1_1_U415(
    .din0(20'd1015804),
    .din1(20'd753680),
    .din2(20'd524347),
    .din3(MOD_INDEX_read_reg_539_pp0_iter4_reg),
    .dout(m_fu_210_p5)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U416(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_253_p0),
    .din1(grp_fu_253_p1),
    .ce(grp_fu_253_ce),
    .dout(grp_fu_253_p2)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U417(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_259_p0),
    .din1(grp_fu_259_p1),
    .ce(grp_fu_259_ce),
    .dout(grp_fu_259_p2)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U418(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_265_p0),
    .din1(grp_fu_265_p1),
    .ce(grp_fu_265_ce),
    .dout(grp_fu_265_p2)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U419(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_271_p0),
    .din1(grp_fu_271_p1),
    .ce(grp_fu_271_ce),
    .dout(grp_fu_271_p2)
);

Crypto_mux_3_2_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_3_2_31_1_1_U420(
    .din0(31'd1073750017),
    .din1(31'd1073815553),
    .din2(31'd1073872897),
    .din3(MOD_INDEX_read_reg_539_pp0_iter8_reg),
    .dout(mod_fu_359_p5)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U421(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_398_p0),
    .din1(grp_fu_398_p1),
    .ce(grp_fu_398_ce),
    .dout(grp_fu_398_p2)
);

Crypto_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U422(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_410_p0),
    .din1(grp_fu_410_p1),
    .ce(grp_fu_410_ce),
    .dout(grp_fu_410_p2)
);

Crypto_mul_15ns_16ns_31_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_15ns_16ns_31_2_1_U423(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_416_p0),
    .din1(grp_fu_416_p1),
    .ce(grp_fu_416_ce),
    .dout(grp_fu_416_p2)
);

Crypto_mac_muladd_16ns_16ns_32ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_16ns_16ns_32ns_33_4_1_U424(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_523_p0),
    .din1(grp_fu_523_p1),
    .din2(grp_fu_523_p2),
    .ce(grp_fu_523_ce),
    .dout(grp_fu_523_p3)
);

Crypto_mac_muladd_16ns_15ns_32ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_16ns_15ns_32ns_33_4_1_U425(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_531_p0),
    .din1(grp_fu_531_p1),
    .din2(grp_fu_531_p2),
    .ce(grp_fu_531_ce),
    .dout(grp_fu_531_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        MOD_INDEX_int_reg <= MOD_INDEX;
        input1_val_int_reg <= input1_val;
        input2_val_int_reg <= input2_val;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        MOD_INDEX_read_reg_539 <= MOD_INDEX_int_reg;
        MOD_INDEX_read_reg_539_pp0_iter1_reg <= MOD_INDEX_read_reg_539;
        MOD_INDEX_read_reg_539_pp0_iter2_reg <= MOD_INDEX_read_reg_539_pp0_iter1_reg;
        MOD_INDEX_read_reg_539_pp0_iter3_reg <= MOD_INDEX_read_reg_539_pp0_iter2_reg;
        MOD_INDEX_read_reg_539_pp0_iter4_reg <= MOD_INDEX_read_reg_539_pp0_iter3_reg;
        MOD_INDEX_read_reg_539_pp0_iter5_reg <= MOD_INDEX_read_reg_539_pp0_iter4_reg;
        MOD_INDEX_read_reg_539_pp0_iter6_reg <= MOD_INDEX_read_reg_539_pp0_iter5_reg;
        MOD_INDEX_read_reg_539_pp0_iter7_reg <= MOD_INDEX_read_reg_539_pp0_iter6_reg;
        MOD_INDEX_read_reg_539_pp0_iter8_reg <= MOD_INDEX_read_reg_539_pp0_iter7_reg;
        add_ln30_3_reg_666 <= add_ln30_3_fu_291_p2;
        add_ln30_4_reg_746 <= grp_fu_531_p3;
        add_ln30_5_reg_661 <= add_ln30_5_fu_287_p2;
        add_ln30_reg_589 <= grp_fu_523_p3;
        input1_high_2_reg_604 <= {{res_mult_fu_184_p2[61:46]}};
        input1_low_3_reg_599 <= {{res_mult_fu_184_p2[45:30]}};
        mod_reg_683 <= mod_fu_359_p5;
        mod_reg_683_pp0_iter10_reg <= mod_reg_683;
        mod_reg_683_pp0_iter11_reg <= mod_reg_683_pp0_iter10_reg;
        mod_reg_683_pp0_iter12_reg <= mod_reg_683_pp0_iter11_reg;
        mod_reg_683_pp0_iter13_reg <= mod_reg_683_pp0_iter12_reg;
        res_mult_reg_594 <= res_mult_fu_184_p2;
        res_mult_reg_594_pp0_iter10_reg <= res_mult_reg_594_pp0_iter9_reg;
        res_mult_reg_594_pp0_iter5_reg <= res_mult_reg_594;
        res_mult_reg_594_pp0_iter6_reg <= res_mult_reg_594_pp0_iter5_reg;
        res_mult_reg_594_pp0_iter7_reg <= res_mult_reg_594_pp0_iter6_reg;
        res_mult_reg_594_pp0_iter8_reg <= res_mult_reg_594_pp0_iter7_reg;
        res_mult_reg_594_pp0_iter9_reg <= res_mult_reg_594_pp0_iter8_reg;
        res_mult_shift_part_reg_671 <= {{add_ln74_fu_333_p2[47:32]}};
        res_shift_reg_741 <= res_shift_fu_435_p2;
        res_shift_reg_741_pp0_iter12_reg <= res_shift_reg_741;
        sub_ln85_reg_751 <= sub_ln85_fu_451_p2;
        temp1_3_reg_633 <= grp_fu_253_p2;
        temp1_3_reg_633_pp0_iter7_reg <= temp1_3_reg_633;
        temp1_4_reg_721 <= grp_fu_398_p2;
        temp1_reg_569 <= grp_fu_146_p2;
        temp1_reg_569_pp0_iter2_reg <= temp1_reg_569;
        temp1_reg_569_pp0_iter3_reg <= temp1_reg_569_pp0_iter2_reg;
        temp2_3_reg_639 <= grp_fu_259_p2;
        temp2_reg_574 <= grp_fu_152_p2;
        temp3_3_reg_645 <= grp_fu_265_p2;
        temp3_4_reg_726 <= grp_fu_410_p2;
        temp4_3_reg_651 <= grp_fu_271_p2;
        temp4_3_reg_651_pp0_iter7_reg <= temp4_3_reg_651;
        temp4_4_reg_731 <= grp_fu_416_p2;
        temp4_reg_579 <= grp_fu_158_p2;
        temp4_reg_579_pp0_iter2_reg <= temp4_reg_579;
        temp4_reg_579_pp0_iter3_reg <= temp4_reg_579_pp0_iter2_reg;
        trunc_ln29_reg_656 <= trunc_ln29_fu_277_p1;
        trunc_ln29_reg_656_pp0_iter7_reg <= trunc_ln29_reg_656;
        trunc_ln6_reg_677 <= {{res_mult_shift_fu_327_p2[63:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln92_2_fu_515_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln92_2_fu_515_p3;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_146_ce = 1'b1;
    end else begin
        grp_fu_146_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_152_ce = 1'b1;
    end else begin
        grp_fu_152_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_158_ce = 1'b1;
    end else begin
        grp_fu_158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_253_ce = 1'b1;
    end else begin
        grp_fu_253_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_259_ce = 1'b1;
    end else begin
        grp_fu_259_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_265_ce = 1'b1;
    end else begin
        grp_fu_265_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_271_ce = 1'b1;
    end else begin
        grp_fu_271_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_398_ce = 1'b1;
    end else begin
        grp_fu_398_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_410_ce = 1'b1;
    end else begin
        grp_fu_410_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_416_ce = 1'b1;
    end else begin
        grp_fu_416_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_523_ce = 1'b1;
    end else begin
        grp_fu_523_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_531_ce = 1'b1;
    end else begin
        grp_fu_531_ce = 1'b0;
    end
end

assign add_ln30_3_fu_291_p2 = (zext_ln30_7_fu_281_p1 + zext_ln30_8_fu_284_p1);

assign add_ln30_5_fu_287_p2 = (temp2_3_reg_639 + temp3_3_reg_645);

assign add_ln74_fu_333_p2 = (trunc_ln5_fu_320_p3 + tmp_fu_314_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign grp_fu_146_p0 = zext_ln19_fu_128_p1;

assign grp_fu_146_p1 = zext_ln17_fu_110_p1;

assign grp_fu_152_p0 = zext_ln20_fu_142_p1;

assign grp_fu_152_p1 = zext_ln17_fu_110_p1;

assign grp_fu_158_p0 = zext_ln20_fu_142_p1;

assign grp_fu_158_p1 = zext_ln18_fu_124_p1;

assign grp_fu_253_p0 = zext_ln17_4_fu_225_p1;

assign grp_fu_253_p1 = zext_ln19_3_fu_231_p1;

assign grp_fu_259_p0 = zext_ln17_4_fu_225_p1;

assign grp_fu_259_p1 = zext_ln20_3_fu_249_p1;

assign grp_fu_265_p0 = zext_ln18_2_fu_228_p1;

assign grp_fu_265_p1 = zext_ln19_3_fu_231_p1;

assign grp_fu_271_p0 = zext_ln18_2_fu_228_p1;

assign grp_fu_271_p1 = zext_ln20_3_fu_249_p1;

assign grp_fu_398_p0 = grp_fu_398_p00;

assign grp_fu_398_p00 = res_mult_shift_part_reg_671;

assign grp_fu_398_p1 = zext_ln19_4_fu_380_p1;

assign grp_fu_410_p0 = zext_ln19_4_fu_380_p1;

assign grp_fu_410_p1 = grp_fu_410_p10;

assign grp_fu_410_p10 = trunc_ln6_reg_677;

assign grp_fu_416_p0 = zext_ln20_4_fu_394_p1;

assign grp_fu_416_p1 = grp_fu_416_p10;

assign grp_fu_416_p10 = trunc_ln6_reg_677;

assign grp_fu_523_p0 = zext_ln19_fu_128_p1;

assign grp_fu_523_p1 = zext_ln18_fu_124_p1;

assign grp_fu_523_p2 = grp_fu_523_p20;

assign grp_fu_523_p20 = temp2_reg_574;

assign grp_fu_531_p0 = grp_fu_531_p00;

assign grp_fu_531_p00 = res_mult_shift_part_reg_671;

assign grp_fu_531_p1 = zext_ln20_4_fu_394_p1;

assign grp_fu_531_p2 = grp_fu_531_p20;

assign grp_fu_531_p20 = temp3_4_reg_726;

assign input1_high_fu_114_p4 = {{input1_val_int_reg[31:16]}};

assign input1_low_fu_106_p1 = input1_val_int_reg[15:0];

assign input2_high_3_fu_235_p4 = {{m_fu_210_p5[19:16]}};

assign input2_high_4_fu_384_p4 = {{mod_fu_359_p5[30:16]}};

assign input2_high_fu_132_p4 = {{input2_val_int_reg[31:16]}};

assign input2_low_3_fu_221_p1 = m_fu_210_p5[15:0];

assign input2_low_4_fu_370_p1 = mod_fu_359_p5[15:0];

assign input2_low_fu_102_p1 = input2_val_int_reg[15:0];

assign res_mult_fu_184_p2 = (sum1_fu_167_p3 + zext_ln28_fu_180_p1);

assign res_mult_shift_fu_327_p2 = (zext_ln28_4_fu_310_p1 + sum1_3_fu_297_p3);

assign res_shift_fu_435_p2 = (res_mult_reg_594_pp0_iter10_reg - zext_ln28_5_fu_428_p1);

assign select_ln92_2_fu_515_p3 = ((tmp_3_fu_480_p3[0:0] == 1'b1) ? trunc_ln92_fu_496_p1 : select_ln92_fu_507_p3);

assign select_ln92_fu_507_p3 = ((tmp_4_fu_488_p3[0:0] == 1'b1) ? trunc_ln92_3_fu_499_p1 : trunc_ln92_4_fu_503_p1);

assign sext_ln20_fu_245_p1 = $signed(input2_high_3_fu_235_p4);

assign sub_ln85_fu_451_p2 = (res_shift_reg_741_pp0_iter12_reg - zext_ln28_6_fu_447_p1);

assign sub_ln89_fu_459_p2 = (sub_ln85_reg_751 - zext_ln89_fu_456_p1);

assign sub_ln90_fu_475_p2 = (sub_ln85_reg_751 - zext_ln90_fu_471_p1);

assign sum1_3_fu_297_p3 = {{temp4_3_reg_651_pp0_iter7_reg}, {temp1_3_reg_633_pp0_iter7_reg}};

assign sum1_4_fu_422_p3 = {{temp4_4_reg_731}, {temp1_4_reg_721}};

assign sum1_fu_167_p3 = {{temp4_reg_579_pp0_iter3_reg}, {temp1_reg_569_pp0_iter3_reg}};

assign sum2_3_fu_303_p3 = {{add_ln30_3_reg_666}, {16'd0}};

assign sum2_4_fu_440_p3 = {{add_ln30_4_reg_746}, {16'd0}};

assign sum2_fu_173_p3 = {{add_ln30_reg_589}, {16'd0}};

assign tmp_3_fu_480_p3 = sub_ln89_fu_459_p2[32'd63];

assign tmp_4_fu_488_p3 = sub_ln90_fu_475_p2[32'd63];

assign tmp_fu_314_p3 = {{trunc_ln29_reg_656_pp0_iter7_reg}, {temp1_3_reg_633_pp0_iter7_reg}};

assign trunc_ln29_fu_277_p1 = grp_fu_271_p2[15:0];

assign trunc_ln5_fu_320_p3 = {{add_ln30_5_reg_661}, {16'd0}};

assign trunc_ln92_3_fu_499_p1 = sub_ln89_fu_459_p2[31:0];

assign trunc_ln92_4_fu_503_p1 = sub_ln90_fu_475_p2[31:0];

assign trunc_ln92_fu_496_p1 = sub_ln85_reg_751[31:0];

assign zext_ln17_4_fu_225_p1 = input1_low_3_reg_599;

assign zext_ln17_fu_110_p1 = input1_low_fu_106_p1;

assign zext_ln18_2_fu_228_p1 = input1_high_2_reg_604;

assign zext_ln18_fu_124_p1 = input1_high_fu_114_p4;

assign zext_ln19_3_fu_231_p1 = input2_low_3_fu_221_p1;

assign zext_ln19_4_fu_380_p1 = input2_low_4_fu_370_p1;

assign zext_ln19_fu_128_p1 = input2_low_fu_102_p1;

assign zext_ln20_3_fu_249_p1 = $unsigned(sext_ln20_fu_245_p1);

assign zext_ln20_4_fu_394_p1 = input2_high_4_fu_384_p4;

assign zext_ln20_fu_142_p1 = input2_high_fu_132_p4;

assign zext_ln28_4_fu_310_p1 = sum2_3_fu_303_p3;

assign zext_ln28_5_fu_428_p1 = sum1_4_fu_422_p3;

assign zext_ln28_6_fu_447_p1 = sum2_4_fu_440_p3;

assign zext_ln28_fu_180_p1 = sum2_fu_173_p3;

assign zext_ln30_7_fu_281_p1 = temp2_3_reg_639;

assign zext_ln30_8_fu_284_p1 = temp3_3_reg_645;

assign zext_ln89_fu_456_p1 = mod_reg_683_pp0_iter13_reg;

assign zext_ln90_cast_fu_464_p3 = {{mod_reg_683_pp0_iter13_reg}, {1'd0}};

assign zext_ln90_fu_471_p1 = zext_ln90_cast_fu_464_p3;

endmodule //Crypto_MUL_MOD_1
