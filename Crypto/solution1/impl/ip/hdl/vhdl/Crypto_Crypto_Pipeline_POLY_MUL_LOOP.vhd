-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Crypto_Crypto_Pipeline_POLY_MUL_LOOP is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    trunc_ln : IN STD_LOGIC_VECTOR (1 downto 0);
    DataRAM_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_ce0 : OUT STD_LOGIC;
    DataRAM_we0 : OUT STD_LOGIC;
    DataRAM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_1_ce0 : OUT STD_LOGIC;
    DataRAM_1_we0 : OUT STD_LOGIC;
    DataRAM_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_2_ce0 : OUT STD_LOGIC;
    DataRAM_2_we0 : OUT STD_LOGIC;
    DataRAM_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_3_ce0 : OUT STD_LOGIC;
    DataRAM_3_we0 : OUT STD_LOGIC;
    DataRAM_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_4_ce0 : OUT STD_LOGIC;
    DataRAM_4_we0 : OUT STD_LOGIC;
    DataRAM_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_5_ce0 : OUT STD_LOGIC;
    DataRAM_5_we0 : OUT STD_LOGIC;
    DataRAM_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_6_ce0 : OUT STD_LOGIC;
    DataRAM_6_we0 : OUT STD_LOGIC;
    DataRAM_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_7_ce0 : OUT STD_LOGIC;
    DataRAM_7_we0 : OUT STD_LOGIC;
    DataRAM_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_8_ce0 : OUT STD_LOGIC;
    DataRAM_8_we0 : OUT STD_LOGIC;
    DataRAM_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_9_ce0 : OUT STD_LOGIC;
    DataRAM_9_we0 : OUT STD_LOGIC;
    DataRAM_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_10_ce0 : OUT STD_LOGIC;
    DataRAM_10_we0 : OUT STD_LOGIC;
    DataRAM_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_11_ce0 : OUT STD_LOGIC;
    DataRAM_11_we0 : OUT STD_LOGIC;
    DataRAM_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_12_ce0 : OUT STD_LOGIC;
    DataRAM_12_we0 : OUT STD_LOGIC;
    DataRAM_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_13_ce0 : OUT STD_LOGIC;
    DataRAM_13_we0 : OUT STD_LOGIC;
    DataRAM_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_14_ce0 : OUT STD_LOGIC;
    DataRAM_14_we0 : OUT STD_LOGIC;
    DataRAM_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_15_ce0 : OUT STD_LOGIC;
    DataRAM_15_we0 : OUT STD_LOGIC;
    DataRAM_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_16_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_16_ce0 : OUT STD_LOGIC;
    DataRAM_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_17_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_17_ce0 : OUT STD_LOGIC;
    DataRAM_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_18_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_18_ce0 : OUT STD_LOGIC;
    DataRAM_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_19_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_19_ce0 : OUT STD_LOGIC;
    DataRAM_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_20_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_20_ce0 : OUT STD_LOGIC;
    DataRAM_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_21_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_21_ce0 : OUT STD_LOGIC;
    DataRAM_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_22_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_22_ce0 : OUT STD_LOGIC;
    DataRAM_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_23_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_23_ce0 : OUT STD_LOGIC;
    DataRAM_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_24_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_24_ce0 : OUT STD_LOGIC;
    DataRAM_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_25_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_25_ce0 : OUT STD_LOGIC;
    DataRAM_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_26_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_26_ce0 : OUT STD_LOGIC;
    DataRAM_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_27_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_27_ce0 : OUT STD_LOGIC;
    DataRAM_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_28_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_28_ce0 : OUT STD_LOGIC;
    DataRAM_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_29_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_29_ce0 : OUT STD_LOGIC;
    DataRAM_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_30_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_30_ce0 : OUT STD_LOGIC;
    DataRAM_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    DataRAM_31_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    DataRAM_31_ce0 : OUT STD_LOGIC;
    DataRAM_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Crypto_Crypto_Pipeline_POLY_MUL_LOOP is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln98_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal grp_MUL_MOD_1_fu_558_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal icmp_ln98_reg_671 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_680 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln98_fu_599_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln98_reg_675 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_fu_605_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal DataRAM_addr_reg_684 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_1_addr_reg_689 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_2_addr_reg_694 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_3_addr_reg_699 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_4_addr_reg_704 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_5_addr_reg_709 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_6_addr_reg_714 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_7_addr_reg_719 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_8_addr_reg_724 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_9_addr_reg_729 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_10_addr_reg_734 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_11_addr_reg_739 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_12_addr_reg_744 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_13_addr_reg_749 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_14_addr_reg_754 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_15_addr_reg_759 : STD_LOGIC_VECTOR (7 downto 0);
    signal DataRAM_14_load_reg_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal DataRAM_30_load_reg_849 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_13_load_reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_29_load_reg_859 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_12_load_reg_864 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_28_load_reg_869 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_11_load_reg_874 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_27_load_reg_879 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_10_load_reg_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_26_load_reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_9_load_reg_894 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_25_load_reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_8_load_reg_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_24_load_reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_7_load_reg_914 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_23_load_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_6_load_reg_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_22_load_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_5_load_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_21_load_reg_939 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_4_load_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_20_load_reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_3_load_reg_954 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_19_load_reg_959 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_2_load_reg_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_18_load_reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_1_load_reg_974 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_17_load_reg_979 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_load_reg_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_16_load_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_15_load_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataRAM_31_load_reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MUL_MOD_1_fu_558_input1_val : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MUL_MOD_1_fu_558_input2_val : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MUL_MOD_1_fu_558_ap_ce : STD_LOGIC;
    signal ap_predicate_op133_call_state3 : BOOLEAN;
    signal ap_predicate_op134_call_state3 : BOOLEAN;
    signal ap_predicate_op135_call_state3 : BOOLEAN;
    signal ap_predicate_op136_call_state3 : BOOLEAN;
    signal ap_predicate_op137_call_state3 : BOOLEAN;
    signal ap_predicate_op138_call_state3 : BOOLEAN;
    signal ap_predicate_op139_call_state3 : BOOLEAN;
    signal ap_predicate_op140_call_state3 : BOOLEAN;
    signal ap_predicate_op141_call_state3 : BOOLEAN;
    signal ap_predicate_op142_call_state3 : BOOLEAN;
    signal ap_predicate_op143_call_state3 : BOOLEAN;
    signal ap_predicate_op144_call_state3 : BOOLEAN;
    signal ap_predicate_op145_call_state3 : BOOLEAN;
    signal ap_predicate_op146_call_state3 : BOOLEAN;
    signal ap_predicate_op147_call_state3 : BOOLEAN;
    signal ap_predicate_op148_call_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_state14_pp0_stage13_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_block_state15_pp0_stage14_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0_ignore_call2 : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0_ignore_call2 : BOOLEAN;
    signal zext_ln98_fu_619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_132 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_5 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln5_fu_609_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Crypto_MUL_MOD_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        MOD_INDEX : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component Crypto_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_MUL_MOD_1_fu_558 : component Crypto_MUL_MOD_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input1_val => grp_MUL_MOD_1_fu_558_input1_val,
        input2_val => grp_MUL_MOD_1_fu_558_input2_val,
        MOD_INDEX => trunc_ln,
        ap_return => grp_MUL_MOD_1_fu_558_ap_return,
        ap_ce => grp_MUL_MOD_1_fu_558_ap_ce);

    flow_control_loop_pipe_sequential_init_U : component Crypto_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1))) then 
                i_fu_132 <= ap_const_lv13_0;
            elsif (((icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i_fu_132 <= add_ln98_reg_675;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                DataRAM_10_addr_reg_734 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_11_addr_reg_739 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_12_addr_reg_744 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_13_addr_reg_749 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_14_addr_reg_754 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_15_addr_reg_759 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_1_addr_reg_689 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_2_addr_reg_694 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_3_addr_reg_699 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_4_addr_reg_704 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_5_addr_reg_709 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_6_addr_reg_714 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_7_addr_reg_719 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_8_addr_reg_724 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_9_addr_reg_729 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                DataRAM_addr_reg_684 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
                empty_reg_680 <= empty_fu_605_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_A) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_10_load_reg_884 <= DataRAM_10_q0;
                DataRAM_26_load_reg_889 <= DataRAM_26_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_B) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_11_load_reg_874 <= DataRAM_11_q0;
                DataRAM_27_load_reg_879 <= DataRAM_27_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_C) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_12_load_reg_864 <= DataRAM_12_q0;
                DataRAM_28_load_reg_869 <= DataRAM_28_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_D) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_13_load_reg_854 <= DataRAM_13_q0;
                DataRAM_29_load_reg_859 <= DataRAM_29_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_E) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_14_load_reg_844 <= DataRAM_14_q0;
                DataRAM_30_load_reg_849 <= DataRAM_30_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_F) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_15_load_reg_994 <= DataRAM_15_q0;
                DataRAM_31_load_reg_999 <= DataRAM_31_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_0) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_16_load_reg_989 <= DataRAM_16_q0;
                DataRAM_load_reg_984 <= DataRAM_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_1) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_17_load_reg_979 <= DataRAM_17_q0;
                DataRAM_1_load_reg_974 <= DataRAM_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_2) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_18_load_reg_969 <= DataRAM_18_q0;
                DataRAM_2_load_reg_964 <= DataRAM_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_3) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_19_load_reg_959 <= DataRAM_19_q0;
                DataRAM_3_load_reg_954 <= DataRAM_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_4) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_20_load_reg_949 <= DataRAM_20_q0;
                DataRAM_4_load_reg_944 <= DataRAM_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_5) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_21_load_reg_939 <= DataRAM_21_q0;
                DataRAM_5_load_reg_934 <= DataRAM_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_6) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_22_load_reg_929 <= DataRAM_22_q0;
                DataRAM_6_load_reg_924 <= DataRAM_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_7) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_23_load_reg_919 <= DataRAM_23_q0;
                DataRAM_7_load_reg_914 <= DataRAM_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_8) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_24_load_reg_909 <= DataRAM_24_q0;
                DataRAM_8_load_reg_904 <= DataRAM_8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_reg_680 = ap_const_lv4_9) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataRAM_25_load_reg_899 <= DataRAM_25_q0;
                DataRAM_9_load_reg_894 <= DataRAM_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                add_ln98_reg_675 <= add_ln98_fu_599_p2;
                icmp_ln98_reg_671 <= icmp_ln98_fu_593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((empty_reg_680 = ap_const_lv4_F) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_0) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_1) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_2) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_3) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_4) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_5) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_6) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_7) and (icmp_ln98_reg_671 
    = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_8) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_9) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_A) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_B) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_C) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_D) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((empty_reg_680 = ap_const_lv4_E) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then
                reg_565 <= grp_MUL_MOD_1_fu_558_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln98_fu_593_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    DataRAM_10_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_10_addr_reg_734, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_A) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_10_address0 <= DataRAM_10_addr_reg_734;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_A) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_10_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_10_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_10_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_A) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_A) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_10_ce0 <= ap_const_logic_1;
        else 
            DataRAM_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_10_d0 <= reg_565;

    DataRAM_10_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_A) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_10_we0 <= ap_const_logic_1;
        else 
            DataRAM_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_11_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_11_addr_reg_739, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_B) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_11_address0 <= DataRAM_11_addr_reg_739;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_B) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_11_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_11_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_11_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_B) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_B) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_11_ce0 <= ap_const_logic_1;
        else 
            DataRAM_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_11_d0 <= reg_565;

    DataRAM_11_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_B) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_11_we0 <= ap_const_logic_1;
        else 
            DataRAM_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_12_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_12_addr_reg_744, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_C) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_12_address0 <= DataRAM_12_addr_reg_744;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_C) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_12_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_12_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_12_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_C) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_C) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_12_ce0 <= ap_const_logic_1;
        else 
            DataRAM_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_12_d0 <= reg_565;

    DataRAM_12_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_C) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_12_we0 <= ap_const_logic_1;
        else 
            DataRAM_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_13_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_13_addr_reg_749, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_D) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_13_address0 <= DataRAM_13_addr_reg_749;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_D) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_13_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_13_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_13_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_D) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_D) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_13_ce0 <= ap_const_logic_1;
        else 
            DataRAM_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_13_d0 <= reg_565;

    DataRAM_13_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_D) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_13_we0 <= ap_const_logic_1;
        else 
            DataRAM_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_14_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_14_addr_reg_754, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_E) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_14_address0 <= DataRAM_14_addr_reg_754;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_E) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_14_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_14_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_14_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_E) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_E) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_14_ce0 <= ap_const_logic_1;
        else 
            DataRAM_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_14_d0 <= reg_565;

    DataRAM_14_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_E) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_14_we0 <= ap_const_logic_1;
        else 
            DataRAM_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_15_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_15_addr_reg_759, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_F) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_15_address0 <= DataRAM_15_addr_reg_759;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_F) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_15_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_15_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_15_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_F) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_F) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_15_ce0 <= ap_const_logic_1;
        else 
            DataRAM_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_15_d0 <= reg_565;

    DataRAM_15_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_F) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_15_we0 <= ap_const_logic_1;
        else 
            DataRAM_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_16_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_16_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_16_ce0 <= ap_const_logic_1;
        else 
            DataRAM_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_17_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_17_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_17_ce0 <= ap_const_logic_1;
        else 
            DataRAM_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_18_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_18_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_18_ce0 <= ap_const_logic_1;
        else 
            DataRAM_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_19_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_19_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_19_ce0 <= ap_const_logic_1;
        else 
            DataRAM_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_1_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_1_addr_reg_689, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_1) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_1_address0 <= DataRAM_1_addr_reg_689;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_1_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_1_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_1) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_1_ce0 <= ap_const_logic_1;
        else 
            DataRAM_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_1_d0 <= reg_565;

    DataRAM_1_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_1) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_1_we0 <= ap_const_logic_1;
        else 
            DataRAM_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_20_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_20_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_20_ce0 <= ap_const_logic_1;
        else 
            DataRAM_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_21_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_21_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_21_ce0 <= ap_const_logic_1;
        else 
            DataRAM_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_22_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_22_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_22_ce0 <= ap_const_logic_1;
        else 
            DataRAM_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_23_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_23_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_23_ce0 <= ap_const_logic_1;
        else 
            DataRAM_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_24_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_24_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_24_ce0 <= ap_const_logic_1;
        else 
            DataRAM_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_25_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_25_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_25_ce0 <= ap_const_logic_1;
        else 
            DataRAM_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_26_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_26_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_26_ce0 <= ap_const_logic_1;
        else 
            DataRAM_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_27_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_27_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_27_ce0 <= ap_const_logic_1;
        else 
            DataRAM_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_28_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_28_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_28_ce0 <= ap_const_logic_1;
        else 
            DataRAM_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_29_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_29_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_29_ce0 <= ap_const_logic_1;
        else 
            DataRAM_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_2_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_2_addr_reg_694, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_2) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_2_address0 <= DataRAM_2_addr_reg_694;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_2_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_2_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_2) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_2_ce0 <= ap_const_logic_1;
        else 
            DataRAM_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_2_d0 <= reg_565;

    DataRAM_2_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_2) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_2_we0 <= ap_const_logic_1;
        else 
            DataRAM_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_30_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_30_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_30_ce0 <= ap_const_logic_1;
        else 
            DataRAM_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_31_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);

    DataRAM_31_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            DataRAM_31_ce0 <= ap_const_logic_1;
        else 
            DataRAM_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_3_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_3_addr_reg_699, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_3) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_3_address0 <= DataRAM_3_addr_reg_699;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_3_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_3_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_3) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_3_ce0 <= ap_const_logic_1;
        else 
            DataRAM_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_3_d0 <= reg_565;

    DataRAM_3_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_3) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_3_we0 <= ap_const_logic_1;
        else 
            DataRAM_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_4_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_4_addr_reg_704, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_4) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_4_address0 <= DataRAM_4_addr_reg_704;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_4_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_4_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_4) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_4_ce0 <= ap_const_logic_1;
        else 
            DataRAM_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_4_d0 <= reg_565;

    DataRAM_4_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_4) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_4_we0 <= ap_const_logic_1;
        else 
            DataRAM_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_5_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_5_addr_reg_709, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_5) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_5_address0 <= DataRAM_5_addr_reg_709;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_5_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_5_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_5) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_5_ce0 <= ap_const_logic_1;
        else 
            DataRAM_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_5_d0 <= reg_565;

    DataRAM_5_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_5) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_5_we0 <= ap_const_logic_1;
        else 
            DataRAM_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_6_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_6_addr_reg_714, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_6) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_6_address0 <= DataRAM_6_addr_reg_714;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_6_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_6_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_6) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_6_ce0 <= ap_const_logic_1;
        else 
            DataRAM_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_6_d0 <= reg_565;

    DataRAM_6_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_6) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_6_we0 <= ap_const_logic_1;
        else 
            DataRAM_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_7_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_7_addr_reg_719, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_7) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_7_address0 <= DataRAM_7_addr_reg_719;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_7_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_7_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_7_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_7) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_7_ce0 <= ap_const_logic_1;
        else 
            DataRAM_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_7_d0 <= reg_565;

    DataRAM_7_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_7) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_7_we0 <= ap_const_logic_1;
        else 
            DataRAM_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_8_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_8_addr_reg_724, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_8) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_8_address0 <= DataRAM_8_addr_reg_724;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_8_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_8_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_8_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_8) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_8_ce0 <= ap_const_logic_1;
        else 
            DataRAM_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_8_d0 <= reg_565;

    DataRAM_8_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_8) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_8_we0 <= ap_const_logic_1;
        else 
            DataRAM_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_9_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_9_addr_reg_729, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_9) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_9_address0 <= DataRAM_9_addr_reg_729;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_9) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_9_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_9_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_9_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_9) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_9) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_9_ce0 <= ap_const_logic_1;
        else 
            DataRAM_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_9_d0 <= reg_565;

    DataRAM_9_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_9) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_9_we0 <= ap_const_logic_1;
        else 
            DataRAM_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DataRAM_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, DataRAM_addr_reg_684, zext_ln98_fu_619_p1)
    begin
        if (((empty_reg_680 = ap_const_lv4_0) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_address0 <= DataRAM_addr_reg_684;
        elsif (((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            DataRAM_address0 <= zext_ln98_fu_619_p1(8 - 1 downto 0);
        else 
            DataRAM_address0 <= "XXXXXXXX";
        end if; 
    end process;


    DataRAM_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680, empty_fu_605_p1, ap_start_int)
    begin
        if ((((icmp_ln98_fu_593_p2 = ap_const_lv1_0) and (empty_fu_605_p1 = ap_const_lv4_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)) or ((empty_reg_680 = ap_const_lv4_0) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            DataRAM_ce0 <= ap_const_logic_1;
        else 
            DataRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DataRAM_d0 <= reg_565;

    DataRAM_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln98_reg_671, empty_reg_680)
    begin
        if (((empty_reg_680 = ap_const_lv4_0) and (icmp_ln98_reg_671 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            DataRAM_we0 <= ap_const_logic_1;
        else 
            DataRAM_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln98_fu_599_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_5) + unsigned(ap_const_lv13_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_593_p2, ap_start_int)
    begin
        if (((icmp_ln98_fu_593_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op133_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op133_call_state3 <= ((empty_reg_680 = ap_const_lv4_E) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op134_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op134_call_state3 <= ((empty_reg_680 = ap_const_lv4_D) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op135_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op135_call_state3 <= ((empty_reg_680 = ap_const_lv4_C) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op136_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op136_call_state3 <= ((empty_reg_680 = ap_const_lv4_B) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op137_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op137_call_state3 <= ((empty_reg_680 = ap_const_lv4_A) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op138_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op138_call_state3 <= ((empty_reg_680 = ap_const_lv4_9) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op139_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op139_call_state3 <= ((empty_reg_680 = ap_const_lv4_8) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op140_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op140_call_state3 <= ((empty_reg_680 = ap_const_lv4_7) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op141_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op141_call_state3 <= ((empty_reg_680 = ap_const_lv4_6) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op142_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op142_call_state3 <= ((empty_reg_680 = ap_const_lv4_5) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op143_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op143_call_state3 <= ((empty_reg_680 = ap_const_lv4_4) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op144_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op144_call_state3 <= ((empty_reg_680 = ap_const_lv4_3) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op145_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op145_call_state3 <= ((empty_reg_680 = ap_const_lv4_2) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op146_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op146_call_state3 <= ((empty_reg_680 = ap_const_lv4_1) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op147_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op147_call_state3 <= ((empty_reg_680 = ap_const_lv4_0) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_call_state3_assign_proc : process(icmp_ln98_reg_671, empty_reg_680)
    begin
                ap_predicate_op148_call_state3 <= ((empty_reg_680 = ap_const_lv4_F) and (icmp_ln98_reg_671 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_5_assign_proc : process(ap_CS_fsm_state1, i_fu_132, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_5 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_i_5 <= i_fu_132;
        end if; 
    end process;

    empty_fu_605_p1 <= ap_sig_allocacmp_i_5(4 - 1 downto 0);

    grp_MUL_MOD_1_fu_558_ap_ce_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_MUL_MOD_1_fu_558_ap_ce <= ap_const_logic_1;
        else 
            grp_MUL_MOD_1_fu_558_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_MUL_MOD_1_fu_558_input1_val_assign_proc : process(DataRAM_14_load_reg_844, DataRAM_13_load_reg_854, DataRAM_12_load_reg_864, DataRAM_11_load_reg_874, DataRAM_10_load_reg_884, DataRAM_9_load_reg_894, DataRAM_8_load_reg_904, DataRAM_7_load_reg_914, DataRAM_6_load_reg_924, DataRAM_5_load_reg_934, DataRAM_4_load_reg_944, DataRAM_3_load_reg_954, DataRAM_2_load_reg_964, DataRAM_1_load_reg_974, DataRAM_load_reg_984, DataRAM_15_load_reg_994, ap_predicate_op133_call_state3, ap_predicate_op134_call_state3, ap_predicate_op135_call_state3, ap_predicate_op136_call_state3, ap_predicate_op137_call_state3, ap_predicate_op138_call_state3, ap_predicate_op139_call_state3, ap_predicate_op140_call_state3, ap_predicate_op141_call_state3, ap_predicate_op142_call_state3, ap_predicate_op143_call_state3, ap_predicate_op144_call_state3, ap_predicate_op145_call_state3, ap_predicate_op146_call_state3, ap_predicate_op147_call_state3, ap_predicate_op148_call_state3, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ap_predicate_op148_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_15_load_reg_994;
            elsif ((ap_predicate_op147_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_load_reg_984;
            elsif ((ap_predicate_op146_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_1_load_reg_974;
            elsif ((ap_predicate_op145_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_2_load_reg_964;
            elsif ((ap_predicate_op144_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_3_load_reg_954;
            elsif ((ap_predicate_op143_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_4_load_reg_944;
            elsif ((ap_predicate_op142_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_5_load_reg_934;
            elsif ((ap_predicate_op141_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_6_load_reg_924;
            elsif ((ap_predicate_op140_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_7_load_reg_914;
            elsif ((ap_predicate_op139_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_8_load_reg_904;
            elsif ((ap_predicate_op138_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_9_load_reg_894;
            elsif ((ap_predicate_op137_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_10_load_reg_884;
            elsif ((ap_predicate_op136_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_11_load_reg_874;
            elsif ((ap_predicate_op135_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_12_load_reg_864;
            elsif ((ap_predicate_op134_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_13_load_reg_854;
            elsif ((ap_predicate_op133_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input1_val <= DataRAM_14_load_reg_844;
            else 
                grp_MUL_MOD_1_fu_558_input1_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_MUL_MOD_1_fu_558_input1_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_MUL_MOD_1_fu_558_input2_val_assign_proc : process(DataRAM_30_load_reg_849, DataRAM_29_load_reg_859, DataRAM_28_load_reg_869, DataRAM_27_load_reg_879, DataRAM_26_load_reg_889, DataRAM_25_load_reg_899, DataRAM_24_load_reg_909, DataRAM_23_load_reg_919, DataRAM_22_load_reg_929, DataRAM_21_load_reg_939, DataRAM_20_load_reg_949, DataRAM_19_load_reg_959, DataRAM_18_load_reg_969, DataRAM_17_load_reg_979, DataRAM_16_load_reg_989, DataRAM_31_load_reg_999, ap_predicate_op133_call_state3, ap_predicate_op134_call_state3, ap_predicate_op135_call_state3, ap_predicate_op136_call_state3, ap_predicate_op137_call_state3, ap_predicate_op138_call_state3, ap_predicate_op139_call_state3, ap_predicate_op140_call_state3, ap_predicate_op141_call_state3, ap_predicate_op142_call_state3, ap_predicate_op143_call_state3, ap_predicate_op144_call_state3, ap_predicate_op145_call_state3, ap_predicate_op146_call_state3, ap_predicate_op147_call_state3, ap_predicate_op148_call_state3, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ap_predicate_op148_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_31_load_reg_999;
            elsif ((ap_predicate_op147_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_16_load_reg_989;
            elsif ((ap_predicate_op146_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_17_load_reg_979;
            elsif ((ap_predicate_op145_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_18_load_reg_969;
            elsif ((ap_predicate_op144_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_19_load_reg_959;
            elsif ((ap_predicate_op143_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_20_load_reg_949;
            elsif ((ap_predicate_op142_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_21_load_reg_939;
            elsif ((ap_predicate_op141_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_22_load_reg_929;
            elsif ((ap_predicate_op140_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_23_load_reg_919;
            elsif ((ap_predicate_op139_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_24_load_reg_909;
            elsif ((ap_predicate_op138_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_25_load_reg_899;
            elsif ((ap_predicate_op137_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_26_load_reg_889;
            elsif ((ap_predicate_op136_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_27_load_reg_879;
            elsif ((ap_predicate_op135_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_28_load_reg_869;
            elsif ((ap_predicate_op134_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_29_load_reg_859;
            elsif ((ap_predicate_op133_call_state3 = ap_const_boolean_1)) then 
                grp_MUL_MOD_1_fu_558_input2_val <= DataRAM_30_load_reg_849;
            else 
                grp_MUL_MOD_1_fu_558_input2_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_MUL_MOD_1_fu_558_input2_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln98_fu_593_p2 <= "1" when (ap_sig_allocacmp_i_5 = ap_const_lv13_1000) else "0";
    lshr_ln5_fu_609_p4 <= ap_sig_allocacmp_i_5(11 downto 4);
    zext_ln98_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_fu_609_p4),64));
end behav;
